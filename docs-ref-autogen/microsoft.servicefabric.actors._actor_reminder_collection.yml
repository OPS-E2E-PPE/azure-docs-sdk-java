### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.actors._actor_reminder_collection
  id: _actor_reminder_collection
  parent: microsoft.servicefabric.actors
  children:
  - microsoft.servicefabric.actors._actor_reminder_collection.put(ActorId,ActorReminderState)
  href: microsoft.servicefabric.actors._actor_reminder_collection.yml
  langs:
  - java
  name: ActorReminderCollection
  nameWithType: ActorReminderCollection
  fullName: microsoft.servicefabric.actors.ActorReminderCollection
  type: Interface
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorReminderCollection.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorReminderCollection.java
    startLine: 8
  package: microsoft.servicefabric.actors
  summary: <p>Captures <xref uid="microsoft.servicefabric.actors._actor_reminder_state" data-throw-if-not-resolved="false">ActorReminderState</xref> for Actors </p>
  syntax:
    content: public interface ActorReminderCollection
- uid: microsoft.servicefabric.actors._actor_reminder_collection.put(ActorId,ActorReminderState)
  id: put(ActorId,ActorReminderState)
  parent: microsoft.servicefabric.actors._actor_reminder_collection
  href: microsoft.servicefabric.actors._actor_reminder_collection.yml
  langs:
  - java
  name: put(ActorId key, ActorReminderState value)
  nameWithType: ActorReminderCollection.put(ActorId key, ActorReminderState value)
  fullName: void microsoft.servicefabric.actors.ActorReminderCollection.put(ActorId key, ActorReminderState value)
  overload: microsoft.servicefabric.actors._actor_reminder_collection.put*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorReminderCollection.java
    startLine: 10
  package: microsoft.servicefabric.actors
  syntax:
    content: public void put(ActorId key, ActorReminderState value)
    parameters:
    - id: key
      type: microsoft.servicefabric.actors._actor_id
    - id: value
      type: microsoft.servicefabric.actors._actor_reminder_state
references:
- uid: microsoft.servicefabric.actors._actor_reminder_collection.put*
  name: put
  nameWithType: ActorReminderCollection.put
  fullName: void microsoft.servicefabric.actors.ActorReminderCollection.put
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor_reminder_collection_impl
- uid: microsoft.servicefabric.actors._actor_id
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_id.yml
  name: ActorId
  nameWithType: ActorId
  fullName: microsoft.servicefabric.actors.ActorId
  type: Class
  summary: >-
    <p>

      <xref uid="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false">ActorId</xref> represents identity of an actor within an actor service. The actors can be identified by <xref uid="" data-throw-if-not-resolved="false">java.lang.String</xref>, <xref uid="" data-throw-if-not-resolved="false">java.util.UUID</xref> or long. </p>
  syntax:
    content: public class ActorId
- uid: microsoft.servicefabric.actors._actor_reminder_state
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_reminder_state.yml
  name: ActorReminderState
  nameWithType: ActorReminderState
  fullName: microsoft.servicefabric.actors.ActorReminderState
  type: Interface
  summary: <p>Represents internal state of <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> Reminder </p>
  syntax:
    content: public interface ActorReminderState
