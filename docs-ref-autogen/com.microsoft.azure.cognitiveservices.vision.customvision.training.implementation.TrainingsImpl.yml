### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  id: TrainingsImpl
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  children:
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegions()
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegions(UUID,CreateImageRegionsOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegionsAsync(UUID,CreateImageRegionsOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegionsAsync(UUID,CreateImageRegionsOptionalParameter,final ServiceCallback<ImageRegionCreateSummary>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegionsWithServiceResponseAsync(UUID,CreateImageRegionsOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegionsWithServiceResponseAsync(UUID,List<ImageRegionCreateEntry>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromData()
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromData(UUID,byte [],CreateImagesFromDataOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromDataAsync(UUID,byte [],CreateImagesFromDataOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromDataAsync(UUID,byte [],CreateImagesFromDataOptionalParameter,final ServiceCallback<ImageCreateSummary>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromDataWithServiceResponseAsync(UUID,byte [],CreateImagesFromDataOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromDataWithServiceResponseAsync(UUID,byte [],List<String>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromFiles(UUID,ImageFileCreateBatch)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromFilesAsync(UUID,ImageFileCreateBatch)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromFilesAsync(UUID,ImageFileCreateBatch,final ServiceCallback<ImageCreateSummary>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromFilesWithServiceResponseAsync(UUID,ImageFileCreateBatch)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromPredictions(UUID,ImageIdCreateBatch)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromPredictionsAsync(UUID,ImageIdCreateBatch)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromPredictionsAsync(UUID,ImageIdCreateBatch,final ServiceCallback<ImageCreateSummary>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromPredictionsWithServiceResponseAsync(UUID,ImageIdCreateBatch)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromUrls(UUID,ImageUrlCreateBatch)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromUrlsAsync(UUID,ImageUrlCreateBatch)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromUrlsAsync(UUID,ImageUrlCreateBatch,final ServiceCallback<ImageCreateSummary>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromUrlsWithServiceResponseAsync(UUID,ImageUrlCreateBatch)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTags()
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTags(UUID,CreateImageTagsOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTagsAsync(UUID,CreateImageTagsOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTagsAsync(UUID,CreateImageTagsOptionalParameter,final ServiceCallback<ImageTagCreateSummary>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTagsWithServiceResponseAsync(UUID,CreateImageTagsOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTagsWithServiceResponseAsync(UUID,List<ImageTagCreateEntry>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProject()
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProject(String,CreateProjectOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProjectAsync(String,CreateProjectOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProjectAsync(String,CreateProjectOptionalParameter,final ServiceCallback<Project>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProjectWithServiceResponseAsync(String,CreateProjectOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProjectWithServiceResponseAsync(String,String,UUID,String)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTag()
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTag(UUID,String,CreateTagOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTagAsync(UUID,String,CreateTagOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTagAsync(UUID,String,CreateTagOptionalParameter,final ServiceCallback<Tag>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTagWithServiceResponseAsync(UUID,String,CreateTagOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTagWithServiceResponseAsync(UUID,String,String)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageRegions(UUID,List<String>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageRegionsAsync(UUID,List<String>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageRegionsAsync(UUID,List<String>,final ServiceCallback<Void>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageRegionsWithServiceResponseAsync(UUID,List<String>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImages(UUID,List<String>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImagesAsync(UUID,List<String>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImagesAsync(UUID,List<String>,final ServiceCallback<Void>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImagesWithServiceResponseAsync(UUID,List<String>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageTags(UUID,List<String>,List<String>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageTagsAsync(UUID,List<String>,List<String>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageTagsAsync(UUID,List<String>,List<String>,final ServiceCallback<Void>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageTagsWithServiceResponseAsync(UUID,List<String>,List<String>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteIteration(UUID,UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteIterationAsync(UUID,UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteIterationAsync(UUID,UUID,final ServiceCallback<Void>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteIterationWithServiceResponseAsync(UUID,UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deletePrediction(UUID,List<String>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deletePredictionAsync(UUID,List<String>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deletePredictionAsync(UUID,List<String>,final ServiceCallback<Void>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deletePredictionWithServiceResponseAsync(UUID,List<String>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteProject(UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteProjectAsync(UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteProjectAsync(UUID,final ServiceCallback<Void>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteProjectWithServiceResponseAsync(UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteTag(UUID,UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteTagAsync(UUID,UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteTagAsync(UUID,UUID,final ServiceCallback<Void>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteTagWithServiceResponseAsync(UUID,UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIteration()
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIteration(UUID,UUID,String,ExportIterationOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIterationAsync(UUID,UUID,String,ExportIterationOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIterationAsync(UUID,UUID,String,ExportIterationOptionalParameter,final ServiceCallback<Export>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIterationWithServiceResponseAsync(UUID,UUID,String,ExportIterationOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIterationWithServiceResponseAsync(UUID,UUID,String,String)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomain(UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainAsync(UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainAsync(UUID,final ServiceCallback<Domain>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomains()
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainsAsync()
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainsAsync(final ServiceCallback<List<Domain>>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainsWithServiceResponseAsync()
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainWithServiceResponseAsync(UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getExports(UUID,UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getExportsAsync(UUID,UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getExportsAsync(UUID,UUID,final ServiceCallback<List<Export>>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getExportsWithServiceResponseAsync(UUID,UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCount()
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCount(UUID,UUID,GetImagePerformanceCountOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCountAsync(UUID,UUID,GetImagePerformanceCountOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCountAsync(UUID,UUID,GetImagePerformanceCountOptionalParameter,final ServiceCallback<Integer>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCountWithServiceResponseAsync(UUID,UUID,GetImagePerformanceCountOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCountWithServiceResponseAsync(UUID,UUID,List<String>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformances()
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformances(UUID,UUID,GetImagePerformancesOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformancesAsync(UUID,UUID,GetImagePerformancesOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformancesAsync(UUID,UUID,GetImagePerformancesOptionalParameter,final ServiceCallback<List<ImagePerformance>>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformancesWithServiceResponseAsync(UUID,UUID,GetImagePerformancesOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformancesWithServiceResponseAsync(UUID,UUID,List<String>,String,Integer,Integer)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImageRegionProposals(UUID,UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImageRegionProposalsAsync(UUID,UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImageRegionProposalsAsync(UUID,UUID,final ServiceCallback<ImageRegionProposal>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImageRegionProposalsWithServiceResponseAsync(UUID,UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIds()
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIds(UUID,GetImagesByIdsOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIdsAsync(UUID,GetImagesByIdsOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIdsAsync(UUID,GetImagesByIdsOptionalParameter,final ServiceCallback<List<Image>>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIdsWithServiceResponseAsync(UUID,GetImagesByIdsOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIdsWithServiceResponseAsync(UUID,List<String>,UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIteration(UUID,UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationAsync(UUID,UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationAsync(UUID,UUID,final ServiceCallback<Iteration>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformance()
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformance(UUID,UUID,GetIterationPerformanceOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformanceAsync(UUID,UUID,GetIterationPerformanceOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformanceAsync(UUID,UUID,GetIterationPerformanceOptionalParameter,final ServiceCallback<IterationPerformance>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformanceWithServiceResponseAsync(UUID,UUID,Double,Double)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformanceWithServiceResponseAsync(UUID,UUID,GetIterationPerformanceOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterations(UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationsAsync(UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationsAsync(UUID,final ServiceCallback<List<Iteration>>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationsWithServiceResponseAsync(UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationWithServiceResponseAsync(UUID,UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProject(UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectAsync(UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectAsync(UUID,final ServiceCallback<Project>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjects()
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectsAsync()
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectsAsync(final ServiceCallback<List<Project>>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectsWithServiceResponseAsync()
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectWithServiceResponseAsync(UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTag()
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTag(UUID,UUID,GetTagOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagAsync(UUID,UUID,GetTagOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagAsync(UUID,UUID,GetTagOptionalParameter,final ServiceCallback<Tag>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCount()
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCount(UUID,GetTaggedImageCountOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCountAsync(UUID,GetTaggedImageCountOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCountAsync(UUID,GetTaggedImageCountOptionalParameter,final ServiceCallback<Integer>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCountWithServiceResponseAsync(UUID,GetTaggedImageCountOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCountWithServiceResponseAsync(UUID,UUID,List<String>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImages()
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImages(UUID,GetTaggedImagesOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImagesAsync(UUID,GetTaggedImagesOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImagesAsync(UUID,GetTaggedImagesOptionalParameter,final ServiceCallback<List<Image>>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImagesWithServiceResponseAsync(UUID,GetTaggedImagesOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImagesWithServiceResponseAsync(UUID,UUID,List<String>,String,Integer,Integer)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTags()
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTags(UUID,GetTagsOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagsAsync(UUID,GetTagsOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagsAsync(UUID,GetTagsOptionalParameter,final ServiceCallback<List<Tag>>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagsWithServiceResponseAsync(UUID,GetTagsOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagsWithServiceResponseAsync(UUID,UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagWithServiceResponseAsync(UUID,UUID,GetTagOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagWithServiceResponseAsync(UUID,UUID,UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCount()
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCount(UUID,GetUntaggedImageCountOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCountAsync(UUID,GetUntaggedImageCountOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCountAsync(UUID,GetUntaggedImageCountOptionalParameter,final ServiceCallback<Integer>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCountWithServiceResponseAsync(UUID,GetUntaggedImageCountOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCountWithServiceResponseAsync(UUID,UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImages()
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImages(UUID,GetUntaggedImagesOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImagesAsync(UUID,GetUntaggedImagesOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImagesAsync(UUID,GetUntaggedImagesOptionalParameter,final ServiceCallback<List<Image>>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImagesWithServiceResponseAsync(UUID,GetUntaggedImagesOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImagesWithServiceResponseAsync(UUID,UUID,String,Integer,Integer)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.queryPredictions(UUID,PredictionQueryToken)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.queryPredictionsAsync(UUID,PredictionQueryToken)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.queryPredictionsAsync(UUID,PredictionQueryToken,final ServiceCallback<PredictionQueryResult>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.queryPredictionsWithServiceResponseAsync(UUID,PredictionQueryToken)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImage()
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImage(UUID,byte [],QuickTestImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageAsync(UUID,byte [],QuickTestImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageAsync(UUID,byte [],QuickTestImageOptionalParameter,final ServiceCallback<ImagePrediction>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrl()
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrl(UUID,QuickTestImageUrlOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrlAsync(UUID,QuickTestImageUrlOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrlAsync(UUID,QuickTestImageUrlOptionalParameter,final ServiceCallback<ImagePrediction>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrlWithServiceResponseAsync(UUID,QuickTestImageUrlOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrlWithServiceResponseAsync(UUID,UUID,String)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageWithServiceResponseAsync(UUID,byte [],QuickTestImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageWithServiceResponseAsync(UUID,byte [],UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.TrainingsImpl(Retrofit,TrainingApiImpl)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.trainProject(UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.trainProjectAsync(UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.trainProjectAsync(UUID,final ServiceCallback<Iteration>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.trainProjectWithServiceResponseAsync(UUID)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateIteration(UUID,UUID,Iteration)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateIterationAsync(UUID,UUID,Iteration)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateIterationAsync(UUID,UUID,Iteration,final ServiceCallback<Iteration>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateIterationWithServiceResponseAsync(UUID,UUID,Iteration)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateProject(UUID,Project)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateProjectAsync(UUID,Project)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateProjectAsync(UUID,Project,final ServiceCallback<Project>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateProjectWithServiceResponseAsync(UUID,Project)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateTag(UUID,UUID,Tag)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateTagAsync(UUID,UUID,Tag)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateTagAsync(UUID,UUID,Tag,final ServiceCallback<Tag>)
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateTagWithServiceResponseAsync(UUID,UUID,Tag)
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: TrainingsImpl
  nameWithType: TrainingsImpl
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  type: Class
  source:
    remote: &o0
      path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 85
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>An instance of this class provides access to all the operations defined in Trainings. </p>"
  syntax:
    content: public class TrainingsImpl implements Trainings
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegions()
  id: createImageRegions()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImageRegions()
  nameWithType: TrainingsImpl.createImageRegions()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegions()
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegions*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3446
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Create a set of image regions. This API accepts a batch of image regions, and optionally tags, to update existing images with region information. There is a limit of 64 entries in the batch.</p>\r\n<p></p>"
  syntax:
    content: public TrainingsCreateImageRegionsParameters createImageRegions()
    return:
      type: 7860d57b
      description: <p>the first stage of the createImageRegions call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageRegions()
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegions(UUID,CreateImageRegionsOptionalParameter)
  id: createImageRegions(UUID,CreateImageRegionsOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImageRegions(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)
  nameWithType: TrainingsImpl.createImageRegions(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegions(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegions*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3344
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Create a set of image regions. This API accepts a batch of image regions, and optionally tags, to update existing images with region information. There is a limit of 64 entries in the batch.</p>\r\n<p></p>"
  syntax:
    content: public ImageRegionCreateSummary createImageRegions(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: createImageRegionsOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageRegionsOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummary
      description: <p>the ImageRegionCreateSummary object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageRegions(UUID,CreateImageRegionsOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegionsAsync(UUID,CreateImageRegionsOptionalParameter)
  id: createImageRegionsAsync(UUID,CreateImageRegionsOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImageRegionsAsync(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)
  nameWithType: TrainingsImpl.createImageRegionsAsync(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegionsAsync(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegionsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3373
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Create a set of image regions. This API accepts a batch of image regions, and optionally tags, to update existing images with region information. There is a limit of 64 entries in the batch.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ImageRegionCreateSummary> createImageRegionsAsync(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: createImageRegionsOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageRegionsOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummarya08ddfce
      description: <p>the observable to the ImageRegionCreateSummary object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageRegionsAsync(UUID,CreateImageRegionsOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegionsAsync(UUID,CreateImageRegionsOptionalParameter,final ServiceCallback<ImageRegionCreateSummary>)
  id: createImageRegionsAsync(UUID,CreateImageRegionsOptionalParameter,final ServiceCallback<ImageRegionCreateSummary>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImageRegionsAsync(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter, final ServiceCallback<ImageRegionCreateSummary> serviceCallback)
  nameWithType: TrainingsImpl.createImageRegionsAsync(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter, final ServiceCallback<ImageRegionCreateSummary> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegionsAsync(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter, final ServiceCallback<ImageRegionCreateSummary> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegionsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3359
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Create a set of image regions. This API accepts a batch of image regions, and optionally tags, to update existing images with region information. There is a limit of 64 entries in the batch.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<ImageRegionCreateSummary> createImageRegionsAsync(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter, final ServiceCallback<ImageRegionCreateSummary> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: createImageRegionsOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageRegionsOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummarya08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummarya08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegionsWithServiceResponseAsync(UUID,CreateImageRegionsOptionalParameter)
  id: createImageRegionsWithServiceResponseAsync(UUID,CreateImageRegionsOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImageRegionsWithServiceResponseAsync(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)
  nameWithType: TrainingsImpl.createImageRegionsWithServiceResponseAsync(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegionsWithServiceResponseAsync(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegionsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3392
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Create a set of image regions. This API accepts a batch of image regions, and optionally tags, to update existing images with region information. There is a limit of 64 entries in the batch.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<ImageRegionCreateSummary>> createImageRegionsWithServiceResponseAsync(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: createImageRegionsOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageRegionsOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummarye7daa122
      description: <p>the observable to the ImageRegionCreateSummary object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegionsWithServiceResponseAsync(UUID,List<ImageRegionCreateEntry>)
  id: createImageRegionsWithServiceResponseAsync(UUID,List<ImageRegionCreateEntry>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImageRegionsWithServiceResponseAsync(UUID projectId, List<ImageRegionCreateEntry> regions)
  nameWithType: TrainingsImpl.createImageRegionsWithServiceResponseAsync(UUID projectId, List<ImageRegionCreateEntry> regions)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegionsWithServiceResponseAsync(UUID projectId, List<ImageRegionCreateEntry> regions)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegionsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3414
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Create a set of image regions. This API accepts a batch of image regions, and optionally tags, to update existing images with region information. There is a limit of 64 entries in the batch.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<ImageRegionCreateSummary>> createImageRegionsWithServiceResponseAsync(UUID projectId, List<ImageRegionCreateEntry> regions)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: regions
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateEntrya08ddfce
      description: <p>the List&lt;ImageRegionCreateEntry&gt; value </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummarye7daa122
      description: <p>the observable to the ImageRegionCreateSummary object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromData()
  id: createImagesFromData()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImagesFromData()
  nameWithType: TrainingsImpl.createImagesFromData()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromData()
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromData*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4214
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Add the provided images to the set of training images. This API accepts body content as multipart/form-data and application/octet-stream. When using multipart multiple image files can be sent at once, with a maximum of 64 files.</p>\r\n<p></p>"
  syntax:
    content: public TrainingsCreateImagesFromDataParameters createImagesFromData()
    return:
      type: ac97658c
      description: <p>the first stage of the createImagesFromData call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromData()
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromData(UUID,byte [],CreateImagesFromDataOptionalParameter)
  id: createImagesFromData(UUID,byte [],CreateImagesFromDataOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImagesFromData(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)
  nameWithType: TrainingsImpl.createImagesFromData(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromData(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromData*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4102
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Add the provided images to the set of training images. This API accepts body content as multipart/form-data and application/octet-stream. When using multipart multiple image files can be sent at once, with a maximum of 64 files.</p>\r\n<p></p>"
  syntax:
    content: public ImageCreateSummary createImagesFromData(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: imageData
      type: ccd9418d
      description: <p>the InputStream value </p>
    - id: createImagesFromDataOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImagesFromDataOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary
      description: <p>the ImageCreateSummary object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromData(UUID,byte [],CreateImagesFromDataOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromDataAsync(UUID,byte [],CreateImagesFromDataOptionalParameter)
  id: createImagesFromDataAsync(UUID,byte [],CreateImagesFromDataOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImagesFromDataAsync(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)
  nameWithType: TrainingsImpl.createImagesFromDataAsync(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromDataAsync(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromDataAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4133
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Add the provided images to the set of training images. This API accepts body content as multipart/form-data and application/octet-stream. When using multipart multiple image files can be sent at once, with a maximum of 64 files.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ImageCreateSummary> createImagesFromDataAsync(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: imageData
      type: ccd9418d
      description: <p>the InputStream value </p>
    - id: createImagesFromDataOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImagesFromDataOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarya08ddfce
      description: <p>the observable to the ImageCreateSummary object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromDataAsync(UUID,byte [],CreateImagesFromDataOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromDataAsync(UUID,byte [],CreateImagesFromDataOptionalParameter,final ServiceCallback<ImageCreateSummary>)
  id: createImagesFromDataAsync(UUID,byte [],CreateImagesFromDataOptionalParameter,final ServiceCallback<ImageCreateSummary>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImagesFromDataAsync(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter, final ServiceCallback<ImageCreateSummary> serviceCallback)
  nameWithType: TrainingsImpl.createImagesFromDataAsync(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter, final ServiceCallback<ImageCreateSummary> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromDataAsync(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter, final ServiceCallback<ImageCreateSummary> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromDataAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4118
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Add the provided images to the set of training images. This API accepts body content as multipart/form-data and application/octet-stream. When using multipart multiple image files can be sent at once, with a maximum of 64 files.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<ImageCreateSummary> createImagesFromDataAsync(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter, final ServiceCallback<ImageCreateSummary> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: imageData
      type: ccd9418d
      description: <p>the InputStream value </p>
    - id: createImagesFromDataOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImagesFromDataOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarya08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarya08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromDataWithServiceResponseAsync(UUID,byte [],CreateImagesFromDataOptionalParameter)
  id: createImagesFromDataWithServiceResponseAsync(UUID,byte [],CreateImagesFromDataOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImagesFromDataWithServiceResponseAsync(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)
  nameWithType: TrainingsImpl.createImagesFromDataWithServiceResponseAsync(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromDataWithServiceResponseAsync(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromDataWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4153
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Add the provided images to the set of training images. This API accepts body content as multipart/form-data and application/octet-stream. When using multipart multiple image files can be sent at once, with a maximum of 64 files.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<ImageCreateSummary>> createImagesFromDataWithServiceResponseAsync(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: imageData
      type: ccd9418d
      description: <p>the InputStream value </p>
    - id: createImagesFromDataOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImagesFromDataOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarye7daa122
      description: <p>the observable to the ImageCreateSummary object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromDataWithServiceResponseAsync(UUID,byte [],List<String>)
  id: createImagesFromDataWithServiceResponseAsync(UUID,byte [],List<String>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImagesFromDataWithServiceResponseAsync(UUID projectId, byte[] imageData, List<String> tagIds)
  nameWithType: TrainingsImpl.createImagesFromDataWithServiceResponseAsync(UUID projectId, byte[] imageData, List<String> tagIds)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromDataWithServiceResponseAsync(UUID projectId, byte[] imageData, List<String> tagIds)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromDataWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4179
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Add the provided images to the set of training images. This API accepts body content as multipart/form-data and application/octet-stream. When using multipart multiple image files can be sent at once, with a maximum of 64 files.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<ImageCreateSummary>> createImagesFromDataWithServiceResponseAsync(UUID projectId, byte[] imageData, List<String> tagIds)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: imageData
      type: ccd9418d
      description: <p>the InputStream value </p>
    - id: tagIds
      type: 7d60c20e
      description: <p>The tags ids with which to tag each image. Limited to 20 </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarye7daa122
      description: <p>the observable to the ImageCreateSummary object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromFiles(UUID,ImageFileCreateBatch)
  id: createImagesFromFiles(UUID,ImageFileCreateBatch)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImagesFromFiles(UUID projectId, ImageFileCreateBatch batch)
  nameWithType: TrainingsImpl.createImagesFromFiles(UUID projectId, ImageFileCreateBatch batch)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromFiles(UUID projectId, ImageFileCreateBatch batch)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromFiles*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3927
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Add the provided batch of images to the set of training images. This API accepts a batch of files, and optionally tags, to create images. There is a limit of 64 images and 20 tags.</p>\r\n<p></p>"
  syntax:
    content: public ImageCreateSummary createImagesFromFiles(UUID projectId, ImageFileCreateBatch batch)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: batch
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageFileCreateBatch
      description: <p>The batch of image files to add. Limited to 64 images and 20 tags per batch </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary
      description: <p>the ImageCreateSummary object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromFiles(UUID,ImageFileCreateBatch)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromFilesAsync(UUID,ImageFileCreateBatch)
  id: createImagesFromFilesAsync(UUID,ImageFileCreateBatch)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImagesFromFilesAsync(UUID projectId, ImageFileCreateBatch batch)
  nameWithType: TrainingsImpl.createImagesFromFilesAsync(UUID projectId, ImageFileCreateBatch batch)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromFilesAsync(UUID projectId, ImageFileCreateBatch batch)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromFilesAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3954
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Add the provided batch of images to the set of training images. This API accepts a batch of files, and optionally tags, to create images. There is a limit of 64 images and 20 tags.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ImageCreateSummary> createImagesFromFilesAsync(UUID projectId, ImageFileCreateBatch batch)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: batch
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageFileCreateBatch
      description: <p>The batch of image files to add. Limited to 64 images and 20 tags per batch </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarya08ddfce
      description: <p>the observable to the ImageCreateSummary object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromFilesAsync(UUID,ImageFileCreateBatch)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromFilesAsync(UUID,ImageFileCreateBatch,final ServiceCallback<ImageCreateSummary>)
  id: createImagesFromFilesAsync(UUID,ImageFileCreateBatch,final ServiceCallback<ImageCreateSummary>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImagesFromFilesAsync(UUID projectId, ImageFileCreateBatch batch, final ServiceCallback<ImageCreateSummary> serviceCallback)
  nameWithType: TrainingsImpl.createImagesFromFilesAsync(UUID projectId, ImageFileCreateBatch batch, final ServiceCallback<ImageCreateSummary> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromFilesAsync(UUID projectId, ImageFileCreateBatch batch, final ServiceCallback<ImageCreateSummary> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromFilesAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3941
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Add the provided batch of images to the set of training images. This API accepts a batch of files, and optionally tags, to create images. There is a limit of 64 images and 20 tags.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<ImageCreateSummary> createImagesFromFilesAsync(UUID projectId, ImageFileCreateBatch batch, final ServiceCallback<ImageCreateSummary> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: batch
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageFileCreateBatch
      description: <p>The batch of image files to add. Limited to 64 images and 20 tags per batch </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarya08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarya08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromFilesWithServiceResponseAsync(UUID,ImageFileCreateBatch)
  id: createImagesFromFilesWithServiceResponseAsync(UUID,ImageFileCreateBatch)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImagesFromFilesWithServiceResponseAsync(UUID projectId, ImageFileCreateBatch batch)
  nameWithType: TrainingsImpl.createImagesFromFilesWithServiceResponseAsync(UUID projectId, ImageFileCreateBatch batch)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromFilesWithServiceResponseAsync(UUID projectId, ImageFileCreateBatch batch)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromFilesWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3972
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Add the provided batch of images to the set of training images. This API accepts a batch of files, and optionally tags, to create images. There is a limit of 64 images and 20 tags.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<ImageCreateSummary>> createImagesFromFilesWithServiceResponseAsync(UUID projectId, ImageFileCreateBatch batch)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: batch
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageFileCreateBatch
      description: <p>The batch of image files to add. Limited to 64 images and 20 tags per batch </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarye7daa122
      description: <p>the observable to the ImageCreateSummary object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromPredictions(UUID,ImageIdCreateBatch)
  id: createImagesFromPredictions(UUID,ImageIdCreateBatch)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImagesFromPredictions(UUID projectId, ImageIdCreateBatch batch)
  nameWithType: TrainingsImpl.createImagesFromPredictions(UUID projectId, ImageIdCreateBatch batch)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromPredictions(UUID projectId, ImageIdCreateBatch batch)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromPredictions*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3751
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Add the specified predicted images to the set of training images. This API creates a batch of images from predicted images specified. There is a limit of 64 images and 20 tags.</p>\r\n<p></p>"
  syntax:
    content: public ImageCreateSummary createImagesFromPredictions(UUID projectId, ImageIdCreateBatch batch)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: batch
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageIdCreateBatch
      description: <p>Image and tag ids. Limted to 64 images and 20 tags per batch </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary
      description: <p>the ImageCreateSummary object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromPredictions(UUID,ImageIdCreateBatch)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromPredictionsAsync(UUID,ImageIdCreateBatch)
  id: createImagesFromPredictionsAsync(UUID,ImageIdCreateBatch)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImagesFromPredictionsAsync(UUID projectId, ImageIdCreateBatch batch)
  nameWithType: TrainingsImpl.createImagesFromPredictionsAsync(UUID projectId, ImageIdCreateBatch batch)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromPredictionsAsync(UUID projectId, ImageIdCreateBatch batch)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromPredictionsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3778
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Add the specified predicted images to the set of training images. This API creates a batch of images from predicted images specified. There is a limit of 64 images and 20 tags.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ImageCreateSummary> createImagesFromPredictionsAsync(UUID projectId, ImageIdCreateBatch batch)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: batch
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageIdCreateBatch
      description: <p>Image and tag ids. Limted to 64 images and 20 tags per batch </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarya08ddfce
      description: <p>the observable to the ImageCreateSummary object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromPredictionsAsync(UUID,ImageIdCreateBatch)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromPredictionsAsync(UUID,ImageIdCreateBatch,final ServiceCallback<ImageCreateSummary>)
  id: createImagesFromPredictionsAsync(UUID,ImageIdCreateBatch,final ServiceCallback<ImageCreateSummary>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImagesFromPredictionsAsync(UUID projectId, ImageIdCreateBatch batch, final ServiceCallback<ImageCreateSummary> serviceCallback)
  nameWithType: TrainingsImpl.createImagesFromPredictionsAsync(UUID projectId, ImageIdCreateBatch batch, final ServiceCallback<ImageCreateSummary> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromPredictionsAsync(UUID projectId, ImageIdCreateBatch batch, final ServiceCallback<ImageCreateSummary> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromPredictionsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3765
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Add the specified predicted images to the set of training images. This API creates a batch of images from predicted images specified. There is a limit of 64 images and 20 tags.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<ImageCreateSummary> createImagesFromPredictionsAsync(UUID projectId, ImageIdCreateBatch batch, final ServiceCallback<ImageCreateSummary> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: batch
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageIdCreateBatch
      description: <p>Image and tag ids. Limted to 64 images and 20 tags per batch </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarya08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarya08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromPredictionsWithServiceResponseAsync(UUID,ImageIdCreateBatch)
  id: createImagesFromPredictionsWithServiceResponseAsync(UUID,ImageIdCreateBatch)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImagesFromPredictionsWithServiceResponseAsync(UUID projectId, ImageIdCreateBatch batch)
  nameWithType: TrainingsImpl.createImagesFromPredictionsWithServiceResponseAsync(UUID projectId, ImageIdCreateBatch batch)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromPredictionsWithServiceResponseAsync(UUID projectId, ImageIdCreateBatch batch)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromPredictionsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3796
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Add the specified predicted images to the set of training images. This API creates a batch of images from predicted images specified. There is a limit of 64 images and 20 tags.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<ImageCreateSummary>> createImagesFromPredictionsWithServiceResponseAsync(UUID projectId, ImageIdCreateBatch batch)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: batch
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageIdCreateBatch
      description: <p>Image and tag ids. Limted to 64 images and 20 tags per batch </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarye7daa122
      description: <p>the observable to the ImageCreateSummary object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromUrls(UUID,ImageUrlCreateBatch)
  id: createImagesFromUrls(UUID,ImageUrlCreateBatch)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImagesFromUrls(UUID projectId, ImageUrlCreateBatch batch)
  nameWithType: TrainingsImpl.createImagesFromUrls(UUID projectId, ImageUrlCreateBatch batch)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromUrls(UUID projectId, ImageUrlCreateBatch batch)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromUrls*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3839
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Add the provided images urls to the set of training images. This API accepts a batch of urls, and optionally tags, to create images. There is a limit of 64 images and 20 tags.</p>\r\n<p></p>"
  syntax:
    content: public ImageCreateSummary createImagesFromUrls(UUID projectId, ImageUrlCreateBatch batch)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: batch
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageUrlCreateBatch
      description: <p>Image urls and tag ids. Limited to 64 images and 20 tags per batch </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary
      description: <p>the ImageCreateSummary object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromUrls(UUID,ImageUrlCreateBatch)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromUrlsAsync(UUID,ImageUrlCreateBatch)
  id: createImagesFromUrlsAsync(UUID,ImageUrlCreateBatch)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImagesFromUrlsAsync(UUID projectId, ImageUrlCreateBatch batch)
  nameWithType: TrainingsImpl.createImagesFromUrlsAsync(UUID projectId, ImageUrlCreateBatch batch)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromUrlsAsync(UUID projectId, ImageUrlCreateBatch batch)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromUrlsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3866
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Add the provided images urls to the set of training images. This API accepts a batch of urls, and optionally tags, to create images. There is a limit of 64 images and 20 tags.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ImageCreateSummary> createImagesFromUrlsAsync(UUID projectId, ImageUrlCreateBatch batch)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: batch
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageUrlCreateBatch
      description: <p>Image urls and tag ids. Limited to 64 images and 20 tags per batch </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarya08ddfce
      description: <p>the observable to the ImageCreateSummary object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromUrlsAsync(UUID,ImageUrlCreateBatch)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromUrlsAsync(UUID,ImageUrlCreateBatch,final ServiceCallback<ImageCreateSummary>)
  id: createImagesFromUrlsAsync(UUID,ImageUrlCreateBatch,final ServiceCallback<ImageCreateSummary>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImagesFromUrlsAsync(UUID projectId, ImageUrlCreateBatch batch, final ServiceCallback<ImageCreateSummary> serviceCallback)
  nameWithType: TrainingsImpl.createImagesFromUrlsAsync(UUID projectId, ImageUrlCreateBatch batch, final ServiceCallback<ImageCreateSummary> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromUrlsAsync(UUID projectId, ImageUrlCreateBatch batch, final ServiceCallback<ImageCreateSummary> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromUrlsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3853
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Add the provided images urls to the set of training images. This API accepts a batch of urls, and optionally tags, to create images. There is a limit of 64 images and 20 tags.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<ImageCreateSummary> createImagesFromUrlsAsync(UUID projectId, ImageUrlCreateBatch batch, final ServiceCallback<ImageCreateSummary> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: batch
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageUrlCreateBatch
      description: <p>Image urls and tag ids. Limited to 64 images and 20 tags per batch </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarya08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarya08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromUrlsWithServiceResponseAsync(UUID,ImageUrlCreateBatch)
  id: createImagesFromUrlsWithServiceResponseAsync(UUID,ImageUrlCreateBatch)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImagesFromUrlsWithServiceResponseAsync(UUID projectId, ImageUrlCreateBatch batch)
  nameWithType: TrainingsImpl.createImagesFromUrlsWithServiceResponseAsync(UUID projectId, ImageUrlCreateBatch batch)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromUrlsWithServiceResponseAsync(UUID projectId, ImageUrlCreateBatch batch)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromUrlsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3884
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Add the provided images urls to the set of training images. This API accepts a batch of urls, and optionally tags, to create images. There is a limit of 64 images and 20 tags.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<ImageCreateSummary>> createImagesFromUrlsWithServiceResponseAsync(UUID projectId, ImageUrlCreateBatch batch)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: batch
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageUrlCreateBatch
      description: <p>Image urls and tag ids. Limited to 64 images and 20 tags per batch </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarye7daa122
      description: <p>the observable to the ImageCreateSummary object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTags()
  id: createImageTags()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImageTags()
  nameWithType: TrainingsImpl.createImageTags()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTags()
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTags*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3692
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Associate a set of images with a set of tags.</p>\r\n<p></p>"
  syntax:
    content: public TrainingsCreateImageTagsParameters createImageTags()
    return:
      type: bd757fc0
      description: <p>the first stage of the createImageTags call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageTags()
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTags(UUID,CreateImageTagsOptionalParameter)
  id: createImageTags(UUID,CreateImageTagsOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImageTags(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)
  nameWithType: TrainingsImpl.createImageTags(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTags(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTags*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3598
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Associate a set of images with a set of tags.</p>\r\n<p></p>"
  syntax:
    content: public ImageTagCreateSummary createImageTags(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: createImageTagsOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageTagsOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummary
      description: <p>the ImageTagCreateSummary object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageTags(UUID,CreateImageTagsOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTagsAsync(UUID,CreateImageTagsOptionalParameter)
  id: createImageTagsAsync(UUID,CreateImageTagsOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImageTagsAsync(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)
  nameWithType: TrainingsImpl.createImageTagsAsync(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTagsAsync(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTagsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3623
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Associate a set of images with a set of tags.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ImageTagCreateSummary> createImageTagsAsync(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: createImageTagsOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageTagsOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummarya08ddfce
      description: <p>the observable to the ImageTagCreateSummary object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageTagsAsync(UUID,CreateImageTagsOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTagsAsync(UUID,CreateImageTagsOptionalParameter,final ServiceCallback<ImageTagCreateSummary>)
  id: createImageTagsAsync(UUID,CreateImageTagsOptionalParameter,final ServiceCallback<ImageTagCreateSummary>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImageTagsAsync(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter, final ServiceCallback<ImageTagCreateSummary> serviceCallback)
  nameWithType: TrainingsImpl.createImageTagsAsync(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter, final ServiceCallback<ImageTagCreateSummary> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTagsAsync(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter, final ServiceCallback<ImageTagCreateSummary> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTagsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3611
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Associate a set of images with a set of tags.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<ImageTagCreateSummary> createImageTagsAsync(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter, final ServiceCallback<ImageTagCreateSummary> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: createImageTagsOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageTagsOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummarya08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummarya08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTagsWithServiceResponseAsync(UUID,CreateImageTagsOptionalParameter)
  id: createImageTagsWithServiceResponseAsync(UUID,CreateImageTagsOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImageTagsWithServiceResponseAsync(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)
  nameWithType: TrainingsImpl.createImageTagsWithServiceResponseAsync(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTagsWithServiceResponseAsync(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTagsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3640
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Associate a set of images with a set of tags.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<ImageTagCreateSummary>> createImageTagsWithServiceResponseAsync(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: createImageTagsOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageTagsOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummarye7daa122
      description: <p>the observable to the ImageTagCreateSummary object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTagsWithServiceResponseAsync(UUID,List<ImageTagCreateEntry>)
  id: createImageTagsWithServiceResponseAsync(UUID,List<ImageTagCreateEntry>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createImageTagsWithServiceResponseAsync(UUID projectId, List<ImageTagCreateEntry> tags)
  nameWithType: TrainingsImpl.createImageTagsWithServiceResponseAsync(UUID projectId, List<ImageTagCreateEntry> tags)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTagsWithServiceResponseAsync(UUID projectId, List<ImageTagCreateEntry> tags)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTagsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3660
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Associate a set of images with a set of tags.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<ImageTagCreateSummary>> createImageTagsWithServiceResponseAsync(UUID projectId, List<ImageTagCreateEntry> tags)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: tags
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateEntrya08ddfce
      description: <p>the List&lt;ImageTagCreateEntry&gt; value </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummarye7daa122
      description: <p>the observable to the ImageTagCreateSummary object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProject()
  id: createProject()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createProject()
  nameWithType: TrainingsImpl.createProject()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProject()
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProject*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2453
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Create a project.</p>\r\n<p></p>"
  syntax:
    content: public TrainingsCreateProjectParameters createProject()
    return:
      type: 17fdca73
      description: <p>the first stage of the createProject call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createProject()
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProject(String,CreateProjectOptionalParameter)
  id: createProject(String,CreateProjectOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createProject(String name, CreateProjectOptionalParameter createProjectOptionalParameter)
  nameWithType: TrainingsImpl.createProject(String name, CreateProjectOptionalParameter createProjectOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProject(String name, CreateProjectOptionalParameter createProjectOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProject*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2358
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Create a project.</p>\r\n<p></p>"
  syntax:
    content: public Project createProject(String name, CreateProjectOptionalParameter createProjectOptionalParameter)
    parameters:
    - id: name
      type: "26831127"
      description: <p>Name of the project </p>
    - id: createProjectOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateProjectOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
      description: <p>the Project object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createProject(String,CreateProjectOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProjectAsync(String,CreateProjectOptionalParameter)
  id: createProjectAsync(String,CreateProjectOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createProjectAsync(String name, CreateProjectOptionalParameter createProjectOptionalParameter)
  nameWithType: TrainingsImpl.createProjectAsync(String name, CreateProjectOptionalParameter createProjectOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProjectAsync(String name, CreateProjectOptionalParameter createProjectOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProjectAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2383
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Create a project.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Project> createProjectAsync(String name, CreateProjectOptionalParameter createProjectOptionalParameter)
    parameters:
    - id: name
      type: "26831127"
      description: <p>Name of the project </p>
    - id: createProjectOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateProjectOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecta08ddfce
      description: <p>the observable to the Project object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createProjectAsync(String,CreateProjectOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProjectAsync(String,CreateProjectOptionalParameter,final ServiceCallback<Project>)
  id: createProjectAsync(String,CreateProjectOptionalParameter,final ServiceCallback<Project>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createProjectAsync(String name, CreateProjectOptionalParameter createProjectOptionalParameter, final ServiceCallback<Project> serviceCallback)
  nameWithType: TrainingsImpl.createProjectAsync(String name, CreateProjectOptionalParameter createProjectOptionalParameter, final ServiceCallback<Project> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProjectAsync(String name, CreateProjectOptionalParameter createProjectOptionalParameter, final ServiceCallback<Project> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProjectAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2371
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Create a project.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Project> createProjectAsync(String name, CreateProjectOptionalParameter createProjectOptionalParameter, final ServiceCallback<Project> serviceCallback)
    parameters:
    - id: name
      type: "26831127"
      description: <p>Name of the project </p>
    - id: createProjectOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateProjectOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProjectWithServiceResponseAsync(String,CreateProjectOptionalParameter)
  id: createProjectWithServiceResponseAsync(String,CreateProjectOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createProjectWithServiceResponseAsync(String name, CreateProjectOptionalParameter createProjectOptionalParameter)
  nameWithType: TrainingsImpl.createProjectWithServiceResponseAsync(String name, CreateProjectOptionalParameter createProjectOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProjectWithServiceResponseAsync(String name, CreateProjectOptionalParameter createProjectOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProjectWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2400
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Create a project.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Project>> createProjectWithServiceResponseAsync(String name, CreateProjectOptionalParameter createProjectOptionalParameter)
    parameters:
    - id: name
      type: "26831127"
      description: <p>Name of the project </p>
    - id: createProjectOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateProjectOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecte7daa122
      description: <p>the observable to the Project object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProjectWithServiceResponseAsync(String,String,UUID,String)
  id: createProjectWithServiceResponseAsync(String,String,UUID,String)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createProjectWithServiceResponseAsync(String name, String description, UUID domainId, String classificationType)
  nameWithType: TrainingsImpl.createProjectWithServiceResponseAsync(String name, String description, UUID domainId, String classificationType)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProjectWithServiceResponseAsync(String name, String description, UUID domainId, String classificationType)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProjectWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2424
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Create a project.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Project>> createProjectWithServiceResponseAsync(String name, String description, UUID domainId, String classificationType)
    parameters:
    - id: name
      type: "26831127"
      description: <p>Name of the project </p>
    - id: description
      type: "26831127"
      description: <p>The description of the project </p>
    - id: domainId
      type: add9545a
      description: <p>The id of the domain to use for this project. Defaults to General </p>
    - id: classificationType
      type: "26831127"
      description: "<p>The type of classifier to create for this project. Possible values include: 'Multiclass', 'Multilabel' </p>"
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecte7daa122
      description: <p>the observable to the Project object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTag()
  id: createTag()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createTag()
  nameWithType: TrainingsImpl.createTag()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTag()
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTag*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 386
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Create a tag for the project.</p>\r\n<p></p>"
  syntax:
    content: public TrainingsCreateTagParameters createTag()
    return:
      type: ece1e11a
      description: <p>the first stage of the createTag call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createTag()
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTag(UUID,String,CreateTagOptionalParameter)
  id: createTag(UUID,String,CreateTagOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createTag(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)
  nameWithType: TrainingsImpl.createTag(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTag(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTag*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 285
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Create a tag for the project.</p>\r\n<p></p>"
  syntax:
    content: public Tag createTag(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: name
      type: "26831127"
      description: <p>The tag name </p>
    - id: createTagOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateTagOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
      description: <p>the Tag object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createTag(UUID,String,CreateTagOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTagAsync(UUID,String,CreateTagOptionalParameter)
  id: createTagAsync(UUID,String,CreateTagOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createTagAsync(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)
  nameWithType: TrainingsImpl.createTagAsync(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTagAsync(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTagAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 312
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Create a tag for the project.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Tag> createTagAsync(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: name
      type: "26831127"
      description: <p>The tag name </p>
    - id: createTagOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateTagOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Taga08ddfce
      description: <p>the observable to the Tag object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createTagAsync(UUID,String,CreateTagOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTagAsync(UUID,String,CreateTagOptionalParameter,final ServiceCallback<Tag>)
  id: createTagAsync(UUID,String,CreateTagOptionalParameter,final ServiceCallback<Tag>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createTagAsync(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter, final ServiceCallback<Tag> serviceCallback)
  nameWithType: TrainingsImpl.createTagAsync(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter, final ServiceCallback<Tag> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTagAsync(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter, final ServiceCallback<Tag> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTagAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 299
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Create a tag for the project.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Tag> createTagAsync(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter, final ServiceCallback<Tag> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: name
      type: "26831127"
      description: <p>The tag name </p>
    - id: createTagOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateTagOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Taga08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Taga08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTagWithServiceResponseAsync(UUID,String,CreateTagOptionalParameter)
  id: createTagWithServiceResponseAsync(UUID,String,CreateTagOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createTagWithServiceResponseAsync(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)
  nameWithType: TrainingsImpl.createTagWithServiceResponseAsync(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTagWithServiceResponseAsync(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTagWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 330
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Create a tag for the project.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Tag>> createTagWithServiceResponseAsync(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: name
      type: "26831127"
      description: <p>The tag name </p>
    - id: createTagOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateTagOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tage7daa122
      description: <p>the observable to the Tag object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTagWithServiceResponseAsync(UUID,String,String)
  id: createTagWithServiceResponseAsync(UUID,String,String)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: createTagWithServiceResponseAsync(UUID projectId, String name, String description)
  nameWithType: TrainingsImpl.createTagWithServiceResponseAsync(UUID projectId, String name, String description)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTagWithServiceResponseAsync(UUID projectId, String name, String description)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTagWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 354
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Create a tag for the project.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Tag>> createTagWithServiceResponseAsync(UUID projectId, String name, String description)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: name
      type: "26831127"
      description: <p>The tag name </p>
    - id: description
      type: "26831127"
      description: <p>Optional description for the tag </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tage7daa122
      description: <p>the observable to the Tag object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageRegions(UUID,List<String>)
  id: deleteImageRegions(UUID,List<String>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deleteImageRegions(UUID projectId, List<String> regionIds)
  nameWithType: TrainingsImpl.deleteImageRegions(UUID projectId, List<String> regionIds)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageRegions(UUID projectId, List<String> regionIds)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageRegions*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3256
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Delete a set of image regions.</p>\r\n<p></p>"
  syntax:
    content: public void deleteImageRegions(UUID projectId, List<String> regionIds)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: regionIds
      type: 7d60c20e
      description: <p>Regions to delete. Limited to 64 </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImageRegions(UUID,List<String>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageRegionsAsync(UUID,List<String>)
  id: deleteImageRegionsAsync(UUID,List<String>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deleteImageRegionsAsync(UUID projectId, List<String> regionIds)
  nameWithType: TrainingsImpl.deleteImageRegionsAsync(UUID projectId, List<String> regionIds)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageRegionsAsync(UUID projectId, List<String> regionIds)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageRegionsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3281
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Delete a set of image regions.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> deleteImageRegionsAsync(UUID projectId, List<String> regionIds)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: regionIds
      type: 7d60c20e
      description: <p>Regions to delete. Limited to 64 </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImageRegionsAsync(UUID,List<String>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageRegionsAsync(UUID,List<String>,final ServiceCallback<Void>)
  id: deleteImageRegionsAsync(UUID,List<String>,final ServiceCallback<Void>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deleteImageRegionsAsync(UUID projectId, List<String> regionIds, final ServiceCallback<Void> serviceCallback)
  nameWithType: TrainingsImpl.deleteImageRegionsAsync(UUID projectId, List<String> regionIds, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageRegionsAsync(UUID projectId, List<String> regionIds, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageRegionsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3269
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Delete a set of image regions.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> deleteImageRegionsAsync(UUID projectId, List<String> regionIds, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: regionIds
      type: 7d60c20e
      description: <p>Regions to delete. Limited to 64 </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageRegionsWithServiceResponseAsync(UUID,List<String>)
  id: deleteImageRegionsWithServiceResponseAsync(UUID,List<String>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deleteImageRegionsWithServiceResponseAsync(UUID projectId, List<String> regionIds)
  nameWithType: TrainingsImpl.deleteImageRegionsWithServiceResponseAsync(UUID projectId, List<String> regionIds)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageRegionsWithServiceResponseAsync(UUID projectId, List<String> regionIds)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageRegionsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3298
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Delete a set of image regions.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Void>> deleteImageRegionsWithServiceResponseAsync(UUID projectId, List<String> regionIds)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: regionIds
      type: 7d60c20e
      description: <p>Regions to delete. Limited to 64 </p>
    return:
      type: 27015fa1
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImages(UUID,List<String>)
  id: deleteImages(UUID,List<String>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deleteImages(UUID projectId, List<String> imageIds)
  nameWithType: TrainingsImpl.deleteImages(UUID projectId, List<String> imageIds)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImages(UUID projectId, List<String> imageIds)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImages*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4013
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Delete images from the set of training images.</p>\r\n<p></p>"
  syntax:
    content: public void deleteImages(UUID projectId, List<String> imageIds)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: imageIds
      type: 7d60c20e
      description: <p>Ids of the images to be deleted. Limted to 256 images per batch </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImages(UUID,List<String>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImagesAsync(UUID,List<String>)
  id: deleteImagesAsync(UUID,List<String>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deleteImagesAsync(UUID projectId, List<String> imageIds)
  nameWithType: TrainingsImpl.deleteImagesAsync(UUID projectId, List<String> imageIds)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImagesAsync(UUID projectId, List<String> imageIds)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImagesAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4038
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Delete images from the set of training images.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> deleteImagesAsync(UUID projectId, List<String> imageIds)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: imageIds
      type: 7d60c20e
      description: <p>Ids of the images to be deleted. Limted to 256 images per batch </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImagesAsync(UUID,List<String>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImagesAsync(UUID,List<String>,final ServiceCallback<Void>)
  id: deleteImagesAsync(UUID,List<String>,final ServiceCallback<Void>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deleteImagesAsync(UUID projectId, List<String> imageIds, final ServiceCallback<Void> serviceCallback)
  nameWithType: TrainingsImpl.deleteImagesAsync(UUID projectId, List<String> imageIds, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImagesAsync(UUID projectId, List<String> imageIds, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImagesAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4026
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Delete images from the set of training images.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> deleteImagesAsync(UUID projectId, List<String> imageIds, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: imageIds
      type: 7d60c20e
      description: <p>Ids of the images to be deleted. Limted to 256 images per batch </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImagesWithServiceResponseAsync(UUID,List<String>)
  id: deleteImagesWithServiceResponseAsync(UUID,List<String>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deleteImagesWithServiceResponseAsync(UUID projectId, List<String> imageIds)
  nameWithType: TrainingsImpl.deleteImagesWithServiceResponseAsync(UUID projectId, List<String> imageIds)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImagesWithServiceResponseAsync(UUID projectId, List<String> imageIds)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImagesWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4055
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Delete images from the set of training images.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Void>> deleteImagesWithServiceResponseAsync(UUID projectId, List<String> imageIds)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: imageIds
      type: 7d60c20e
      description: <p>Ids of the images to be deleted. Limted to 256 images per batch </p>
    return:
      type: 27015fa1
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageTags(UUID,List<String>,List<String>)
  id: deleteImageTags(UUID,List<String>,List<String>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deleteImageTags(UUID projectId, List<String> imageIds, List<String> tagIds)
  nameWithType: TrainingsImpl.deleteImageTags(UUID projectId, List<String> imageIds, List<String> tagIds)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageTags(UUID projectId, List<String> imageIds, List<String> tagIds)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageTags*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3504
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Remove a set of tags from a set of images.</p>\r\n<p></p>"
  syntax:
    content: public void deleteImageTags(UUID projectId, List<String> imageIds, List<String> tagIds)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: imageIds
      type: 7d60c20e
      description: <p>Image ids. Limited to 64 images </p>
    - id: tagIds
      type: 7d60c20e
      description: <p>Tags to be deleted from the specified images. Limted to 20 tags </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImageTags(UUID,List<String>,List<String>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageTagsAsync(UUID,List<String>,List<String>)
  id: deleteImageTagsAsync(UUID,List<String>,List<String>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deleteImageTagsAsync(UUID projectId, List<String> imageIds, List<String> tagIds)
  nameWithType: TrainingsImpl.deleteImageTagsAsync(UUID projectId, List<String> imageIds, List<String> tagIds)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageTagsAsync(UUID projectId, List<String> imageIds, List<String> tagIds)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageTagsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3531
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Remove a set of tags from a set of images.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> deleteImageTagsAsync(UUID projectId, List<String> imageIds, List<String> tagIds)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: imageIds
      type: 7d60c20e
      description: <p>Image ids. Limited to 64 images </p>
    - id: tagIds
      type: 7d60c20e
      description: <p>Tags to be deleted from the specified images. Limted to 20 tags </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImageTagsAsync(UUID,List<String>,List<String>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageTagsAsync(UUID,List<String>,List<String>,final ServiceCallback<Void>)
  id: deleteImageTagsAsync(UUID,List<String>,List<String>,final ServiceCallback<Void>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deleteImageTagsAsync(UUID projectId, List<String> imageIds, List<String> tagIds, final ServiceCallback<Void> serviceCallback)
  nameWithType: TrainingsImpl.deleteImageTagsAsync(UUID projectId, List<String> imageIds, List<String> tagIds, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageTagsAsync(UUID projectId, List<String> imageIds, List<String> tagIds, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageTagsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3518
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Remove a set of tags from a set of images.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> deleteImageTagsAsync(UUID projectId, List<String> imageIds, List<String> tagIds, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: imageIds
      type: 7d60c20e
      description: <p>Image ids. Limited to 64 images </p>
    - id: tagIds
      type: 7d60c20e
      description: <p>Tags to be deleted from the specified images. Limted to 20 tags </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageTagsWithServiceResponseAsync(UUID,List<String>,List<String>)
  id: deleteImageTagsWithServiceResponseAsync(UUID,List<String>,List<String>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deleteImageTagsWithServiceResponseAsync(UUID projectId, List<String> imageIds, List<String> tagIds)
  nameWithType: TrainingsImpl.deleteImageTagsWithServiceResponseAsync(UUID projectId, List<String> imageIds, List<String> tagIds)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageTagsWithServiceResponseAsync(UUID projectId, List<String> imageIds, List<String> tagIds)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageTagsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3549
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Remove a set of tags from a set of images.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Void>> deleteImageTagsWithServiceResponseAsync(UUID projectId, List<String> imageIds, List<String> tagIds)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: imageIds
      type: 7d60c20e
      description: <p>Image ids. Limited to 64 images </p>
    - id: tagIds
      type: 7d60c20e
      description: <p>Tags to be deleted from the specified images. Limted to 20 tags </p>
    return:
      type: 27015fa1
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteIteration(UUID,UUID)
  id: deleteIteration(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deleteIteration(UUID projectId, UUID iterationId)
  nameWithType: TrainingsImpl.deleteIteration(UUID projectId, UUID iterationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteIteration(UUID projectId, UUID iterationId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteIteration*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1880
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Delete a specific iteration of a project.</p>\r\n<p></p>"
  syntax:
    content: public void deleteIteration(UUID projectId, UUID iterationId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteIteration(UUID,UUID)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteIterationAsync(UUID,UUID)
  id: deleteIterationAsync(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deleteIterationAsync(UUID projectId, UUID iterationId)
  nameWithType: TrainingsImpl.deleteIterationAsync(UUID projectId, UUID iterationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteIterationAsync(UUID projectId, UUID iterationId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteIterationAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1905
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Delete a specific iteration of a project.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> deleteIterationAsync(UUID projectId, UUID iterationId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteIterationAsync(UUID,UUID)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteIterationAsync(UUID,UUID,final ServiceCallback<Void>)
  id: deleteIterationAsync(UUID,UUID,final ServiceCallback<Void>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deleteIterationAsync(UUID projectId, UUID iterationId, final ServiceCallback<Void> serviceCallback)
  nameWithType: TrainingsImpl.deleteIterationAsync(UUID projectId, UUID iterationId, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteIterationAsync(UUID projectId, UUID iterationId, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteIterationAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1893
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Delete a specific iteration of a project.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> deleteIterationAsync(UUID projectId, UUID iterationId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteIterationWithServiceResponseAsync(UUID,UUID)
  id: deleteIterationWithServiceResponseAsync(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deleteIterationWithServiceResponseAsync(UUID projectId, UUID iterationId)
  nameWithType: TrainingsImpl.deleteIterationWithServiceResponseAsync(UUID projectId, UUID iterationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteIterationWithServiceResponseAsync(UUID projectId, UUID iterationId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteIterationWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1922
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Delete a specific iteration of a project.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Void>> deleteIterationWithServiceResponseAsync(UUID projectId, UUID iterationId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id </p>
    return:
      type: 27015fa1
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deletePrediction(UUID,List<String>)
  id: deletePrediction(UUID,List<String>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deletePrediction(UUID projectId, List<String> ids)
  nameWithType: TrainingsImpl.deletePrediction(UUID projectId, List<String> ids)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deletePrediction(UUID projectId, List<String> ids)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deletePrediction*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3085
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Delete a set of predicted images and their associated prediction results.</p>\r\n<p></p>"
  syntax:
    content: public void deletePrediction(UUID projectId, List<String> ids)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: ids
      type: 7d60c20e
      description: <p>The prediction ids. Limited to 64 </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deletePrediction(UUID,List<String>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deletePredictionAsync(UUID,List<String>)
  id: deletePredictionAsync(UUID,List<String>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deletePredictionAsync(UUID projectId, List<String> ids)
  nameWithType: TrainingsImpl.deletePredictionAsync(UUID projectId, List<String> ids)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deletePredictionAsync(UUID projectId, List<String> ids)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deletePredictionAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3110
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Delete a set of predicted images and their associated prediction results.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> deletePredictionAsync(UUID projectId, List<String> ids)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: ids
      type: 7d60c20e
      description: <p>The prediction ids. Limited to 64 </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deletePredictionAsync(UUID,List<String>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deletePredictionAsync(UUID,List<String>,final ServiceCallback<Void>)
  id: deletePredictionAsync(UUID,List<String>,final ServiceCallback<Void>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deletePredictionAsync(UUID projectId, List<String> ids, final ServiceCallback<Void> serviceCallback)
  nameWithType: TrainingsImpl.deletePredictionAsync(UUID projectId, List<String> ids, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deletePredictionAsync(UUID projectId, List<String> ids, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deletePredictionAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3098
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Delete a set of predicted images and their associated prediction results.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> deletePredictionAsync(UUID projectId, List<String> ids, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: ids
      type: 7d60c20e
      description: <p>The prediction ids. Limited to 64 </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deletePredictionWithServiceResponseAsync(UUID,List<String>)
  id: deletePredictionWithServiceResponseAsync(UUID,List<String>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deletePredictionWithServiceResponseAsync(UUID projectId, List<String> ids)
  nameWithType: TrainingsImpl.deletePredictionWithServiceResponseAsync(UUID projectId, List<String> ids)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deletePredictionWithServiceResponseAsync(UUID projectId, List<String> ids)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deletePredictionWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3127
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Delete a set of predicted images and their associated prediction results.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Void>> deletePredictionWithServiceResponseAsync(UUID projectId, List<String> ids)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: ids
      type: 7d60c20e
      description: <p>The prediction ids. Limited to 64 </p>
    return:
      type: 27015fa1
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteProject(UUID)
  id: deleteProject(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deleteProject(UUID projectId)
  nameWithType: TrainingsImpl.deleteProject(UUID projectId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteProject(UUID projectId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteProject*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2204
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Delete a specific project.</p>\r\n<p></p>"
  syntax:
    content: public void deleteProject(UUID projectId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteProject(UUID)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteProjectAsync(UUID)
  id: deleteProjectAsync(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deleteProjectAsync(UUID projectId)
  nameWithType: TrainingsImpl.deleteProjectAsync(UUID projectId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteProjectAsync(UUID projectId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteProjectAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2227
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Delete a specific project.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> deleteProjectAsync(UUID projectId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteProjectAsync(UUID)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteProjectAsync(UUID,final ServiceCallback<Void>)
  id: deleteProjectAsync(UUID,final ServiceCallback<Void>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deleteProjectAsync(UUID projectId, final ServiceCallback<Void> serviceCallback)
  nameWithType: TrainingsImpl.deleteProjectAsync(UUID projectId, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteProjectAsync(UUID projectId, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteProjectAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2216
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Delete a specific project.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> deleteProjectAsync(UUID projectId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteProjectWithServiceResponseAsync(UUID)
  id: deleteProjectWithServiceResponseAsync(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deleteProjectWithServiceResponseAsync(UUID projectId)
  nameWithType: TrainingsImpl.deleteProjectWithServiceResponseAsync(UUID projectId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteProjectWithServiceResponseAsync(UUID projectId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteProjectWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2243
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Delete a specific project.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Void>> deleteProjectWithServiceResponseAsync(UUID projectId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    return:
      type: 27015fa1
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteTag(UUID,UUID)
  id: deleteTag(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deleteTag(UUID projectId, UUID tagId)
  nameWithType: TrainingsImpl.deleteTag(UUID projectId, UUID tagId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteTag(UUID projectId, UUID tagId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteTag*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 691
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Delete a tag from the project.</p>\r\n<p></p>"
  syntax:
    content: public void deleteTag(UUID projectId, UUID tagId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: tagId
      type: add9545a
      description: <p>Id of the tag to be deleted </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteTag(UUID,UUID)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteTagAsync(UUID,UUID)
  id: deleteTagAsync(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deleteTagAsync(UUID projectId, UUID tagId)
  nameWithType: TrainingsImpl.deleteTagAsync(UUID projectId, UUID tagId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteTagAsync(UUID projectId, UUID tagId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteTagAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 716
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Delete a tag from the project.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> deleteTagAsync(UUID projectId, UUID tagId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: tagId
      type: add9545a
      description: <p>Id of the tag to be deleted </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteTagAsync(UUID,UUID)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteTagAsync(UUID,UUID,final ServiceCallback<Void>)
  id: deleteTagAsync(UUID,UUID,final ServiceCallback<Void>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deleteTagAsync(UUID projectId, UUID tagId, final ServiceCallback<Void> serviceCallback)
  nameWithType: TrainingsImpl.deleteTagAsync(UUID projectId, UUID tagId, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteTagAsync(UUID projectId, UUID tagId, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteTagAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 704
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Delete a tag from the project.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> deleteTagAsync(UUID projectId, UUID tagId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: tagId
      type: add9545a
      description: <p>Id of the tag to be deleted </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteTagWithServiceResponseAsync(UUID,UUID)
  id: deleteTagWithServiceResponseAsync(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: deleteTagWithServiceResponseAsync(UUID projectId, UUID tagId)
  nameWithType: TrainingsImpl.deleteTagWithServiceResponseAsync(UUID projectId, UUID tagId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteTagWithServiceResponseAsync(UUID projectId, UUID tagId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteTagWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 733
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Delete a tag from the project.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Void>> deleteTagWithServiceResponseAsync(UUID projectId, UUID tagId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: tagId
      type: add9545a
      description: <p>Id of the tag to be deleted </p>
    return:
      type: 27015fa1
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIteration()
  id: exportIteration()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: exportIteration()
  nameWithType: TrainingsImpl.exportIteration()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIteration()
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIteration*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1056
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Export a trained iteration.</p>\r\n<p></p>"
  syntax:
    content: public TrainingsExportIterationParameters exportIteration()
    return:
      type: 088c1c99
      description: <p>the first stage of the exportIteration call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.exportIteration()
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIteration(UUID,UUID,String,ExportIterationOptionalParameter)
  id: exportIteration(UUID,UUID,String,ExportIterationOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: exportIteration(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)
  nameWithType: TrainingsImpl.exportIteration(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIteration(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIteration*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 945
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Export a trained iteration.</p>\r\n<p></p>"
  syntax:
    content: public Export exportIteration(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id </p>
    - id: platform
      type: "26831127"
      description: "<p>The target platform (coreml or tensorflow). Possible values include: 'CoreML', 'TensorFlow', 'DockerFile', 'ONNX' </p>"
    - id: exportIterationOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ExportIterationOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export
      description: <p>the Export object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.exportIteration(UUID,UUID,String,ExportIterationOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIterationAsync(UUID,UUID,String,ExportIterationOptionalParameter)
  id: exportIterationAsync(UUID,UUID,String,ExportIterationOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: exportIterationAsync(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)
  nameWithType: TrainingsImpl.exportIterationAsync(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIterationAsync(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIterationAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 974
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Export a trained iteration.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Export> exportIterationAsync(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id </p>
    - id: platform
      type: "26831127"
      description: "<p>The target platform (coreml or tensorflow). Possible values include: 'CoreML', 'TensorFlow', 'DockerFile', 'ONNX' </p>"
    - id: exportIterationOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ExportIterationOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Exporta08ddfce
      description: <p>the observable to the Export object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.exportIterationAsync(UUID,UUID,String,ExportIterationOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIterationAsync(UUID,UUID,String,ExportIterationOptionalParameter,final ServiceCallback<Export>)
  id: exportIterationAsync(UUID,UUID,String,ExportIterationOptionalParameter,final ServiceCallback<Export>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: exportIterationAsync(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter, final ServiceCallback<Export> serviceCallback)
  nameWithType: TrainingsImpl.exportIterationAsync(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter, final ServiceCallback<Export> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIterationAsync(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter, final ServiceCallback<Export> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIterationAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 960
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Export a trained iteration.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Export> exportIterationAsync(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter, final ServiceCallback<Export> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id </p>
    - id: platform
      type: "26831127"
      description: "<p>The target platform (coreml or tensorflow). Possible values include: 'CoreML', 'TensorFlow', 'DockerFile', 'ONNX' </p>"
    - id: exportIterationOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ExportIterationOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Exporta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Exporta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIterationWithServiceResponseAsync(UUID,UUID,String,ExportIterationOptionalParameter)
  id: exportIterationWithServiceResponseAsync(UUID,UUID,String,ExportIterationOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: exportIterationWithServiceResponseAsync(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)
  nameWithType: TrainingsImpl.exportIterationWithServiceResponseAsync(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIterationWithServiceResponseAsync(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIterationWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 993
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Export a trained iteration.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Export>> exportIterationWithServiceResponseAsync(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id </p>
    - id: platform
      type: "26831127"
      description: "<p>The target platform (coreml or tensorflow). Possible values include: 'CoreML', 'TensorFlow', 'DockerFile', 'ONNX' </p>"
    - id: exportIterationOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ExportIterationOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Exporte7daa122
      description: <p>the observable to the Export object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIterationWithServiceResponseAsync(UUID,UUID,String,String)
  id: exportIterationWithServiceResponseAsync(UUID,UUID,String,String)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: exportIterationWithServiceResponseAsync(UUID projectId, UUID iterationId, String platform, String flavor)
  nameWithType: TrainingsImpl.exportIterationWithServiceResponseAsync(UUID projectId, UUID iterationId, String platform, String flavor)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIterationWithServiceResponseAsync(UUID projectId, UUID iterationId, String platform, String flavor)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIterationWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1021
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Export a trained iteration.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Export>> exportIterationWithServiceResponseAsync(UUID projectId, UUID iterationId, String platform, String flavor)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id </p>
    - id: platform
      type: "26831127"
      description: "<p>The target platform (coreml or tensorflow). Possible values include: 'CoreML', 'TensorFlow', 'DockerFile', 'ONNX' </p>"
    - id: flavor
      type: "26831127"
      description: "<p>The flavor of the target platform (Windows, Linux, ARM, or GPU). Possible values include: 'Linux', 'Windows' </p>"
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Exporte7daa122
      description: <p>the observable to the Export object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomain(UUID)
  id: getDomain(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getDomain(UUID domainId)
  nameWithType: TrainingsImpl.getDomain(UUID domainId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomain(UUID domainId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomain*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 5175
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get information about a specific domain.</p>\r\n<p></p>"
  syntax:
    content: public Domain getDomain(UUID domainId)
    parameters:
    - id: domainId
      type: add9545a
      description: <p>The id of the domain to get information about </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain
      description: <p>the Domain object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomain(UUID)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainAsync(UUID)
  id: getDomainAsync(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getDomainAsync(UUID domainId)
  nameWithType: TrainingsImpl.getDomainAsync(UUID domainId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainAsync(UUID domainId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 5198
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get information about a specific domain.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Domain> getDomainAsync(UUID domainId)
    parameters:
    - id: domainId
      type: add9545a
      description: <p>The id of the domain to get information about </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domaina08ddfce
      description: <p>the observable to the Domain object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomainAsync(UUID)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainAsync(UUID,final ServiceCallback<Domain>)
  id: getDomainAsync(UUID,final ServiceCallback<Domain>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getDomainAsync(UUID domainId, final ServiceCallback<Domain> serviceCallback)
  nameWithType: TrainingsImpl.getDomainAsync(UUID domainId, final ServiceCallback<Domain> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainAsync(UUID domainId, final ServiceCallback<Domain> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 5187
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get information about a specific domain.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Domain> getDomainAsync(UUID domainId, final ServiceCallback<Domain> serviceCallback)
    parameters:
    - id: domainId
      type: add9545a
      description: <p>The id of the domain to get information about </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domaina08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domaina08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomains()
  id: getDomains()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getDomains()
  nameWithType: TrainingsImpl.getDomains()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomains()
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomains*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 5250
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get a list of the available domains.</p>\r\n<p></p>"
  syntax:
    content: public List<Domain> getDomains()
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domaina08ddfce
      description: <p>the List&lt;Domain&gt; object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomains()
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainsAsync()
  id: getDomainsAsync()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getDomainsAsync()
  nameWithType: TrainingsImpl.getDomainsAsync()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainsAsync()
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 5271
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get a list of the available domains.</p>\r\n<p></p>"
  syntax:
    content: public Observable<List<Domain>> getDomainsAsync()
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domaine7daa122
      description: <p>the observable to the List&lt;Domain&gt; object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomainsAsync()
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainsAsync(final ServiceCallback<List<Domain>>)
  id: getDomainsAsync(final ServiceCallback<List<Domain>>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getDomainsAsync(final ServiceCallback<List<Domain>> serviceCallback)
  nameWithType: TrainingsImpl.getDomainsAsync(final ServiceCallback<List<Domain>> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainsAsync(final ServiceCallback<List<Domain>> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 5261
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get a list of the available domains.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<Domain>> getDomainsAsync(final ServiceCallback<List<Domain>> serviceCallback)
    parameters:
    - id: serviceCallback
      type: 8ca6b405com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domaine7daa122
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domaine7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainsWithServiceResponseAsync()
  id: getDomainsWithServiceResponseAsync()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getDomainsWithServiceResponseAsync()
  nameWithType: TrainingsImpl.getDomainsWithServiceResponseAsync()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainsWithServiceResponseAsync()
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 5286
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get a list of the available domains.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<List<Domain>>> getDomainsWithServiceResponseAsync()
    return:
      type: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain2646ccb0
      description: <p>the observable to the List&lt;Domain&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainWithServiceResponseAsync(UUID)
  id: getDomainWithServiceResponseAsync(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getDomainWithServiceResponseAsync(UUID domainId)
  nameWithType: TrainingsImpl.getDomainWithServiceResponseAsync(UUID domainId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainWithServiceResponseAsync(UUID domainId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 5214
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get information about a specific domain.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Domain>> getDomainWithServiceResponseAsync(UUID domainId)
    parameters:
    - id: domainId
      type: add9545a
      description: <p>The id of the domain to get information about </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domaine7daa122
      description: <p>the observable to the Domain object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getExports(UUID,UUID)
  id: getExports(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getExports(UUID projectId, UUID iterationId)
  nameWithType: TrainingsImpl.getExports(UUID projectId, UUID iterationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getExports(UUID projectId, UUID iterationId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getExports*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1128
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get the list of exports for a specific iteration.</p>\r\n<p></p>"
  syntax:
    content: public List<Export> getExports(UUID projectId, UUID iterationId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id </p>
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Exporta08ddfce
      description: <p>the List&lt;Export&gt; object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getExports(UUID,UUID)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getExportsAsync(UUID,UUID)
  id: getExportsAsync(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getExportsAsync(UUID projectId, UUID iterationId)
  nameWithType: TrainingsImpl.getExportsAsync(UUID projectId, UUID iterationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getExportsAsync(UUID projectId, UUID iterationId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getExportsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1153
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get the list of exports for a specific iteration.</p>\r\n<p></p>"
  syntax:
    content: public Observable<List<Export>> getExportsAsync(UUID projectId, UUID iterationId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id </p>
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Exporte7daa122
      description: <p>the observable to the List&lt;Export&gt; object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getExportsAsync(UUID,UUID)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getExportsAsync(UUID,UUID,final ServiceCallback<List<Export>>)
  id: getExportsAsync(UUID,UUID,final ServiceCallback<List<Export>>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getExportsAsync(UUID projectId, UUID iterationId, final ServiceCallback<List<Export>> serviceCallback)
  nameWithType: TrainingsImpl.getExportsAsync(UUID projectId, UUID iterationId, final ServiceCallback<List<Export>> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getExportsAsync(UUID projectId, UUID iterationId, final ServiceCallback<List<Export>> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getExportsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1141
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get the list of exports for a specific iteration.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<Export>> getExportsAsync(UUID projectId, UUID iterationId, final ServiceCallback<List<Export>> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id </p>
    - id: serviceCallback
      type: 8ca6b405com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Exporte7daa122
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Exporte7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getExportsWithServiceResponseAsync(UUID,UUID)
  id: getExportsWithServiceResponseAsync(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getExportsWithServiceResponseAsync(UUID projectId, UUID iterationId)
  nameWithType: TrainingsImpl.getExportsWithServiceResponseAsync(UUID projectId, UUID iterationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getExportsWithServiceResponseAsync(UUID projectId, UUID iterationId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getExportsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1170
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get the list of exports for a specific iteration.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<List<Export>>> getExportsWithServiceResponseAsync(UUID projectId, UUID iterationId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id </p>
    return:
      type: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export2646ccb0
      description: <p>the observable to the List&lt;Export&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCount()
  id: getImagePerformanceCount()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getImagePerformanceCount()
  nameWithType: TrainingsImpl.getImagePerformanceCount()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCount()
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCount*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1331
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Gets the number of images tagged with the provided {tagIds} that have prediction results from training for the provided iteration {iterationId}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned.</p>\r\n<p></p>"
  syntax:
    content: public TrainingsGetImagePerformanceCountParameters getImagePerformanceCount()
    return:
      type: ce339f12
      description: <p>the first stage of the getImagePerformanceCount call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformanceCount()
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCount(UUID,UUID,GetImagePerformanceCountOptionalParameter)
  id: getImagePerformanceCount(UUID,UUID,GetImagePerformanceCountOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getImagePerformanceCount(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)
  nameWithType: TrainingsImpl.getImagePerformanceCount(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCount(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCount*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1216
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Gets the number of images tagged with the provided {tagIds} that have prediction results from training for the provided iteration {iterationId}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned.</p>\r\n<p></p>"
  syntax:
    content: public int getImagePerformanceCount(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. Defaults to workspace </p>
    - id: getImagePerformanceCountOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformanceCountOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: f75371fa
      description: <p>the int object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformanceCount(UUID,UUID,GetImagePerformanceCountOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCountAsync(UUID,UUID,GetImagePerformanceCountOptionalParameter)
  id: getImagePerformanceCountAsync(UUID,UUID,GetImagePerformanceCountOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getImagePerformanceCountAsync(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)
  nameWithType: TrainingsImpl.getImagePerformanceCountAsync(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCountAsync(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCountAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1249
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Gets the number of images tagged with the provided {tagIds} that have prediction results from training for the provided iteration {iterationId}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Integer> getImagePerformanceCountAsync(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. Defaults to workspace </p>
    - id: getImagePerformanceCountOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformanceCountOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 44f6ae9a
      description: <p>the observable to the Integer object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformanceCountAsync(UUID,UUID,GetImagePerformanceCountOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCountAsync(UUID,UUID,GetImagePerformanceCountOptionalParameter,final ServiceCallback<Integer>)
  id: getImagePerformanceCountAsync(UUID,UUID,GetImagePerformanceCountOptionalParameter,final ServiceCallback<Integer>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getImagePerformanceCountAsync(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter, final ServiceCallback<Integer> serviceCallback)
  nameWithType: TrainingsImpl.getImagePerformanceCountAsync(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter, final ServiceCallback<Integer> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCountAsync(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter, final ServiceCallback<Integer> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCountAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1233
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Gets the number of images tagged with the provided {tagIds} that have prediction results from training for the provided iteration {iterationId}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Integer> getImagePerformanceCountAsync(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter, final ServiceCallback<Integer> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. Defaults to workspace </p>
    - id: getImagePerformanceCountOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformanceCountOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: cc651563
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 544226ce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCountWithServiceResponseAsync(UUID,UUID,GetImagePerformanceCountOptionalParameter)
  id: getImagePerformanceCountWithServiceResponseAsync(UUID,UUID,GetImagePerformanceCountOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getImagePerformanceCountWithServiceResponseAsync(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)
  nameWithType: TrainingsImpl.getImagePerformanceCountWithServiceResponseAsync(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCountWithServiceResponseAsync(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCountWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1270
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Gets the number of images tagged with the provided {tagIds} that have prediction results from training for the provided iteration {iterationId}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Integer>> getImagePerformanceCountWithServiceResponseAsync(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. Defaults to workspace </p>
    - id: getImagePerformanceCountOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformanceCountOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 3eef8a5e
      description: <p>the observable to the Integer object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCountWithServiceResponseAsync(UUID,UUID,List<String>)
  id: getImagePerformanceCountWithServiceResponseAsync(UUID,UUID,List<String>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getImagePerformanceCountWithServiceResponseAsync(UUID projectId, UUID iterationId, List<String> tagIds)
  nameWithType: TrainingsImpl.getImagePerformanceCountWithServiceResponseAsync(UUID projectId, UUID iterationId, List<String> tagIds)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCountWithServiceResponseAsync(UUID projectId, UUID iterationId, List<String> tagIds)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCountWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1297
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Gets the number of images tagged with the provided {tagIds} that have prediction results from training for the provided iteration {iterationId}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Integer>> getImagePerformanceCountWithServiceResponseAsync(UUID projectId, UUID iterationId, List<String> tagIds)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. Defaults to workspace </p>
    - id: tagIds
      type: 7d60c20e
      description: <p>A list of tags ids to filter the images to count. Defaults to all tags when null. </p>
    return:
      type: 3eef8a5e
      description: <p>the observable to the Integer object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformances()
  id: getImagePerformances()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getImagePerformances()
  nameWithType: TrainingsImpl.getImagePerformances()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformances()
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformances*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1527
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get image with its prediction for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned.</p>\r\n<p></p>"
  syntax:
    content: public TrainingsGetImagePerformancesParameters getImagePerformances()
    return:
      type: 58e4330e
      description: <p>the first stage of the getImagePerformances call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformances()
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformances(UUID,UUID,GetImagePerformancesOptionalParameter)
  id: getImagePerformances(UUID,UUID,GetImagePerformancesOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getImagePerformances(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)
  nameWithType: TrainingsImpl.getImagePerformances(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformances(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformances*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1402
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get image with its prediction for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned.</p>\r\n<p></p>"
  syntax:
    content: public List<ImagePerformance> getImagePerformances(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. Defaults to workspace </p>
    - id: getImagePerformancesOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformancesOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformancea08ddfce
      description: <p>the List&lt;ImagePerformance&gt; object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformances(UUID,UUID,GetImagePerformancesOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformancesAsync(UUID,UUID,GetImagePerformancesOptionalParameter)
  id: getImagePerformancesAsync(UUID,UUID,GetImagePerformancesOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getImagePerformancesAsync(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)
  nameWithType: TrainingsImpl.getImagePerformancesAsync(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformancesAsync(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformancesAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1437
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get image with its prediction for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned.</p>\r\n<p></p>"
  syntax:
    content: public Observable<List<ImagePerformance>> getImagePerformancesAsync(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. Defaults to workspace </p>
    - id: getImagePerformancesOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformancesOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformancee7daa122
      description: <p>the observable to the List&lt;ImagePerformance&gt; object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformancesAsync(UUID,UUID,GetImagePerformancesOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformancesAsync(UUID,UUID,GetImagePerformancesOptionalParameter,final ServiceCallback<List<ImagePerformance>>)
  id: getImagePerformancesAsync(UUID,UUID,GetImagePerformancesOptionalParameter,final ServiceCallback<List<ImagePerformance>>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getImagePerformancesAsync(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter, final ServiceCallback<List<ImagePerformance>> serviceCallback)
  nameWithType: TrainingsImpl.getImagePerformancesAsync(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter, final ServiceCallback<List<ImagePerformance>> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformancesAsync(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter, final ServiceCallback<List<ImagePerformance>> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformancesAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1420
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get image with its prediction for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<ImagePerformance>> getImagePerformancesAsync(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter, final ServiceCallback<List<ImagePerformance>> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. Defaults to workspace </p>
    - id: getImagePerformancesOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformancesOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 8ca6b405com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformancee7daa122
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformancee7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformancesWithServiceResponseAsync(UUID,UUID,GetImagePerformancesOptionalParameter)
  id: getImagePerformancesWithServiceResponseAsync(UUID,UUID,GetImagePerformancesOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getImagePerformancesWithServiceResponseAsync(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)
  nameWithType: TrainingsImpl.getImagePerformancesWithServiceResponseAsync(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformancesWithServiceResponseAsync(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformancesWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1459
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get image with its prediction for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<List<ImagePerformance>>> getImagePerformancesWithServiceResponseAsync(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. Defaults to workspace </p>
    - id: getImagePerformancesOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformancesOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance2646ccb0
      description: <p>the observable to the List&lt;ImagePerformance&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformancesWithServiceResponseAsync(UUID,UUID,List<String>,String,Integer,Integer)
  id: getImagePerformancesWithServiceResponseAsync(UUID,UUID,List<String>,String,Integer,Integer)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getImagePerformancesWithServiceResponseAsync(UUID projectId, UUID iterationId, List<String> tagIds, String orderBy, Integer take, Integer skip)
  nameWithType: TrainingsImpl.getImagePerformancesWithServiceResponseAsync(UUID projectId, UUID iterationId, List<String> tagIds, String orderBy, Integer take, Integer skip)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformancesWithServiceResponseAsync(UUID projectId, UUID iterationId, List<String> tagIds, String orderBy, Integer take, Integer skip)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformancesWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1493
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get image with its prediction for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<List<ImagePerformance>>> getImagePerformancesWithServiceResponseAsync(UUID projectId, UUID iterationId, List<String> tagIds, String orderBy, Integer take, Integer skip)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. Defaults to workspace </p>
    - id: tagIds
      type: 7d60c20e
      description: <p>A list of tags ids to filter the images. Defaults to all tagged images when null. Limited to 20 </p>
    - id: orderBy
      type: "26831127"
      description: "<p>The ordering. Defaults to newest. Possible values include: 'Newest', 'Oldest' </p>"
    - id: take
      type: 08effaa0
      description: <p>Maximum number of images to return. Defaults to 50, limited to 256 </p>
    - id: skip
      type: 08effaa0
      description: <p>Number of images to skip before beginning the image batch. Defaults to 0 </p>
    return:
      type: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance2646ccb0
      description: <p>the observable to the List&lt;ImagePerformance&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImageRegionProposals(UUID,UUID)
  id: getImageRegionProposals(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getImageRegionProposals(UUID projectId, UUID imageId)
  nameWithType: TrainingsImpl.getImageRegionProposals(UUID projectId, UUID imageId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImageRegionProposals(UUID projectId, UUID imageId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImageRegionProposals*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3171
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get region proposals for an image. Returns empty array if no proposals are found. This API will get region proposals for an image along with confidences for the region. It returns an empty array if no proposals are found.</p>\r\n<p></p>"
  syntax:
    content: public ImageRegionProposal getImageRegionProposals(UUID projectId, UUID imageId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: imageId
      type: add9545a
      description: <p>The image id </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposal
      description: <p>the ImageRegionProposal object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImageRegionProposals(UUID,UUID)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImageRegionProposalsAsync(UUID,UUID)
  id: getImageRegionProposalsAsync(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getImageRegionProposalsAsync(UUID projectId, UUID imageId)
  nameWithType: TrainingsImpl.getImageRegionProposalsAsync(UUID projectId, UUID imageId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImageRegionProposalsAsync(UUID projectId, UUID imageId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImageRegionProposalsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3198
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get region proposals for an image. Returns empty array if no proposals are found. This API will get region proposals for an image along with confidences for the region. It returns an empty array if no proposals are found.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ImageRegionProposal> getImageRegionProposalsAsync(UUID projectId, UUID imageId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: imageId
      type: add9545a
      description: <p>The image id </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposala08ddfce
      description: <p>the observable to the ImageRegionProposal object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImageRegionProposalsAsync(UUID,UUID)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImageRegionProposalsAsync(UUID,UUID,final ServiceCallback<ImageRegionProposal>)
  id: getImageRegionProposalsAsync(UUID,UUID,final ServiceCallback<ImageRegionProposal>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getImageRegionProposalsAsync(UUID projectId, UUID imageId, final ServiceCallback<ImageRegionProposal> serviceCallback)
  nameWithType: TrainingsImpl.getImageRegionProposalsAsync(UUID projectId, UUID imageId, final ServiceCallback<ImageRegionProposal> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImageRegionProposalsAsync(UUID projectId, UUID imageId, final ServiceCallback<ImageRegionProposal> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImageRegionProposalsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3185
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get region proposals for an image. Returns empty array if no proposals are found. This API will get region proposals for an image along with confidences for the region. It returns an empty array if no proposals are found.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<ImageRegionProposal> getImageRegionProposalsAsync(UUID projectId, UUID imageId, final ServiceCallback<ImageRegionProposal> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: imageId
      type: add9545a
      description: <p>The image id </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposala08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposala08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImageRegionProposalsWithServiceResponseAsync(UUID,UUID)
  id: getImageRegionProposalsWithServiceResponseAsync(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getImageRegionProposalsWithServiceResponseAsync(UUID projectId, UUID imageId)
  nameWithType: TrainingsImpl.getImageRegionProposalsWithServiceResponseAsync(UUID projectId, UUID imageId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImageRegionProposalsWithServiceResponseAsync(UUID projectId, UUID imageId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImageRegionProposalsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3216
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get region proposals for an image. Returns empty array if no proposals are found. This API will get region proposals for an image along with confidences for the region. It returns an empty array if no proposals are found.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<ImageRegionProposal>> getImageRegionProposalsWithServiceResponseAsync(UUID projectId, UUID imageId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: imageId
      type: add9545a
      description: <p>The image id </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposale7daa122
      description: <p>the observable to the ImageRegionProposal object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIds()
  id: getImagesByIds()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getImagesByIds()
  nameWithType: TrainingsImpl.getImagesByIds()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIds()
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIds*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4385
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get images by id for a given project iteration. This API will return a set of Images for the specified tags and optionally iteration. If no iteration is specified the current workspace is used.</p>\r\n<p></p>"
  syntax:
    content: public TrainingsGetImagesByIdsParameters getImagesByIds()
    return:
      type: 395203a6
      description: <p>the first stage of the getImagesByIds call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagesByIds()
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIds(UUID,GetImagesByIdsOptionalParameter)
  id: getImagesByIds(UUID,GetImagesByIdsOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getImagesByIds(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)
  nameWithType: TrainingsImpl.getImagesByIds(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIds(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIds*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4282
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get images by id for a given project iteration. This API will return a set of Images for the specified tags and optionally iteration. If no iteration is specified the current workspace is used.</p>\r\n<p></p>"
  syntax:
    content: public List<Image> getImagesByIds(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: getImagesByIdsOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagesByIdsOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Imagea08ddfce
      description: <p>the List&lt;Image&gt; object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagesByIds(UUID,GetImagesByIdsOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIdsAsync(UUID,GetImagesByIdsOptionalParameter)
  id: getImagesByIdsAsync(UUID,GetImagesByIdsOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getImagesByIdsAsync(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)
  nameWithType: TrainingsImpl.getImagesByIdsAsync(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIdsAsync(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIdsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4311
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get images by id for a given project iteration. This API will return a set of Images for the specified tags and optionally iteration. If no iteration is specified the current workspace is used.</p>\r\n<p></p>"
  syntax:
    content: public Observable<List<Image>> getImagesByIdsAsync(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: getImagesByIdsOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagesByIdsOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Imagee7daa122
      description: <p>the observable to the List&lt;Image&gt; object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagesByIdsAsync(UUID,GetImagesByIdsOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIdsAsync(UUID,GetImagesByIdsOptionalParameter,final ServiceCallback<List<Image>>)
  id: getImagesByIdsAsync(UUID,GetImagesByIdsOptionalParameter,final ServiceCallback<List<Image>>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getImagesByIdsAsync(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter, final ServiceCallback<List<Image>> serviceCallback)
  nameWithType: TrainingsImpl.getImagesByIdsAsync(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter, final ServiceCallback<List<Image>> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIdsAsync(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter, final ServiceCallback<List<Image>> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIdsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4297
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get images by id for a given project iteration. This API will return a set of Images for the specified tags and optionally iteration. If no iteration is specified the current workspace is used.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<Image>> getImagesByIdsAsync(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter, final ServiceCallback<List<Image>> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: getImagesByIdsOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagesByIdsOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 8ca6b405com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Imagee7daa122
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Imagee7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIdsWithServiceResponseAsync(UUID,GetImagesByIdsOptionalParameter)
  id: getImagesByIdsWithServiceResponseAsync(UUID,GetImagesByIdsOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getImagesByIdsWithServiceResponseAsync(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)
  nameWithType: TrainingsImpl.getImagesByIdsWithServiceResponseAsync(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIdsWithServiceResponseAsync(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIdsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4330
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get images by id for a given project iteration. This API will return a set of Images for the specified tags and optionally iteration. If no iteration is specified the current workspace is used.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<List<Image>>> getImagesByIdsWithServiceResponseAsync(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: getImagesByIdsOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagesByIdsOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image2646ccb0
      description: <p>the observable to the List&lt;Image&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIdsWithServiceResponseAsync(UUID,List<String>,UUID)
  id: getImagesByIdsWithServiceResponseAsync(UUID,List<String>,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getImagesByIdsWithServiceResponseAsync(UUID projectId, List<String> imageIds, UUID iterationId)
  nameWithType: TrainingsImpl.getImagesByIdsWithServiceResponseAsync(UUID projectId, List<String> imageIds, UUID iterationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIdsWithServiceResponseAsync(UUID projectId, List<String> imageIds, UUID iterationId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIdsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4354
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get images by id for a given project iteration. This API will return a set of Images for the specified tags and optionally iteration. If no iteration is specified the current workspace is used.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<List<Image>>> getImagesByIdsWithServiceResponseAsync(UUID projectId, List<String> imageIds, UUID iterationId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: imageIds
      type: 7d60c20e
      description: <p>The list of image ids to retrieve. Limited to 256 </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. Defaults to workspace </p>
    return:
      type: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image2646ccb0
      description: <p>the observable to the List&lt;Image&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIteration(UUID,UUID)
  id: getIteration(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getIteration(UUID projectId, UUID iterationId)
  nameWithType: TrainingsImpl.getIteration(UUID projectId, UUID iterationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIteration(UUID projectId, UUID iterationId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIteration*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1963
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get a specific iteration.</p>\r\n<p></p>"
  syntax:
    content: public Iteration getIteration(UUID projectId, UUID iterationId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project the iteration belongs to </p>
    - id: iterationId
      type: add9545a
      description: <p>The id of the iteration to get </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
      description: <p>the Iteration object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIteration(UUID,UUID)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationAsync(UUID,UUID)
  id: getIterationAsync(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getIterationAsync(UUID projectId, UUID iterationId)
  nameWithType: TrainingsImpl.getIterationAsync(UUID projectId, UUID iterationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationAsync(UUID projectId, UUID iterationId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1988
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get a specific iteration.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Iteration> getIterationAsync(UUID projectId, UUID iterationId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project the iteration belongs to </p>
    - id: iterationId
      type: add9545a
      description: <p>The id of the iteration to get </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iterationa08ddfce
      description: <p>the observable to the Iteration object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationAsync(UUID,UUID)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationAsync(UUID,UUID,final ServiceCallback<Iteration>)
  id: getIterationAsync(UUID,UUID,final ServiceCallback<Iteration>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getIterationAsync(UUID projectId, UUID iterationId, final ServiceCallback<Iteration> serviceCallback)
  nameWithType: TrainingsImpl.getIterationAsync(UUID projectId, UUID iterationId, final ServiceCallback<Iteration> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationAsync(UUID projectId, UUID iterationId, final ServiceCallback<Iteration> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1976
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get a specific iteration.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Iteration> getIterationAsync(UUID projectId, UUID iterationId, final ServiceCallback<Iteration> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project the iteration belongs to </p>
    - id: iterationId
      type: add9545a
      description: <p>The id of the iteration to get </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iterationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iterationa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformance()
  id: getIterationPerformance()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getIterationPerformance()
  nameWithType: TrainingsImpl.getIterationPerformance()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformance()
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformance*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1718
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get detailed performance information about an iteration.</p>\r\n<p></p>"
  syntax:
    content: public TrainingsGetIterationPerformanceParameters getIterationPerformance()
    return:
      type: 4c425809
      description: <p>the first stage of the getIterationPerformance call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationPerformance()
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformance(UUID,UUID,GetIterationPerformanceOptionalParameter)
  id: getIterationPerformance(UUID,UUID,GetIterationPerformanceOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getIterationPerformance(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)
  nameWithType: TrainingsImpl.getIterationPerformance(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformance(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformance*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1615
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get detailed performance information about an iteration.</p>\r\n<p></p>"
  syntax:
    content: public IterationPerformance getIterationPerformance(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project the iteration belongs to </p>
    - id: iterationId
      type: add9545a
      description: <p>The id of the iteration to get </p>
    - id: getIterationPerformanceOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetIterationPerformanceOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformance
      description: <p>the IterationPerformance object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationPerformance(UUID,UUID,GetIterationPerformanceOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformanceAsync(UUID,UUID,GetIterationPerformanceOptionalParameter)
  id: getIterationPerformanceAsync(UUID,UUID,GetIterationPerformanceOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getIterationPerformanceAsync(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)
  nameWithType: TrainingsImpl.getIterationPerformanceAsync(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformanceAsync(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformanceAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1642
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get detailed performance information about an iteration.</p>\r\n<p></p>"
  syntax:
    content: public Observable<IterationPerformance> getIterationPerformanceAsync(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project the iteration belongs to </p>
    - id: iterationId
      type: add9545a
      description: <p>The id of the iteration to get </p>
    - id: getIterationPerformanceOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetIterationPerformanceOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformancea08ddfce
      description: <p>the observable to the IterationPerformance object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationPerformanceAsync(UUID,UUID,GetIterationPerformanceOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformanceAsync(UUID,UUID,GetIterationPerformanceOptionalParameter,final ServiceCallback<IterationPerformance>)
  id: getIterationPerformanceAsync(UUID,UUID,GetIterationPerformanceOptionalParameter,final ServiceCallback<IterationPerformance>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getIterationPerformanceAsync(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter, final ServiceCallback<IterationPerformance> serviceCallback)
  nameWithType: TrainingsImpl.getIterationPerformanceAsync(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter, final ServiceCallback<IterationPerformance> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformanceAsync(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter, final ServiceCallback<IterationPerformance> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformanceAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1629
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get detailed performance information about an iteration.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<IterationPerformance> getIterationPerformanceAsync(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter, final ServiceCallback<IterationPerformance> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project the iteration belongs to </p>
    - id: iterationId
      type: add9545a
      description: <p>The id of the iteration to get </p>
    - id: getIterationPerformanceOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetIterationPerformanceOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformancea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformancea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformanceWithServiceResponseAsync(UUID,UUID,Double,Double)
  id: getIterationPerformanceWithServiceResponseAsync(UUID,UUID,Double,Double)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getIterationPerformanceWithServiceResponseAsync(UUID projectId, UUID iterationId, Double threshold, Double overlapThreshold)
  nameWithType: TrainingsImpl.getIterationPerformanceWithServiceResponseAsync(UUID projectId, UUID iterationId, Double threshold, Double overlapThreshold)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformanceWithServiceResponseAsync(UUID projectId, UUID iterationId, Double threshold, Double overlapThreshold)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformanceWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1686
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get detailed performance information about an iteration.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<IterationPerformance>> getIterationPerformanceWithServiceResponseAsync(UUID projectId, UUID iterationId, Double threshold, Double overlapThreshold)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project the iteration belongs to </p>
    - id: iterationId
      type: add9545a
      description: <p>The id of the iteration to get </p>
    - id: threshold
      type: 8dd309d9
      description: <p>The threshold used to determine true predictions </p>
    - id: overlapThreshold
      type: 8dd309d9
      description: <p>If applicable, the bounding box overlap threshold used to determine true predictions </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformancee7daa122
      description: <p>the observable to the IterationPerformance object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformanceWithServiceResponseAsync(UUID,UUID,GetIterationPerformanceOptionalParameter)
  id: getIterationPerformanceWithServiceResponseAsync(UUID,UUID,GetIterationPerformanceOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getIterationPerformanceWithServiceResponseAsync(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)
  nameWithType: TrainingsImpl.getIterationPerformanceWithServiceResponseAsync(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformanceWithServiceResponseAsync(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformanceWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1660
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get detailed performance information about an iteration.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<IterationPerformance>> getIterationPerformanceWithServiceResponseAsync(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project the iteration belongs to </p>
    - id: iterationId
      type: add9545a
      description: <p>The id of the iteration to get </p>
    - id: getIterationPerformanceOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetIterationPerformanceOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformancee7daa122
      description: <p>the observable to the IterationPerformance object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterations(UUID)
  id: getIterations(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getIterations(UUID projectId)
  nameWithType: TrainingsImpl.getIterations(UUID projectId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterations(UUID projectId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterations*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2045
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get iterations for the project.</p>\r\n<p></p>"
  syntax:
    content: public List<Iteration> getIterations(UUID projectId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iterationa08ddfce
      description: <p>the List&lt;Iteration&gt; object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterations(UUID)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationsAsync(UUID)
  id: getIterationsAsync(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getIterationsAsync(UUID projectId)
  nameWithType: TrainingsImpl.getIterationsAsync(UUID projectId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationsAsync(UUID projectId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2068
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get iterations for the project.</p>\r\n<p></p>"
  syntax:
    content: public Observable<List<Iteration>> getIterationsAsync(UUID projectId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteratione7daa122
      description: <p>the observable to the List&lt;Iteration&gt; object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationsAsync(UUID)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationsAsync(UUID,final ServiceCallback<List<Iteration>>)
  id: getIterationsAsync(UUID,final ServiceCallback<List<Iteration>>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getIterationsAsync(UUID projectId, final ServiceCallback<List<Iteration>> serviceCallback)
  nameWithType: TrainingsImpl.getIterationsAsync(UUID projectId, final ServiceCallback<List<Iteration>> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationsAsync(UUID projectId, final ServiceCallback<List<Iteration>> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2057
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get iterations for the project.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<Iteration>> getIterationsAsync(UUID projectId, final ServiceCallback<List<Iteration>> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: serviceCallback
      type: 8ca6b405com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteratione7daa122
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteratione7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationsWithServiceResponseAsync(UUID)
  id: getIterationsWithServiceResponseAsync(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getIterationsWithServiceResponseAsync(UUID projectId)
  nameWithType: TrainingsImpl.getIterationsWithServiceResponseAsync(UUID projectId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationsWithServiceResponseAsync(UUID projectId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2084
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get iterations for the project.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<List<Iteration>>> getIterationsWithServiceResponseAsync(UUID projectId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    return:
      type: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration2646ccb0
      description: <p>the observable to the List&lt;Iteration&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationWithServiceResponseAsync(UUID,UUID)
  id: getIterationWithServiceResponseAsync(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getIterationWithServiceResponseAsync(UUID projectId, UUID iterationId)
  nameWithType: TrainingsImpl.getIterationWithServiceResponseAsync(UUID projectId, UUID iterationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationWithServiceResponseAsync(UUID projectId, UUID iterationId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2005
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get a specific iteration.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Iteration>> getIterationWithServiceResponseAsync(UUID projectId, UUID iterationId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project the iteration belongs to </p>
    - id: iterationId
      type: add9545a
      description: <p>The id of the iteration to get </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteratione7daa122
      description: <p>the observable to the Iteration object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProject(UUID)
  id: getProject(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getProject(UUID projectId)
  nameWithType: TrainingsImpl.getProject(UUID projectId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProject(UUID projectId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProject*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2280
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get a specific project.</p>\r\n<p></p>"
  syntax:
    content: public Project getProject(UUID projectId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project to get </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
      description: <p>the Project object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getProject(UUID)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectAsync(UUID)
  id: getProjectAsync(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getProjectAsync(UUID projectId)
  nameWithType: TrainingsImpl.getProjectAsync(UUID projectId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectAsync(UUID projectId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2303
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get a specific project.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Project> getProjectAsync(UUID projectId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project to get </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecta08ddfce
      description: <p>the observable to the Project object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getProjectAsync(UUID)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectAsync(UUID,final ServiceCallback<Project>)
  id: getProjectAsync(UUID,final ServiceCallback<Project>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getProjectAsync(UUID projectId, final ServiceCallback<Project> serviceCallback)
  nameWithType: TrainingsImpl.getProjectAsync(UUID projectId, final ServiceCallback<Project> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectAsync(UUID projectId, final ServiceCallback<Project> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2292
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get a specific project.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Project> getProjectAsync(UUID projectId, final ServiceCallback<Project> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project to get </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjects()
  id: getProjects()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getProjects()
  nameWithType: TrainingsImpl.getProjects()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjects()
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjects*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2523
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get your projects.</p>\r\n<p></p>"
  syntax:
    content: public List<Project> getProjects()
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecta08ddfce
      description: <p>the List&lt;Project&gt; object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getProjects()
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectsAsync()
  id: getProjectsAsync()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getProjectsAsync()
  nameWithType: TrainingsImpl.getProjectsAsync()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectsAsync()
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2544
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get your projects.</p>\r\n<p></p>"
  syntax:
    content: public Observable<List<Project>> getProjectsAsync()
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecte7daa122
      description: <p>the observable to the List&lt;Project&gt; object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getProjectsAsync()
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectsAsync(final ServiceCallback<List<Project>>)
  id: getProjectsAsync(final ServiceCallback<List<Project>>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getProjectsAsync(final ServiceCallback<List<Project>> serviceCallback)
  nameWithType: TrainingsImpl.getProjectsAsync(final ServiceCallback<List<Project>> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectsAsync(final ServiceCallback<List<Project>> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2534
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get your projects.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<Project>> getProjectsAsync(final ServiceCallback<List<Project>> serviceCallback)
    parameters:
    - id: serviceCallback
      type: 8ca6b405com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecte7daa122
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecte7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectsWithServiceResponseAsync()
  id: getProjectsWithServiceResponseAsync()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getProjectsWithServiceResponseAsync()
  nameWithType: TrainingsImpl.getProjectsWithServiceResponseAsync()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectsWithServiceResponseAsync()
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2559
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get your projects.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<List<Project>>> getProjectsWithServiceResponseAsync()
    return:
      type: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project2646ccb0
      description: <p>the observable to the List&lt;Project&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectWithServiceResponseAsync(UUID)
  id: getProjectWithServiceResponseAsync(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getProjectWithServiceResponseAsync(UUID projectId)
  nameWithType: TrainingsImpl.getProjectWithServiceResponseAsync(UUID projectId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectWithServiceResponseAsync(UUID projectId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2319
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get a specific project.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Project>> getProjectWithServiceResponseAsync(UUID projectId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project to get </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecte7daa122
      description: <p>the observable to the Project object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTag()
  id: getTag()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getTag()
  nameWithType: TrainingsImpl.getTag()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTag()
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTag*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 877
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get information about a specific tag.</p>\r\n<p></p>"
  syntax:
    content: public TrainingsGetTagParameters getTag()
    return:
      type: b15923ab
      description: <p>the first stage of the getTag call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTag()
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTag(UUID,UUID,GetTagOptionalParameter)
  id: getTag(UUID,UUID,GetTagOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getTag(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)
  nameWithType: TrainingsImpl.getTag(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTag(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTag*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 776
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get information about a specific tag.</p>\r\n<p></p>"
  syntax:
    content: public Tag getTag(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project this tag belongs to </p>
    - id: tagId
      type: add9545a
      description: <p>The tag id </p>
    - id: getTagOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
      description: <p>the Tag object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTag(UUID,UUID,GetTagOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagAsync(UUID,UUID,GetTagOptionalParameter)
  id: getTagAsync(UUID,UUID,GetTagOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getTagAsync(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)
  nameWithType: TrainingsImpl.getTagAsync(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagAsync(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 803
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get information about a specific tag.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Tag> getTagAsync(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project this tag belongs to </p>
    - id: tagId
      type: add9545a
      description: <p>The tag id </p>
    - id: getTagOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Taga08ddfce
      description: <p>the observable to the Tag object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTagAsync(UUID,UUID,GetTagOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagAsync(UUID,UUID,GetTagOptionalParameter,final ServiceCallback<Tag>)
  id: getTagAsync(UUID,UUID,GetTagOptionalParameter,final ServiceCallback<Tag>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getTagAsync(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter, final ServiceCallback<Tag> serviceCallback)
  nameWithType: TrainingsImpl.getTagAsync(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter, final ServiceCallback<Tag> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagAsync(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter, final ServiceCallback<Tag> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 790
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get information about a specific tag.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Tag> getTagAsync(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter, final ServiceCallback<Tag> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project this tag belongs to </p>
    - id: tagId
      type: add9545a
      description: <p>The tag id </p>
    - id: getTagOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Taga08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Taga08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCount()
  id: getTaggedImageCount()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getTaggedImageCount()
  nameWithType: TrainingsImpl.getTaggedImageCount()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCount()
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCount*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4716
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Gets the number of images tagged with the provided {tagIds}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned.</p>\r\n<p></p>"
  syntax:
    content: public TrainingsGetTaggedImageCountParameters getTaggedImageCount()
    return:
      type: 4c78d6f1
      description: <p>the first stage of the getTaggedImageCount call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImageCount()
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCount(UUID,GetTaggedImageCountOptionalParameter)
  id: getTaggedImageCount(UUID,GetTaggedImageCountOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getTaggedImageCount(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
  nameWithType: TrainingsImpl.getTaggedImageCount(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCount(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCount*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4613
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Gets the number of images tagged with the provided {tagIds}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned.</p>\r\n<p></p>"
  syntax:
    content: public int getTaggedImageCount(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: getTaggedImageCountOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImageCountOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: f75371fa
      description: <p>the int object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImageCount(UUID,GetTaggedImageCountOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCountAsync(UUID,GetTaggedImageCountOptionalParameter)
  id: getTaggedImageCountAsync(UUID,GetTaggedImageCountOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getTaggedImageCountAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
  nameWithType: TrainingsImpl.getTaggedImageCountAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCountAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCountAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4642
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Gets the number of images tagged with the provided {tagIds}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Integer> getTaggedImageCountAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: getTaggedImageCountOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImageCountOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 44f6ae9a
      description: <p>the observable to the Integer object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImageCountAsync(UUID,GetTaggedImageCountOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCountAsync(UUID,GetTaggedImageCountOptionalParameter,final ServiceCallback<Integer>)
  id: getTaggedImageCountAsync(UUID,GetTaggedImageCountOptionalParameter,final ServiceCallback<Integer>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getTaggedImageCountAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter, final ServiceCallback<Integer> serviceCallback)
  nameWithType: TrainingsImpl.getTaggedImageCountAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter, final ServiceCallback<Integer> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCountAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter, final ServiceCallback<Integer> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCountAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4628
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Gets the number of images tagged with the provided {tagIds}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Integer> getTaggedImageCountAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter, final ServiceCallback<Integer> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: getTaggedImageCountOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImageCountOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: cc651563
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 544226ce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCountWithServiceResponseAsync(UUID,GetTaggedImageCountOptionalParameter)
  id: getTaggedImageCountWithServiceResponseAsync(UUID,GetTaggedImageCountOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getTaggedImageCountWithServiceResponseAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
  nameWithType: TrainingsImpl.getTaggedImageCountWithServiceResponseAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCountWithServiceResponseAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCountWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4661
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Gets the number of images tagged with the provided {tagIds}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Integer>> getTaggedImageCountWithServiceResponseAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: getTaggedImageCountOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImageCountOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 3eef8a5e
      description: <p>the observable to the Integer object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCountWithServiceResponseAsync(UUID,UUID,List<String>)
  id: getTaggedImageCountWithServiceResponseAsync(UUID,UUID,List<String>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getTaggedImageCountWithServiceResponseAsync(UUID projectId, UUID iterationId, List<String> tagIds)
  nameWithType: TrainingsImpl.getTaggedImageCountWithServiceResponseAsync(UUID projectId, UUID iterationId, List<String> tagIds)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCountWithServiceResponseAsync(UUID projectId, UUID iterationId, List<String> tagIds)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCountWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4685
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Gets the number of images tagged with the provided {tagIds}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Integer>> getTaggedImageCountWithServiceResponseAsync(UUID projectId, UUID iterationId, List<String> tagIds)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. Defaults to workspace </p>
    - id: tagIds
      type: 7d60c20e
      description: <p>A list of tags ids to filter the images to count. Defaults to all tags when null. </p>
    return:
      type: 3eef8a5e
      description: <p>the observable to the Integer object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImages()
  id: getTaggedImages()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getTaggedImages()
  nameWithType: TrainingsImpl.getTaggedImages()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImages()
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImages*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 5090
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get tagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned.</p>\r\n<p></p>"
  syntax:
    content: public TrainingsGetTaggedImagesParameters getTaggedImages()
    return:
      type: 8a9fb72a
      description: <p>the first stage of the getTaggedImages call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImages()
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImages(UUID,GetTaggedImagesOptionalParameter)
  id: getTaggedImages(UUID,GetTaggedImagesOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getTaggedImages(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)
  nameWithType: TrainingsImpl.getTaggedImages(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImages(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImages*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4973
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get tagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned.</p>\r\n<p></p>"
  syntax:
    content: public List<Image> getTaggedImages(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: getTaggedImagesOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImagesOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Imagea08ddfce
      description: <p>the List&lt;Image&gt; object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImages(UUID,GetTaggedImagesOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImagesAsync(UUID,GetTaggedImagesOptionalParameter)
  id: getTaggedImagesAsync(UUID,GetTaggedImagesOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getTaggedImagesAsync(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)
  nameWithType: TrainingsImpl.getTaggedImagesAsync(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImagesAsync(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImagesAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 5006
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get tagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned.</p>\r\n<p></p>"
  syntax:
    content: public Observable<List<Image>> getTaggedImagesAsync(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: getTaggedImagesOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImagesOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Imagee7daa122
      description: <p>the observable to the List&lt;Image&gt; object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImagesAsync(UUID,GetTaggedImagesOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImagesAsync(UUID,GetTaggedImagesOptionalParameter,final ServiceCallback<List<Image>>)
  id: getTaggedImagesAsync(UUID,GetTaggedImagesOptionalParameter,final ServiceCallback<List<Image>>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getTaggedImagesAsync(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter, final ServiceCallback<List<Image>> serviceCallback)
  nameWithType: TrainingsImpl.getTaggedImagesAsync(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter, final ServiceCallback<List<Image>> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImagesAsync(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter, final ServiceCallback<List<Image>> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImagesAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4990
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get tagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<Image>> getTaggedImagesAsync(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter, final ServiceCallback<List<Image>> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: getTaggedImagesOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImagesOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 8ca6b405com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Imagee7daa122
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Imagee7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImagesWithServiceResponseAsync(UUID,GetTaggedImagesOptionalParameter)
  id: getTaggedImagesWithServiceResponseAsync(UUID,GetTaggedImagesOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getTaggedImagesWithServiceResponseAsync(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)
  nameWithType: TrainingsImpl.getTaggedImagesWithServiceResponseAsync(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImagesWithServiceResponseAsync(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImagesWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 5027
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get tagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<List<Image>>> getTaggedImagesWithServiceResponseAsync(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: getTaggedImagesOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImagesOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image2646ccb0
      description: <p>the observable to the List&lt;Image&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImagesWithServiceResponseAsync(UUID,UUID,List<String>,String,Integer,Integer)
  id: getTaggedImagesWithServiceResponseAsync(UUID,UUID,List<String>,String,Integer,Integer)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getTaggedImagesWithServiceResponseAsync(UUID projectId, UUID iterationId, List<String> tagIds, String orderBy, Integer take, Integer skip)
  nameWithType: TrainingsImpl.getTaggedImagesWithServiceResponseAsync(UUID projectId, UUID iterationId, List<String> tagIds, String orderBy, Integer take, Integer skip)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImagesWithServiceResponseAsync(UUID projectId, UUID iterationId, List<String> tagIds, String orderBy, Integer take, Integer skip)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImagesWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 5059
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get tagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch. The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<List<Image>>> getTaggedImagesWithServiceResponseAsync(UUID projectId, UUID iterationId, List<String> tagIds, String orderBy, Integer take, Integer skip)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. Defaults to workspace </p>
    - id: tagIds
      type: 7d60c20e
      description: <p>A list of tags ids to filter the images. Defaults to all tagged images when null. Limited to 20 </p>
    - id: orderBy
      type: "26831127"
      description: "<p>The ordering. Defaults to newest. Possible values include: 'Newest', 'Oldest' </p>"
    - id: take
      type: 08effaa0
      description: <p>Maximum number of images to return. Defaults to 50, limited to 256 </p>
    - id: skip
      type: 08effaa0
      description: <p>Number of images to skip before beginning the image batch. Defaults to 0 </p>
    return:
      type: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image2646ccb0
      description: <p>the observable to the List&lt;Image&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTags()
  id: getTags()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getTags()
  nameWithType: TrainingsImpl.getTags()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTags()
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTags*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 543
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get the tags for a given project and iteration.</p>\r\n<p></p>"
  syntax:
    content: public TrainingsGetTagsParameters getTags()
    return:
      type: e1408fc0
      description: <p>the first stage of the getTags call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTags()
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTags(UUID,GetTagsOptionalParameter)
  id: getTags(UUID,GetTagsOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getTags(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)
  nameWithType: TrainingsImpl.getTags(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTags(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTags*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 452
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get the tags for a given project and iteration.</p>\r\n<p></p>"
  syntax:
    content: public List<Tag> getTags(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: getTagsOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagsOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Taga08ddfce
      description: <p>the List&lt;Tag&gt; object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTags(UUID,GetTagsOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagsAsync(UUID,GetTagsOptionalParameter)
  id: getTagsAsync(UUID,GetTagsOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getTagsAsync(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)
  nameWithType: TrainingsImpl.getTagsAsync(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagsAsync(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 477
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get the tags for a given project and iteration.</p>\r\n<p></p>"
  syntax:
    content: public Observable<List<Tag>> getTagsAsync(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: getTagsOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagsOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tage7daa122
      description: <p>the observable to the List&lt;Tag&gt; object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTagsAsync(UUID,GetTagsOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagsAsync(UUID,GetTagsOptionalParameter,final ServiceCallback<List<Tag>>)
  id: getTagsAsync(UUID,GetTagsOptionalParameter,final ServiceCallback<List<Tag>>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getTagsAsync(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter, final ServiceCallback<List<Tag>> serviceCallback)
  nameWithType: TrainingsImpl.getTagsAsync(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter, final ServiceCallback<List<Tag>> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagsAsync(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter, final ServiceCallback<List<Tag>> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 465
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get the tags for a given project and iteration.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<Tag>> getTagsAsync(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter, final ServiceCallback<List<Tag>> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: getTagsOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagsOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 8ca6b405com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tage7daa122
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tage7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagsWithServiceResponseAsync(UUID,GetTagsOptionalParameter)
  id: getTagsWithServiceResponseAsync(UUID,GetTagsOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getTagsWithServiceResponseAsync(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)
  nameWithType: TrainingsImpl.getTagsWithServiceResponseAsync(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagsWithServiceResponseAsync(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 494
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get the tags for a given project and iteration.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<List<Tag>>> getTagsWithServiceResponseAsync(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: getTagsOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagsOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag2646ccb0
      description: <p>the observable to the List&lt;Tag&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagsWithServiceResponseAsync(UUID,UUID)
  id: getTagsWithServiceResponseAsync(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getTagsWithServiceResponseAsync(UUID projectId, UUID iterationId)
  nameWithType: TrainingsImpl.getTagsWithServiceResponseAsync(UUID projectId, UUID iterationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagsWithServiceResponseAsync(UUID projectId, UUID iterationId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 514
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get the tags for a given project and iteration.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<List<Tag>>> getTagsWithServiceResponseAsync(UUID projectId, UUID iterationId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. Defaults to workspace </p>
    return:
      type: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag2646ccb0
      description: <p>the observable to the List&lt;Tag&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagWithServiceResponseAsync(UUID,UUID,GetTagOptionalParameter)
  id: getTagWithServiceResponseAsync(UUID,UUID,GetTagOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getTagWithServiceResponseAsync(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)
  nameWithType: TrainingsImpl.getTagWithServiceResponseAsync(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagWithServiceResponseAsync(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 821
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get information about a specific tag.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Tag>> getTagWithServiceResponseAsync(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project this tag belongs to </p>
    - id: tagId
      type: add9545a
      description: <p>The tag id </p>
    - id: getTagOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tage7daa122
      description: <p>the observable to the Tag object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagWithServiceResponseAsync(UUID,UUID,UUID)
  id: getTagWithServiceResponseAsync(UUID,UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getTagWithServiceResponseAsync(UUID projectId, UUID tagId, UUID iterationId)
  nameWithType: TrainingsImpl.getTagWithServiceResponseAsync(UUID projectId, UUID tagId, UUID iterationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagWithServiceResponseAsync(UUID projectId, UUID tagId, UUID iterationId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 845
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get information about a specific tag.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Tag>> getTagWithServiceResponseAsync(UUID projectId, UUID tagId, UUID iterationId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project this tag belongs to </p>
    - id: tagId
      type: add9545a
      description: <p>The tag id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration to retrieve this tag from. Optional, defaults to current training set </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tage7daa122
      description: <p>the observable to the Tag object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCount()
  id: getUntaggedImageCount()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getUntaggedImageCount()
  nameWithType: TrainingsImpl.getUntaggedImageCount()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCount()
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCount*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4552
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Gets the number of untagged images. This API returns the images which have no tags for a given project and optionally an iteration. If no iteration is specified the current workspace is used.</p>\r\n<p></p>"
  syntax:
    content: public TrainingsGetUntaggedImageCountParameters getUntaggedImageCount()
    return:
      type: 8b3f7b4b
      description: <p>the first stage of the getUntaggedImageCount call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImageCount()
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCount(UUID,GetUntaggedImageCountOptionalParameter)
  id: getUntaggedImageCount(UUID,GetUntaggedImageCountOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getUntaggedImageCount(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)
  nameWithType: TrainingsImpl.getUntaggedImageCount(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCount(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCount*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4453
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Gets the number of untagged images. This API returns the images which have no tags for a given project and optionally an iteration. If no iteration is specified the current workspace is used.</p>\r\n<p></p>"
  syntax:
    content: public int getUntaggedImageCount(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: getUntaggedImageCountOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImageCountOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: f75371fa
      description: <p>the int object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImageCount(UUID,GetUntaggedImageCountOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCountAsync(UUID,GetUntaggedImageCountOptionalParameter)
  id: getUntaggedImageCountAsync(UUID,GetUntaggedImageCountOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getUntaggedImageCountAsync(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)
  nameWithType: TrainingsImpl.getUntaggedImageCountAsync(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCountAsync(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCountAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4482
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Gets the number of untagged images. This API returns the images which have no tags for a given project and optionally an iteration. If no iteration is specified the current workspace is used.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Integer> getUntaggedImageCountAsync(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: getUntaggedImageCountOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImageCountOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 44f6ae9a
      description: <p>the observable to the Integer object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImageCountAsync(UUID,GetUntaggedImageCountOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCountAsync(UUID,GetUntaggedImageCountOptionalParameter,final ServiceCallback<Integer>)
  id: getUntaggedImageCountAsync(UUID,GetUntaggedImageCountOptionalParameter,final ServiceCallback<Integer>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getUntaggedImageCountAsync(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter, final ServiceCallback<Integer> serviceCallback)
  nameWithType: TrainingsImpl.getUntaggedImageCountAsync(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter, final ServiceCallback<Integer> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCountAsync(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter, final ServiceCallback<Integer> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCountAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4468
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Gets the number of untagged images. This API returns the images which have no tags for a given project and optionally an iteration. If no iteration is specified the current workspace is used.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Integer> getUntaggedImageCountAsync(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter, final ServiceCallback<Integer> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: getUntaggedImageCountOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImageCountOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: cc651563
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 544226ce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCountWithServiceResponseAsync(UUID,GetUntaggedImageCountOptionalParameter)
  id: getUntaggedImageCountWithServiceResponseAsync(UUID,GetUntaggedImageCountOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getUntaggedImageCountWithServiceResponseAsync(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)
  nameWithType: TrainingsImpl.getUntaggedImageCountWithServiceResponseAsync(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCountWithServiceResponseAsync(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCountWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4501
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Gets the number of untagged images. This API returns the images which have no tags for a given project and optionally an iteration. If no iteration is specified the current workspace is used.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Integer>> getUntaggedImageCountWithServiceResponseAsync(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: getUntaggedImageCountOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImageCountOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 3eef8a5e
      description: <p>the observable to the Integer object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCountWithServiceResponseAsync(UUID,UUID)
  id: getUntaggedImageCountWithServiceResponseAsync(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getUntaggedImageCountWithServiceResponseAsync(UUID projectId, UUID iterationId)
  nameWithType: TrainingsImpl.getUntaggedImageCountWithServiceResponseAsync(UUID projectId, UUID iterationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCountWithServiceResponseAsync(UUID projectId, UUID iterationId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCountWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4523
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Gets the number of untagged images. This API returns the images which have no tags for a given project and optionally an iteration. If no iteration is specified the current workspace is used.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Integer>> getUntaggedImageCountWithServiceResponseAsync(UUID projectId, UUID iterationId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. Defaults to workspace </p>
    return:
      type: 3eef8a5e
      description: <p>the observable to the Integer object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImages()
  id: getUntaggedImages()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getUntaggedImages()
  nameWithType: TrainingsImpl.getUntaggedImages()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImages()
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImages*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4889
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get untagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch.</p>\r\n<p></p>"
  syntax:
    content: public TrainingsGetUntaggedImagesParameters getUntaggedImages()
    return:
      type: fb401bf0
      description: <p>the first stage of the getUntaggedImages call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImages()
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImages(UUID,GetUntaggedImagesOptionalParameter)
  id: getUntaggedImages(UUID,GetUntaggedImagesOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getUntaggedImages(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)
  nameWithType: TrainingsImpl.getUntaggedImages(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImages(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImages*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4784
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get untagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch.</p>\r\n<p></p>"
  syntax:
    content: public List<Image> getUntaggedImages(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: getUntaggedImagesOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImagesOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Imagea08ddfce
      description: <p>the List&lt;Image&gt; object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImages(UUID,GetUntaggedImagesOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImagesAsync(UUID,GetUntaggedImagesOptionalParameter)
  id: getUntaggedImagesAsync(UUID,GetUntaggedImagesOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getUntaggedImagesAsync(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)
  nameWithType: TrainingsImpl.getUntaggedImagesAsync(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImagesAsync(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImagesAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4813
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get untagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch.</p>\r\n<p></p>"
  syntax:
    content: public Observable<List<Image>> getUntaggedImagesAsync(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: getUntaggedImagesOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImagesOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Imagee7daa122
      description: <p>the observable to the List&lt;Image&gt; object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImagesAsync(UUID,GetUntaggedImagesOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImagesAsync(UUID,GetUntaggedImagesOptionalParameter,final ServiceCallback<List<Image>>)
  id: getUntaggedImagesAsync(UUID,GetUntaggedImagesOptionalParameter,final ServiceCallback<List<Image>>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getUntaggedImagesAsync(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter, final ServiceCallback<List<Image>> serviceCallback)
  nameWithType: TrainingsImpl.getUntaggedImagesAsync(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter, final ServiceCallback<List<Image>> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImagesAsync(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter, final ServiceCallback<List<Image>> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImagesAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4799
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get untagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<Image>> getUntaggedImagesAsync(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter, final ServiceCallback<List<Image>> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: getUntaggedImagesOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImagesOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 8ca6b405com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Imagee7daa122
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Imagee7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImagesWithServiceResponseAsync(UUID,GetUntaggedImagesOptionalParameter)
  id: getUntaggedImagesWithServiceResponseAsync(UUID,GetUntaggedImagesOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getUntaggedImagesWithServiceResponseAsync(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)
  nameWithType: TrainingsImpl.getUntaggedImagesWithServiceResponseAsync(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImagesWithServiceResponseAsync(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImagesWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4832
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get untagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<List<Image>>> getUntaggedImagesWithServiceResponseAsync(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: getUntaggedImagesOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImagesOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image2646ccb0
      description: <p>the observable to the List&lt;Image&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImagesWithServiceResponseAsync(UUID,UUID,String,Integer,Integer)
  id: getUntaggedImagesWithServiceResponseAsync(UUID,UUID,String,Integer,Integer)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: getUntaggedImagesWithServiceResponseAsync(UUID projectId, UUID iterationId, String orderBy, Integer take, Integer skip)
  nameWithType: TrainingsImpl.getUntaggedImagesWithServiceResponseAsync(UUID projectId, UUID iterationId, String orderBy, Integer take, Integer skip)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImagesWithServiceResponseAsync(UUID projectId, UUID iterationId, String orderBy, Integer take, Integer skip)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImagesWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 4860
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get untagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<List<Image>>> getUntaggedImagesWithServiceResponseAsync(UUID projectId, UUID iterationId, String orderBy, Integer take, Integer skip)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. Defaults to workspace </p>
    - id: orderBy
      type: "26831127"
      description: "<p>The ordering. Defaults to newest. Possible values include: 'Newest', 'Oldest' </p>"
    - id: take
      type: 08effaa0
      description: <p>Maximum number of images to return. Defaults to 50, limited to 256 </p>
    - id: skip
      type: 08effaa0
      description: <p>Number of images to skip before beginning the image batch. Defaults to 0 </p>
    return:
      type: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image2646ccb0
      description: <p>the observable to the List&lt;Image&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.queryPredictions(UUID,PredictionQueryToken)
  id: queryPredictions(UUID,PredictionQueryToken)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: queryPredictions(UUID projectId, PredictionQueryToken query)
  nameWithType: TrainingsImpl.queryPredictions(UUID projectId, PredictionQueryToken query)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.queryPredictions(UUID projectId, PredictionQueryToken query)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.queryPredictions*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3002
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get images that were sent to your prediction endpoint.</p>\r\n<p></p>"
  syntax:
    content: public PredictionQueryResult queryPredictions(UUID projectId, PredictionQueryToken query)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: query
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryToken
      description: <p>Parameters used to query the predictions. Limited to combining 2 tags </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResult
      description: <p>the PredictionQueryResult object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.queryPredictions(UUID,PredictionQueryToken)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.queryPredictionsAsync(UUID,PredictionQueryToken)
  id: queryPredictionsAsync(UUID,PredictionQueryToken)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: queryPredictionsAsync(UUID projectId, PredictionQueryToken query)
  nameWithType: TrainingsImpl.queryPredictionsAsync(UUID projectId, PredictionQueryToken query)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.queryPredictionsAsync(UUID projectId, PredictionQueryToken query)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.queryPredictionsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3027
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get images that were sent to your prediction endpoint.</p>\r\n<p></p>"
  syntax:
    content: public Observable<PredictionQueryResult> queryPredictionsAsync(UUID projectId, PredictionQueryToken query)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: query
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryToken
      description: <p>Parameters used to query the predictions. Limited to combining 2 tags </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResulta08ddfce
      description: <p>the observable to the PredictionQueryResult object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.queryPredictionsAsync(UUID,PredictionQueryToken)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.queryPredictionsAsync(UUID,PredictionQueryToken,final ServiceCallback<PredictionQueryResult>)
  id: queryPredictionsAsync(UUID,PredictionQueryToken,final ServiceCallback<PredictionQueryResult>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: queryPredictionsAsync(UUID projectId, PredictionQueryToken query, final ServiceCallback<PredictionQueryResult> serviceCallback)
  nameWithType: TrainingsImpl.queryPredictionsAsync(UUID projectId, PredictionQueryToken query, final ServiceCallback<PredictionQueryResult> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.queryPredictionsAsync(UUID projectId, PredictionQueryToken query, final ServiceCallback<PredictionQueryResult> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.queryPredictionsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3015
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get images that were sent to your prediction endpoint.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<PredictionQueryResult> queryPredictionsAsync(UUID projectId, PredictionQueryToken query, final ServiceCallback<PredictionQueryResult> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: query
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryToken
      description: <p>Parameters used to query the predictions. Limited to combining 2 tags </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.queryPredictionsWithServiceResponseAsync(UUID,PredictionQueryToken)
  id: queryPredictionsWithServiceResponseAsync(UUID,PredictionQueryToken)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: queryPredictionsWithServiceResponseAsync(UUID projectId, PredictionQueryToken query)
  nameWithType: TrainingsImpl.queryPredictionsWithServiceResponseAsync(UUID projectId, PredictionQueryToken query)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.queryPredictionsWithServiceResponseAsync(UUID projectId, PredictionQueryToken query)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.queryPredictionsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 3044
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Get images that were sent to your prediction endpoint.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<PredictionQueryResult>> queryPredictionsWithServiceResponseAsync(UUID projectId, PredictionQueryToken query)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: query
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryToken
      description: <p>Parameters used to query the predictions. Limited to combining 2 tags </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResulte7daa122
      description: <p>the observable to the PredictionQueryResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImage()
  id: quickTestImage()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: quickTestImage()
  nameWithType: TrainingsImpl.quickTestImage()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImage()
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImage*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2775
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Quick test an image.</p>\r\n<p></p>"
  syntax:
    content: public TrainingsQuickTestImageParameters quickTestImage()
    return:
      type: 1b5331de
      description: <p>the first stage of the quickTestImage call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImage()
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImage(UUID,byte [],QuickTestImageOptionalParameter)
  id: quickTestImage(UUID,byte [],QuickTestImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: quickTestImage(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)
  nameWithType: TrainingsImpl.quickTestImage(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImage(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImage*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2672
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Quick test an image.</p>\r\n<p></p>"
  syntax:
    content: public ImagePrediction quickTestImage(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: imageData
      type: ccd9418d
      description: <p>the InputStream value </p>
    - id: quickTestImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction
      description: <p>the ImagePrediction object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImage(UUID,byte [],QuickTestImageOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageAsync(UUID,byte [],QuickTestImageOptionalParameter)
  id: quickTestImageAsync(UUID,byte [],QuickTestImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: quickTestImageAsync(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)
  nameWithType: TrainingsImpl.quickTestImageAsync(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageAsync(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2699
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Quick test an image.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ImagePrediction> quickTestImageAsync(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: imageData
      type: ccd9418d
      description: <p>the InputStream value </p>
    - id: quickTestImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePredictiona08ddfce
      description: <p>the observable to the ImagePrediction object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageAsync(UUID,byte [],QuickTestImageOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageAsync(UUID,byte [],QuickTestImageOptionalParameter,final ServiceCallback<ImagePrediction>)
  id: quickTestImageAsync(UUID,byte [],QuickTestImageOptionalParameter,final ServiceCallback<ImagePrediction>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: quickTestImageAsync(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter, final ServiceCallback<ImagePrediction> serviceCallback)
  nameWithType: TrainingsImpl.quickTestImageAsync(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter, final ServiceCallback<ImagePrediction> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageAsync(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter, final ServiceCallback<ImagePrediction> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2686
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Quick test an image.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<ImagePrediction> quickTestImageAsync(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter, final ServiceCallback<ImagePrediction> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: imageData
      type: ccd9418d
      description: <p>the InputStream value </p>
    - id: quickTestImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePredictiona08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePredictiona08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrl()
  id: quickTestImageUrl()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: quickTestImageUrl()
  nameWithType: TrainingsImpl.quickTestImageUrl()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrl()
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrl*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2937
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Quick test an image url.</p>\r\n<p></p>"
  syntax:
    content: public TrainingsQuickTestImageUrlParameters quickTestImageUrl()
    return:
      type: 455b0c74
      description: <p>the first stage of the quickTestImageUrl call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageUrl()
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrl(UUID,QuickTestImageUrlOptionalParameter)
  id: quickTestImageUrl(UUID,QuickTestImageUrlOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: quickTestImageUrl(UUID projectId, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)
  nameWithType: TrainingsImpl.quickTestImageUrl(UUID projectId, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrl(UUID projectId, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrl*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2841
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Quick test an image url.</p>\r\n<p></p>"
  syntax:
    content: public ImagePrediction quickTestImageUrl(UUID projectId, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project to evaluate against </p>
    - id: quickTestImageUrlOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageUrlOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction
      description: <p>the ImagePrediction object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageUrl(UUID,QuickTestImageUrlOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrlAsync(UUID,QuickTestImageUrlOptionalParameter)
  id: quickTestImageUrlAsync(UUID,QuickTestImageUrlOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: quickTestImageUrlAsync(UUID projectId, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)
  nameWithType: TrainingsImpl.quickTestImageUrlAsync(UUID projectId, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrlAsync(UUID projectId, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrlAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2866
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Quick test an image url.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ImagePrediction> quickTestImageUrlAsync(UUID projectId, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project to evaluate against </p>
    - id: quickTestImageUrlOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageUrlOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePredictiona08ddfce
      description: <p>the observable to the ImagePrediction object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageUrlAsync(UUID,QuickTestImageUrlOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrlAsync(UUID,QuickTestImageUrlOptionalParameter,final ServiceCallback<ImagePrediction>)
  id: quickTestImageUrlAsync(UUID,QuickTestImageUrlOptionalParameter,final ServiceCallback<ImagePrediction>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: quickTestImageUrlAsync(UUID projectId, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter, final ServiceCallback<ImagePrediction> serviceCallback)
  nameWithType: TrainingsImpl.quickTestImageUrlAsync(UUID projectId, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter, final ServiceCallback<ImagePrediction> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrlAsync(UUID projectId, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter, final ServiceCallback<ImagePrediction> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrlAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2854
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Quick test an image url.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<ImagePrediction> quickTestImageUrlAsync(UUID projectId, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter, final ServiceCallback<ImagePrediction> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project to evaluate against </p>
    - id: quickTestImageUrlOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageUrlOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePredictiona08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePredictiona08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrlWithServiceResponseAsync(UUID,QuickTestImageUrlOptionalParameter)
  id: quickTestImageUrlWithServiceResponseAsync(UUID,QuickTestImageUrlOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: quickTestImageUrlWithServiceResponseAsync(UUID projectId, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)
  nameWithType: TrainingsImpl.quickTestImageUrlWithServiceResponseAsync(UUID projectId, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrlWithServiceResponseAsync(UUID projectId, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrlWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2883
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Quick test an image url.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<ImagePrediction>> quickTestImageUrlWithServiceResponseAsync(UUID projectId, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project to evaluate against </p>
    - id: quickTestImageUrlOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageUrlOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePredictione7daa122
      description: <p>the observable to the ImagePrediction object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrlWithServiceResponseAsync(UUID,UUID,String)
  id: quickTestImageUrlWithServiceResponseAsync(UUID,UUID,String)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: quickTestImageUrlWithServiceResponseAsync(UUID projectId, UUID iterationId, String url)
  nameWithType: TrainingsImpl.quickTestImageUrlWithServiceResponseAsync(UUID projectId, UUID iterationId, String url)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrlWithServiceResponseAsync(UUID projectId, UUID iterationId, String url)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrlWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2906
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Quick test an image url.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<ImagePrediction>> quickTestImageUrlWithServiceResponseAsync(UUID projectId, UUID iterationId, String url)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project to evaluate against </p>
    - id: iterationId
      type: add9545a
      description: <p>Optional. Specifies the id of a particular iteration to evaluate against. The default iteration for the project will be used when not specified. </p>
    - id: url
      type: "26831127"
      description: <p>the String value </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePredictione7daa122
      description: <p>the observable to the ImagePrediction object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageWithServiceResponseAsync(UUID,byte [],QuickTestImageOptionalParameter)
  id: quickTestImageWithServiceResponseAsync(UUID,byte [],QuickTestImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: quickTestImageWithServiceResponseAsync(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)
  nameWithType: TrainingsImpl.quickTestImageWithServiceResponseAsync(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageWithServiceResponseAsync(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2717
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Quick test an image.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<ImagePrediction>> quickTestImageWithServiceResponseAsync(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: imageData
      type: ccd9418d
      description: <p>the InputStream value </p>
    - id: quickTestImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePredictione7daa122
      description: <p>the observable to the ImagePrediction object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageWithServiceResponseAsync(UUID,byte [],UUID)
  id: quickTestImageWithServiceResponseAsync(UUID,byte [],UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: quickTestImageWithServiceResponseAsync(UUID projectId, byte[] imageData, UUID iterationId)
  nameWithType: TrainingsImpl.quickTestImageWithServiceResponseAsync(UUID projectId, byte[] imageData, UUID iterationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageWithServiceResponseAsync(UUID projectId, byte[] imageData, UUID iterationId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2742
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Quick test an image.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<ImagePrediction>> quickTestImageWithServiceResponseAsync(UUID projectId, byte[] imageData, UUID iterationId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: imageData
      type: ccd9418d
      description: <p>the InputStream value </p>
    - id: iterationId
      type: add9545a
      description: <p>Optional. Specifies the id of a particular iteration to evaluate against. The default iteration for the project will be used when not specified. </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePredictione7daa122
      description: <p>the observable to the ImagePrediction object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.TrainingsImpl(Retrofit,TrainingApiImpl)
  id: TrainingsImpl(Retrofit,TrainingApiImpl)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: TrainingsImpl(Retrofit retrofit, TrainingApiImpl client)
  nameWithType: TrainingsImpl.TrainingsImpl(Retrofit retrofit, TrainingApiImpl client)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.TrainingsImpl(Retrofit retrofit, TrainingApiImpl client)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.TrainingsImpl*
  type: Constructor
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 97
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Initializes an instance of TrainingsImpl.</p>\r\n<p></p>"
  syntax:
    content: public TrainingsImpl(Retrofit retrofit, TrainingApiImpl client)
    parameters:
    - id: retrofit
      type: 964879b9
      description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    - id: client
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingApiImpl
      description: <p>the instance of the service client containing this operation class. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.trainProject(UUID)
  id: trainProject(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: trainProject(UUID projectId)
  nameWithType: TrainingsImpl.trainProject(UUID projectId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.trainProject(UUID projectId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.trainProject*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2593
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Queues project for training.</p>\r\n<p></p>"
  syntax:
    content: public Iteration trainProject(UUID projectId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
      description: <p>the Iteration object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.trainProject(UUID)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.trainProjectAsync(UUID)
  id: trainProjectAsync(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: trainProjectAsync(UUID projectId)
  nameWithType: TrainingsImpl.trainProjectAsync(UUID projectId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.trainProjectAsync(UUID projectId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.trainProjectAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2616
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Queues project for training.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Iteration> trainProjectAsync(UUID projectId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iterationa08ddfce
      description: <p>the observable to the Iteration object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.trainProjectAsync(UUID)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.trainProjectAsync(UUID,final ServiceCallback<Iteration>)
  id: trainProjectAsync(UUID,final ServiceCallback<Iteration>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: trainProjectAsync(UUID projectId, final ServiceCallback<Iteration> serviceCallback)
  nameWithType: TrainingsImpl.trainProjectAsync(UUID projectId, final ServiceCallback<Iteration> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.trainProjectAsync(UUID projectId, final ServiceCallback<Iteration> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.trainProjectAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2605
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Queues project for training.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Iteration> trainProjectAsync(UUID projectId, final ServiceCallback<Iteration> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iterationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iterationa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.trainProjectWithServiceResponseAsync(UUID)
  id: trainProjectWithServiceResponseAsync(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: trainProjectWithServiceResponseAsync(UUID projectId)
  nameWithType: TrainingsImpl.trainProjectWithServiceResponseAsync(UUID projectId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.trainProjectWithServiceResponseAsync(UUID projectId)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.trainProjectWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2632
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Queues project for training.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Iteration>> trainProjectWithServiceResponseAsync(UUID projectId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteratione7daa122
      description: <p>the observable to the Iteration object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateIteration(UUID,UUID,Iteration)
  id: updateIteration(UUID,UUID,Iteration)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: updateIteration(UUID projectId, UUID iterationId, Iteration updatedIteration)
  nameWithType: TrainingsImpl.updateIteration(UUID projectId, UUID iterationId, Iteration updatedIteration)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateIteration(UUID projectId, UUID iterationId, Iteration updatedIteration)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateIteration*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1791
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Update a specific iteration.</p>\r\n<p></p>"
  syntax:
    content: public Iteration updateIteration(UUID projectId, UUID iterationId, Iteration updatedIteration)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>Project id </p>
    - id: iterationId
      type: add9545a
      description: <p>Iteration id </p>
    - id: updatedIteration
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
      description: <p>The updated iteration model </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
      description: <p>the Iteration object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateIteration(UUID,UUID,Iteration)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateIterationAsync(UUID,UUID,Iteration)
  id: updateIterationAsync(UUID,UUID,Iteration)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: updateIterationAsync(UUID projectId, UUID iterationId, Iteration updatedIteration)
  nameWithType: TrainingsImpl.updateIterationAsync(UUID projectId, UUID iterationId, Iteration updatedIteration)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateIterationAsync(UUID projectId, UUID iterationId, Iteration updatedIteration)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateIterationAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1818
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Update a specific iteration.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Iteration> updateIterationAsync(UUID projectId, UUID iterationId, Iteration updatedIteration)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>Project id </p>
    - id: iterationId
      type: add9545a
      description: <p>Iteration id </p>
    - id: updatedIteration
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
      description: <p>The updated iteration model </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iterationa08ddfce
      description: <p>the observable to the Iteration object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateIterationAsync(UUID,UUID,Iteration)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateIterationAsync(UUID,UUID,Iteration,final ServiceCallback<Iteration>)
  id: updateIterationAsync(UUID,UUID,Iteration,final ServiceCallback<Iteration>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: updateIterationAsync(UUID projectId, UUID iterationId, Iteration updatedIteration, final ServiceCallback<Iteration> serviceCallback)
  nameWithType: TrainingsImpl.updateIterationAsync(UUID projectId, UUID iterationId, Iteration updatedIteration, final ServiceCallback<Iteration> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateIterationAsync(UUID projectId, UUID iterationId, Iteration updatedIteration, final ServiceCallback<Iteration> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateIterationAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1805
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Update a specific iteration.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Iteration> updateIterationAsync(UUID projectId, UUID iterationId, Iteration updatedIteration, final ServiceCallback<Iteration> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>Project id </p>
    - id: iterationId
      type: add9545a
      description: <p>Iteration id </p>
    - id: updatedIteration
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
      description: <p>The updated iteration model </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iterationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iterationa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateIterationWithServiceResponseAsync(UUID,UUID,Iteration)
  id: updateIterationWithServiceResponseAsync(UUID,UUID,Iteration)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: updateIterationWithServiceResponseAsync(UUID projectId, UUID iterationId, Iteration updatedIteration)
  nameWithType: TrainingsImpl.updateIterationWithServiceResponseAsync(UUID projectId, UUID iterationId, Iteration updatedIteration)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateIterationWithServiceResponseAsync(UUID projectId, UUID iterationId, Iteration updatedIteration)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateIterationWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 1836
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Update a specific iteration.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Iteration>> updateIterationWithServiceResponseAsync(UUID projectId, UUID iterationId, Iteration updatedIteration)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>Project id </p>
    - id: iterationId
      type: add9545a
      description: <p>Iteration id </p>
    - id: updatedIteration
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
      description: <p>The updated iteration model </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteratione7daa122
      description: <p>the observable to the Iteration object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateProject(UUID,Project)
  id: updateProject(UUID,Project)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: updateProject(UUID projectId, Project updatedProject)
  nameWithType: TrainingsImpl.updateProject(UUID projectId, Project updatedProject)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateProject(UUID projectId, Project updatedProject)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateProject*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2122
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Update a specific project.</p>\r\n<p></p>"
  syntax:
    content: public Project updateProject(UUID projectId, Project updatedProject)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project to update </p>
    - id: updatedProject
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
      description: <p>The updated project model </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
      description: <p>the Project object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateProject(UUID,Project)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateProjectAsync(UUID,Project)
  id: updateProjectAsync(UUID,Project)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: updateProjectAsync(UUID projectId, Project updatedProject)
  nameWithType: TrainingsImpl.updateProjectAsync(UUID projectId, Project updatedProject)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateProjectAsync(UUID projectId, Project updatedProject)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateProjectAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2147
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Update a specific project.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Project> updateProjectAsync(UUID projectId, Project updatedProject)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project to update </p>
    - id: updatedProject
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
      description: <p>The updated project model </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecta08ddfce
      description: <p>the observable to the Project object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateProjectAsync(UUID,Project)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateProjectAsync(UUID,Project,final ServiceCallback<Project>)
  id: updateProjectAsync(UUID,Project,final ServiceCallback<Project>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: updateProjectAsync(UUID projectId, Project updatedProject, final ServiceCallback<Project> serviceCallback)
  nameWithType: TrainingsImpl.updateProjectAsync(UUID projectId, Project updatedProject, final ServiceCallback<Project> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateProjectAsync(UUID projectId, Project updatedProject, final ServiceCallback<Project> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateProjectAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2135
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Update a specific project.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Project> updateProjectAsync(UUID projectId, Project updatedProject, final ServiceCallback<Project> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project to update </p>
    - id: updatedProject
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
      description: <p>The updated project model </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateProjectWithServiceResponseAsync(UUID,Project)
  id: updateProjectWithServiceResponseAsync(UUID,Project)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: updateProjectWithServiceResponseAsync(UUID projectId, Project updatedProject)
  nameWithType: TrainingsImpl.updateProjectWithServiceResponseAsync(UUID projectId, Project updatedProject)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateProjectWithServiceResponseAsync(UUID projectId, Project updatedProject)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateProjectWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 2164
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Update a specific project.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Project>> updateProjectWithServiceResponseAsync(UUID projectId, Project updatedProject)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project to update </p>
    - id: updatedProject
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
      description: <p>The updated project model </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecte7daa122
      description: <p>the observable to the Project object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateTag(UUID,UUID,Tag)
  id: updateTag(UUID,UUID,Tag)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: updateTag(UUID projectId, UUID tagId, Tag updatedTag)
  nameWithType: TrainingsImpl.updateTag(UUID projectId, UUID tagId, Tag updatedTag)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateTag(UUID projectId, UUID tagId, Tag updatedTag)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateTag*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 602
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Update a tag.</p>\r\n<p></p>"
  syntax:
    content: public Tag updateTag(UUID projectId, UUID tagId, Tag updatedTag)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: tagId
      type: add9545a
      description: <p>The id of the target tag </p>
    - id: updatedTag
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
      description: <p>The updated tag model </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
      description: <p>the Tag object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateTag(UUID,UUID,Tag)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateTagAsync(UUID,UUID,Tag)
  id: updateTagAsync(UUID,UUID,Tag)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: updateTagAsync(UUID projectId, UUID tagId, Tag updatedTag)
  nameWithType: TrainingsImpl.updateTagAsync(UUID projectId, UUID tagId, Tag updatedTag)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateTagAsync(UUID projectId, UUID tagId, Tag updatedTag)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateTagAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 629
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Update a tag.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Tag> updateTagAsync(UUID projectId, UUID tagId, Tag updatedTag)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: tagId
      type: add9545a
      description: <p>The id of the target tag </p>
    - id: updatedTag
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
      description: <p>The updated tag model </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Taga08ddfce
      description: <p>the observable to the Tag object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateTagAsync(UUID,UUID,Tag)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateTagAsync(UUID,UUID,Tag,final ServiceCallback<Tag>)
  id: updateTagAsync(UUID,UUID,Tag,final ServiceCallback<Tag>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: updateTagAsync(UUID projectId, UUID tagId, Tag updatedTag, final ServiceCallback<Tag> serviceCallback)
  nameWithType: TrainingsImpl.updateTagAsync(UUID projectId, UUID tagId, Tag updatedTag, final ServiceCallback<Tag> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateTagAsync(UUID projectId, UUID tagId, Tag updatedTag, final ServiceCallback<Tag> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateTagAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 616
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Update a tag.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Tag> updateTagAsync(UUID projectId, UUID tagId, Tag updatedTag, final ServiceCallback<Tag> serviceCallback)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: tagId
      type: add9545a
      description: <p>The id of the target tag </p>
    - id: updatedTag
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
      description: <p>The updated tag model </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Taga08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Taga08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateTagWithServiceResponseAsync(UUID,UUID,Tag)
  id: updateTagWithServiceResponseAsync(UUID,UUID,Tag)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.yml
  langs:
  - java
  name: updateTagWithServiceResponseAsync(UUID projectId, UUID tagId, Tag updatedTag)
  nameWithType: TrainingsImpl.updateTagWithServiceResponseAsync(UUID projectId, UUID tagId, Tag updatedTag)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateTagWithServiceResponseAsync(UUID projectId, UUID tagId, Tag updatedTag)
  overload: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateTagWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/customvision/training/src/main/java/com/microsoft/azure/cognitiveservices/vision/customvision/training/implementation/TrainingsImpl.java
    startLine: 647
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  summary: "<p>Update a tag.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Tag>> updateTagWithServiceResponseAsync(UUID projectId, UUID tagId, Tag updatedTag)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id </p>
    - id: tagId
      type: add9545a
      description: <p>The id of the target tag </p>
    - id: updatedTag
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
      description: <p>The updated tag model </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tage7daa122
      description: <p>the observable to the Tag object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
references:
- uid: 964879b9
  spec.java:
  - name: Retrofit
    fullName: Retrofit
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.TrainingsImpl*
  name: TrainingsImpl
  nameWithType: TrainingsImpl.TrainingsImpl
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.TrainingsImpl
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: dc385fd4
  spec.java:
  - name: CloudException
    fullName: CloudException
- uid: 9b2a4515
  spec.java:
  - name: RuntimeException
    fullName: RuntimeException
- uid: add9545a
  spec.java:
  - name: UUID
    fullName: UUID
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTag*
  name: createTag
  nameWithType: TrainingsImpl.createTag
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTag
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Taga08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
    name: Tag
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Taga08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
    name: Tag
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTagAsync*
  name: createTagAsync
  nameWithType: TrainingsImpl.createTagAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTagAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Taga08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
    name: Tag
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tage7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
    name: Tag
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTagWithServiceResponseAsync*
  name: createTagWithServiceResponseAsync
  nameWithType: TrainingsImpl.createTagWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createTagWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: ece1e11a
  spec.java:
  - name: TrainingsCreateTagParameters
    fullName: TrainingsCreateTagParameters
- uid: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Taga08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
    name: Tag
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTags*
  name: getTags
  nameWithType: TrainingsImpl.getTags
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTags
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 8ca6b405com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tage7daa122
  spec.java:
  - name: final ServiceCallback<List<
    fullName: final ServiceCallback<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
    name: Tag
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag.yml
  - name: '>>'
    fullName: '>>'
- uid: b7698b59com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tage7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
    name: Tag
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagsAsync*
  name: getTagsAsync
  nameWithType: TrainingsImpl.getTagsAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagsAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tage7daa122
  spec.java:
  - name: Observable<List<
    fullName: Observable<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
    name: Tag
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag.yml
  - name: '>>'
    fullName: '>>'
- uid: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<List<
    fullName: Observable<ServiceResponse<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
    name: Tag
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagsWithServiceResponseAsync*
  name: getTagsWithServiceResponseAsync
  nameWithType: TrainingsImpl.getTagsWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagsWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: e1408fc0
  spec.java:
  - name: TrainingsGetTagsParameters
    fullName: TrainingsGetTagsParameters
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateTag*
  name: updateTag
  nameWithType: TrainingsImpl.updateTag
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateTag
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateTagAsync*
  name: updateTagAsync
  nameWithType: TrainingsImpl.updateTagAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateTagAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateTagWithServiceResponseAsync*
  name: updateTagWithServiceResponseAsync
  nameWithType: TrainingsImpl.updateTagWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateTagWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteTag*
  name: deleteTag
  nameWithType: TrainingsImpl.deleteTag
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteTag
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 1c186eb5
  spec.java:
  - name: final ServiceCallback<Void>
    fullName: final ServiceCallback<Void>
- uid: aa81d378
  spec.java:
  - name: ServiceFuture<Void>
    fullName: ServiceFuture<Void>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteTagAsync*
  name: deleteTagAsync
  nameWithType: TrainingsImpl.deleteTagAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteTagAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: dcd884b2
  spec.java:
  - name: Observable<Void>
    fullName: Observable<Void>
- uid: 27015fa1
  spec.java:
  - name: Observable<ServiceResponse<Void>>
    fullName: Observable<ServiceResponse<Void>>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteTagWithServiceResponseAsync*
  name: deleteTagWithServiceResponseAsync
  nameWithType: TrainingsImpl.deleteTagWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteTagWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTag*
  name: getTag
  nameWithType: TrainingsImpl.getTag
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTag
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagAsync*
  name: getTagAsync
  nameWithType: TrainingsImpl.getTagAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagWithServiceResponseAsync*
  name: getTagWithServiceResponseAsync
  nameWithType: TrainingsImpl.getTagWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTagWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: b15923ab
  spec.java:
  - name: TrainingsGetTagParameters
    fullName: TrainingsGetTagParameters
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIteration*
  name: exportIteration
  nameWithType: TrainingsImpl.exportIteration
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIteration
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Exporta08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export
    name: Export
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Exporta08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export
    name: Export
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIterationAsync*
  name: exportIterationAsync
  nameWithType: TrainingsImpl.exportIterationAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIterationAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Exporta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export
    name: Export
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Exporte7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export
    name: Export
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIterationWithServiceResponseAsync*
  name: exportIterationWithServiceResponseAsync
  nameWithType: TrainingsImpl.exportIterationWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.exportIterationWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 088c1c99
  spec.java:
  - name: TrainingsExportIterationParameters
    fullName: TrainingsExportIterationParameters
- uid: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Exporta08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export
    name: Export
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getExports*
  name: getExports
  nameWithType: TrainingsImpl.getExports
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getExports
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 8ca6b405com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Exporte7daa122
  spec.java:
  - name: final ServiceCallback<List<
    fullName: final ServiceCallback<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export
    name: Export
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export.yml
  - name: '>>'
    fullName: '>>'
- uid: b7698b59com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Exporte7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export
    name: Export
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getExportsAsync*
  name: getExportsAsync
  nameWithType: TrainingsImpl.getExportsAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getExportsAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Exporte7daa122
  spec.java:
  - name: Observable<List<
    fullName: Observable<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export
    name: Export
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export.yml
  - name: '>>'
    fullName: '>>'
- uid: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<List<
    fullName: Observable<ServiceResponse<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export
    name: Export
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getExportsWithServiceResponseAsync*
  name: getExportsWithServiceResponseAsync
  nameWithType: TrainingsImpl.getExportsWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getExportsWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCount*
  name: getImagePerformanceCount
  nameWithType: TrainingsImpl.getImagePerformanceCount
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCount
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: cc651563
  spec.java:
  - name: final ServiceCallback<Integer>
    fullName: final ServiceCallback<Integer>
- uid: 544226ce
  spec.java:
  - name: ServiceFuture<Integer>
    fullName: ServiceFuture<Integer>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCountAsync*
  name: getImagePerformanceCountAsync
  nameWithType: TrainingsImpl.getImagePerformanceCountAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCountAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 44f6ae9a
  spec.java:
  - name: Observable<Integer>
    fullName: Observable<Integer>
- uid: 3eef8a5e
  spec.java:
  - name: Observable<ServiceResponse<Integer>>
    fullName: Observable<ServiceResponse<Integer>>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCountWithServiceResponseAsync*
  name: getImagePerformanceCountWithServiceResponseAsync
  nameWithType: TrainingsImpl.getImagePerformanceCountWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformanceCountWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 7d60c20e
  spec.java:
  - name: List<String>
    fullName: List<String>
- uid: ce339f12
  spec.java:
  - name: TrainingsGetImagePerformanceCountParameters
    fullName: TrainingsGetImagePerformanceCountParameters
- uid: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformancea08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance
    name: ImagePerformance
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformances*
  name: getImagePerformances
  nameWithType: TrainingsImpl.getImagePerformances
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformances
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 8ca6b405com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformancee7daa122
  spec.java:
  - name: final ServiceCallback<List<
    fullName: final ServiceCallback<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance
    name: ImagePerformance
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance.yml
  - name: '>>'
    fullName: '>>'
- uid: b7698b59com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformancee7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance
    name: ImagePerformance
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformancesAsync*
  name: getImagePerformancesAsync
  nameWithType: TrainingsImpl.getImagePerformancesAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformancesAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformancee7daa122
  spec.java:
  - name: Observable<List<
    fullName: Observable<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance
    name: ImagePerformance
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance.yml
  - name: '>>'
    fullName: '>>'
- uid: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<List<
    fullName: Observable<ServiceResponse<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance
    name: ImagePerformance
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformancesWithServiceResponseAsync*
  name: getImagePerformancesWithServiceResponseAsync
  nameWithType: TrainingsImpl.getImagePerformancesWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagePerformancesWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 08effaa0
  spec.java:
  - name: Integer
    fullName: Integer
- uid: 58e4330e
  spec.java:
  - name: TrainingsGetImagePerformancesParameters
    fullName: TrainingsGetImagePerformancesParameters
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformance*
  name: getIterationPerformance
  nameWithType: TrainingsImpl.getIterationPerformance
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformance
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformancea08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformance
    name: IterationPerformance
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformance
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformance.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformancea08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformance
    name: IterationPerformance
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformance
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformance.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformanceAsync*
  name: getIterationPerformanceAsync
  nameWithType: TrainingsImpl.getIterationPerformanceAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformanceAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformancea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformance
    name: IterationPerformance
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformance
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformance.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformancee7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformance
    name: IterationPerformance
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformance
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformance.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformanceWithServiceResponseAsync*
  name: getIterationPerformanceWithServiceResponseAsync
  nameWithType: TrainingsImpl.getIterationPerformanceWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationPerformanceWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 8dd309d9
  spec.java:
  - name: Double
    fullName: Double
- uid: 4c425809
  spec.java:
  - name: TrainingsGetIterationPerformanceParameters
    fullName: TrainingsGetIterationPerformanceParameters
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateIteration*
  name: updateIteration
  nameWithType: TrainingsImpl.updateIteration
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateIteration
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iterationa08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
    name: Iteration
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iterationa08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
    name: Iteration
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateIterationAsync*
  name: updateIterationAsync
  nameWithType: TrainingsImpl.updateIterationAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateIterationAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iterationa08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
    name: Iteration
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteratione7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
    name: Iteration
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateIterationWithServiceResponseAsync*
  name: updateIterationWithServiceResponseAsync
  nameWithType: TrainingsImpl.updateIterationWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateIterationWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteIteration*
  name: deleteIteration
  nameWithType: TrainingsImpl.deleteIteration
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteIteration
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteIterationAsync*
  name: deleteIterationAsync
  nameWithType: TrainingsImpl.deleteIterationAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteIterationAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteIterationWithServiceResponseAsync*
  name: deleteIterationWithServiceResponseAsync
  nameWithType: TrainingsImpl.deleteIterationWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteIterationWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIteration*
  name: getIteration
  nameWithType: TrainingsImpl.getIteration
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIteration
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationAsync*
  name: getIterationAsync
  nameWithType: TrainingsImpl.getIterationAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationWithServiceResponseAsync*
  name: getIterationWithServiceResponseAsync
  nameWithType: TrainingsImpl.getIterationWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iterationa08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
    name: Iteration
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterations*
  name: getIterations
  nameWithType: TrainingsImpl.getIterations
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterations
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 8ca6b405com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteratione7daa122
  spec.java:
  - name: final ServiceCallback<List<
    fullName: final ServiceCallback<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
    name: Iteration
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration.yml
  - name: '>>'
    fullName: '>>'
- uid: b7698b59com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteratione7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
    name: Iteration
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationsAsync*
  name: getIterationsAsync
  nameWithType: TrainingsImpl.getIterationsAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationsAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteratione7daa122
  spec.java:
  - name: Observable<List<
    fullName: Observable<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
    name: Iteration
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration.yml
  - name: '>>'
    fullName: '>>'
- uid: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<List<
    fullName: Observable<ServiceResponse<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
    name: Iteration
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationsWithServiceResponseAsync*
  name: getIterationsWithServiceResponseAsync
  nameWithType: TrainingsImpl.getIterationsWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getIterationsWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateProject*
  name: updateProject
  nameWithType: TrainingsImpl.updateProject
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateProject
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecta08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
    name: Project
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecta08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
    name: Project
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateProjectAsync*
  name: updateProjectAsync
  nameWithType: TrainingsImpl.updateProjectAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateProjectAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
    name: Project
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecte7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
    name: Project
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateProjectWithServiceResponseAsync*
  name: updateProjectWithServiceResponseAsync
  nameWithType: TrainingsImpl.updateProjectWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.updateProjectWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteProject*
  name: deleteProject
  nameWithType: TrainingsImpl.deleteProject
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteProject
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteProjectAsync*
  name: deleteProjectAsync
  nameWithType: TrainingsImpl.deleteProjectAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteProjectAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteProjectWithServiceResponseAsync*
  name: deleteProjectWithServiceResponseAsync
  nameWithType: TrainingsImpl.deleteProjectWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteProjectWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProject*
  name: getProject
  nameWithType: TrainingsImpl.getProject
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProject
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectAsync*
  name: getProjectAsync
  nameWithType: TrainingsImpl.getProjectAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectWithServiceResponseAsync*
  name: getProjectWithServiceResponseAsync
  nameWithType: TrainingsImpl.getProjectWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProject*
  name: createProject
  nameWithType: TrainingsImpl.createProject
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProject
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProjectAsync*
  name: createProjectAsync
  nameWithType: TrainingsImpl.createProjectAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProjectAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProjectWithServiceResponseAsync*
  name: createProjectWithServiceResponseAsync
  nameWithType: TrainingsImpl.createProjectWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createProjectWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 17fdca73
  spec.java:
  - name: TrainingsCreateProjectParameters
    fullName: TrainingsCreateProjectParameters
- uid: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecta08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
    name: Project
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjects*
  name: getProjects
  nameWithType: TrainingsImpl.getProjects
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjects
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 8ca6b405com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecte7daa122
  spec.java:
  - name: final ServiceCallback<List<
    fullName: final ServiceCallback<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
    name: Project
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project.yml
  - name: '>>'
    fullName: '>>'
- uid: b7698b59com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecte7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
    name: Project
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectsAsync*
  name: getProjectsAsync
  nameWithType: TrainingsImpl.getProjectsAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectsAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecte7daa122
  spec.java:
  - name: Observable<List<
    fullName: Observable<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
    name: Project
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project.yml
  - name: '>>'
    fullName: '>>'
- uid: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<List<
    fullName: Observable<ServiceResponse<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
    name: Project
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectsWithServiceResponseAsync*
  name: getProjectsWithServiceResponseAsync
  nameWithType: TrainingsImpl.getProjectsWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getProjectsWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.trainProject*
  name: trainProject
  nameWithType: TrainingsImpl.trainProject
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.trainProject
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.trainProjectAsync*
  name: trainProjectAsync
  nameWithType: TrainingsImpl.trainProjectAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.trainProjectAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.trainProjectWithServiceResponseAsync*
  name: trainProjectWithServiceResponseAsync
  nameWithType: TrainingsImpl.trainProjectWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.trainProjectWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImage*
  name: quickTestImage
  nameWithType: TrainingsImpl.quickTestImage
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImage
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePredictiona08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction
    name: ImagePrediction
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePredictiona08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction
    name: ImagePrediction
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageAsync*
  name: quickTestImageAsync
  nameWithType: TrainingsImpl.quickTestImageAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePredictiona08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction
    name: ImagePrediction
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePredictione7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction
    name: ImagePrediction
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageWithServiceResponseAsync*
  name: quickTestImageWithServiceResponseAsync
  nameWithType: TrainingsImpl.quickTestImageWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 1b5331de
  spec.java:
  - name: TrainingsQuickTestImageParameters
    fullName: TrainingsQuickTestImageParameters
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrl*
  name: quickTestImageUrl
  nameWithType: TrainingsImpl.quickTestImageUrl
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrl
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrlAsync*
  name: quickTestImageUrlAsync
  nameWithType: TrainingsImpl.quickTestImageUrlAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrlAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrlWithServiceResponseAsync*
  name: quickTestImageUrlWithServiceResponseAsync
  nameWithType: TrainingsImpl.quickTestImageUrlWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.quickTestImageUrlWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 455b0c74
  spec.java:
  - name: TrainingsQuickTestImageUrlParameters
    fullName: TrainingsQuickTestImageUrlParameters
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.queryPredictions*
  name: queryPredictions
  nameWithType: TrainingsImpl.queryPredictions
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.queryPredictions
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResulta08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResult
    name: PredictionQueryResult
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResult
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResult.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResulta08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResult
    name: PredictionQueryResult
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResult
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResult.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.queryPredictionsAsync*
  name: queryPredictionsAsync
  nameWithType: TrainingsImpl.queryPredictionsAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.queryPredictionsAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResult
    name: PredictionQueryResult
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResult
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResult.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResulte7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResult
    name: PredictionQueryResult
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResult
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResult.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.queryPredictionsWithServiceResponseAsync*
  name: queryPredictionsWithServiceResponseAsync
  nameWithType: TrainingsImpl.queryPredictionsWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.queryPredictionsWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deletePrediction*
  name: deletePrediction
  nameWithType: TrainingsImpl.deletePrediction
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deletePrediction
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deletePredictionAsync*
  name: deletePredictionAsync
  nameWithType: TrainingsImpl.deletePredictionAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deletePredictionAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deletePredictionWithServiceResponseAsync*
  name: deletePredictionWithServiceResponseAsync
  nameWithType: TrainingsImpl.deletePredictionWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deletePredictionWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImageRegionProposals*
  name: getImageRegionProposals
  nameWithType: TrainingsImpl.getImageRegionProposals
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImageRegionProposals
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposala08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposal
    name: ImageRegionProposal
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposal
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposal.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposala08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposal
    name: ImageRegionProposal
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposal
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposal.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImageRegionProposalsAsync*
  name: getImageRegionProposalsAsync
  nameWithType: TrainingsImpl.getImageRegionProposalsAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImageRegionProposalsAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposala08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposal
    name: ImageRegionProposal
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposal
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposal.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposale7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposal
    name: ImageRegionProposal
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposal
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposal.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImageRegionProposalsWithServiceResponseAsync*
  name: getImageRegionProposalsWithServiceResponseAsync
  nameWithType: TrainingsImpl.getImageRegionProposalsWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImageRegionProposalsWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageRegions*
  name: deleteImageRegions
  nameWithType: TrainingsImpl.deleteImageRegions
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageRegions
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageRegionsAsync*
  name: deleteImageRegionsAsync
  nameWithType: TrainingsImpl.deleteImageRegionsAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageRegionsAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageRegionsWithServiceResponseAsync*
  name: deleteImageRegionsWithServiceResponseAsync
  nameWithType: TrainingsImpl.deleteImageRegionsWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageRegionsWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegions*
  name: createImageRegions
  nameWithType: TrainingsImpl.createImageRegions
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegions
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummarya08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummary
    name: ImageRegionCreateSummary
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummary
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummary.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummarya08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummary
    name: ImageRegionCreateSummary
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummary
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummary.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegionsAsync*
  name: createImageRegionsAsync
  nameWithType: TrainingsImpl.createImageRegionsAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegionsAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummarya08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummary
    name: ImageRegionCreateSummary
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummary
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummary.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummarye7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummary
    name: ImageRegionCreateSummary
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummary
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummary.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegionsWithServiceResponseAsync*
  name: createImageRegionsWithServiceResponseAsync
  nameWithType: TrainingsImpl.createImageRegionsWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageRegionsWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateEntrya08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateEntry
    name: ImageRegionCreateEntry
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateEntry
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateEntry.yml
  - name: '>'
    fullName: '>'
- uid: 7860d57b
  spec.java:
  - name: TrainingsCreateImageRegionsParameters
    fullName: TrainingsCreateImageRegionsParameters
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageTags*
  name: deleteImageTags
  nameWithType: TrainingsImpl.deleteImageTags
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageTags
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageTagsAsync*
  name: deleteImageTagsAsync
  nameWithType: TrainingsImpl.deleteImageTagsAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageTagsAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageTagsWithServiceResponseAsync*
  name: deleteImageTagsWithServiceResponseAsync
  nameWithType: TrainingsImpl.deleteImageTagsWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImageTagsWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTags*
  name: createImageTags
  nameWithType: TrainingsImpl.createImageTags
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTags
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummarya08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummary
    name: ImageTagCreateSummary
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummary
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummary.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummarya08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummary
    name: ImageTagCreateSummary
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummary
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummary.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTagsAsync*
  name: createImageTagsAsync
  nameWithType: TrainingsImpl.createImageTagsAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTagsAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummarya08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummary
    name: ImageTagCreateSummary
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummary
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummary.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummarye7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummary
    name: ImageTagCreateSummary
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummary
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummary.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTagsWithServiceResponseAsync*
  name: createImageTagsWithServiceResponseAsync
  nameWithType: TrainingsImpl.createImageTagsWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImageTagsWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateEntrya08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateEntry
    name: ImageTagCreateEntry
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateEntry
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateEntry.yml
  - name: '>'
    fullName: '>'
- uid: bd757fc0
  spec.java:
  - name: TrainingsCreateImageTagsParameters
    fullName: TrainingsCreateImageTagsParameters
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromPredictions*
  name: createImagesFromPredictions
  nameWithType: TrainingsImpl.createImagesFromPredictions
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromPredictions
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarya08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary
    name: ImageCreateSummary
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarya08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary
    name: ImageCreateSummary
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromPredictionsAsync*
  name: createImagesFromPredictionsAsync
  nameWithType: TrainingsImpl.createImagesFromPredictionsAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromPredictionsAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarya08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary
    name: ImageCreateSummary
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarye7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary
    name: ImageCreateSummary
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromPredictionsWithServiceResponseAsync*
  name: createImagesFromPredictionsWithServiceResponseAsync
  nameWithType: TrainingsImpl.createImagesFromPredictionsWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromPredictionsWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromUrls*
  name: createImagesFromUrls
  nameWithType: TrainingsImpl.createImagesFromUrls
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromUrls
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromUrlsAsync*
  name: createImagesFromUrlsAsync
  nameWithType: TrainingsImpl.createImagesFromUrlsAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromUrlsAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromUrlsWithServiceResponseAsync*
  name: createImagesFromUrlsWithServiceResponseAsync
  nameWithType: TrainingsImpl.createImagesFromUrlsWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromUrlsWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromFiles*
  name: createImagesFromFiles
  nameWithType: TrainingsImpl.createImagesFromFiles
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromFiles
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromFilesAsync*
  name: createImagesFromFilesAsync
  nameWithType: TrainingsImpl.createImagesFromFilesAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromFilesAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromFilesWithServiceResponseAsync*
  name: createImagesFromFilesWithServiceResponseAsync
  nameWithType: TrainingsImpl.createImagesFromFilesWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromFilesWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImages*
  name: deleteImages
  nameWithType: TrainingsImpl.deleteImages
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImages
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImagesAsync*
  name: deleteImagesAsync
  nameWithType: TrainingsImpl.deleteImagesAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImagesAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImagesWithServiceResponseAsync*
  name: deleteImagesWithServiceResponseAsync
  nameWithType: TrainingsImpl.deleteImagesWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.deleteImagesWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromData*
  name: createImagesFromData
  nameWithType: TrainingsImpl.createImagesFromData
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromData
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromDataAsync*
  name: createImagesFromDataAsync
  nameWithType: TrainingsImpl.createImagesFromDataAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromDataAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromDataWithServiceResponseAsync*
  name: createImagesFromDataWithServiceResponseAsync
  nameWithType: TrainingsImpl.createImagesFromDataWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.createImagesFromDataWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: ac97658c
  spec.java:
  - name: TrainingsCreateImagesFromDataParameters
    fullName: TrainingsCreateImagesFromDataParameters
- uid: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Imagea08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image
    name: Image
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIds*
  name: getImagesByIds
  nameWithType: TrainingsImpl.getImagesByIds
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIds
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 8ca6b405com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Imagee7daa122
  spec.java:
  - name: final ServiceCallback<List<
    fullName: final ServiceCallback<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image
    name: Image
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image.yml
  - name: '>>'
    fullName: '>>'
- uid: b7698b59com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Imagee7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image
    name: Image
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIdsAsync*
  name: getImagesByIdsAsync
  nameWithType: TrainingsImpl.getImagesByIdsAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIdsAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Imagee7daa122
  spec.java:
  - name: Observable<List<
    fullName: Observable<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image
    name: Image
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image.yml
  - name: '>>'
    fullName: '>>'
- uid: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<List<
    fullName: Observable<ServiceResponse<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image
    name: Image
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIdsWithServiceResponseAsync*
  name: getImagesByIdsWithServiceResponseAsync
  nameWithType: TrainingsImpl.getImagesByIdsWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getImagesByIdsWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 395203a6
  spec.java:
  - name: TrainingsGetImagesByIdsParameters
    fullName: TrainingsGetImagesByIdsParameters
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCount*
  name: getUntaggedImageCount
  nameWithType: TrainingsImpl.getUntaggedImageCount
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCount
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCountAsync*
  name: getUntaggedImageCountAsync
  nameWithType: TrainingsImpl.getUntaggedImageCountAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCountAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCountWithServiceResponseAsync*
  name: getUntaggedImageCountWithServiceResponseAsync
  nameWithType: TrainingsImpl.getUntaggedImageCountWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImageCountWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 8b3f7b4b
  spec.java:
  - name: TrainingsGetUntaggedImageCountParameters
    fullName: TrainingsGetUntaggedImageCountParameters
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCount*
  name: getTaggedImageCount
  nameWithType: TrainingsImpl.getTaggedImageCount
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCount
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCountAsync*
  name: getTaggedImageCountAsync
  nameWithType: TrainingsImpl.getTaggedImageCountAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCountAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCountWithServiceResponseAsync*
  name: getTaggedImageCountWithServiceResponseAsync
  nameWithType: TrainingsImpl.getTaggedImageCountWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImageCountWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 4c78d6f1
  spec.java:
  - name: TrainingsGetTaggedImageCountParameters
    fullName: TrainingsGetTaggedImageCountParameters
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImages*
  name: getUntaggedImages
  nameWithType: TrainingsImpl.getUntaggedImages
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImages
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImagesAsync*
  name: getUntaggedImagesAsync
  nameWithType: TrainingsImpl.getUntaggedImagesAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImagesAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImagesWithServiceResponseAsync*
  name: getUntaggedImagesWithServiceResponseAsync
  nameWithType: TrainingsImpl.getUntaggedImagesWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getUntaggedImagesWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: fb401bf0
  spec.java:
  - name: TrainingsGetUntaggedImagesParameters
    fullName: TrainingsGetUntaggedImagesParameters
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImages*
  name: getTaggedImages
  nameWithType: TrainingsImpl.getTaggedImages
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImages
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImagesAsync*
  name: getTaggedImagesAsync
  nameWithType: TrainingsImpl.getTaggedImagesAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImagesAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImagesWithServiceResponseAsync*
  name: getTaggedImagesWithServiceResponseAsync
  nameWithType: TrainingsImpl.getTaggedImagesWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getTaggedImagesWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 8a9fb72a
  spec.java:
  - name: TrainingsGetTaggedImagesParameters
    fullName: TrainingsGetTaggedImagesParameters
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomain*
  name: getDomain
  nameWithType: TrainingsImpl.getDomain
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomain
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domaina08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain
    name: Domain
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domaina08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain
    name: Domain
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainAsync*
  name: getDomainAsync
  nameWithType: TrainingsImpl.getDomainAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domaina08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain
    name: Domain
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domaine7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain
    name: Domain
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainWithServiceResponseAsync*
  name: getDomainWithServiceResponseAsync
  nameWithType: TrainingsImpl.getDomainWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domaina08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain
    name: Domain
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomains*
  name: getDomains
  nameWithType: TrainingsImpl.getDomains
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomains
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 8ca6b405com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domaine7daa122
  spec.java:
  - name: final ServiceCallback<List<
    fullName: final ServiceCallback<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain
    name: Domain
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain.yml
  - name: '>>'
    fullName: '>>'
- uid: b7698b59com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domaine7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain
    name: Domain
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainsAsync*
  name: getDomainsAsync
  nameWithType: TrainingsImpl.getDomainsAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainsAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domaine7daa122
  spec.java:
  - name: Observable<List<
    fullName: Observable<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain
    name: Domain
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain.yml
  - name: '>>'
    fullName: '>>'
- uid: 8f9a8f9bcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<List<
    fullName: Observable<ServiceResponse<List<
  - uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain
    name: Domain
    fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain
    href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainsWithServiceResponseAsync*
  name: getDomainsWithServiceResponseAsync
  nameWithType: TrainingsImpl.getDomainsWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingsImpl.getDomainsWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: Trainings
  nameWithType: Trainings
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  type: Interface
  summary: <p>An instance of this class provides access to all the operations defined in Trainings. </p>
  syntax:
    content: public interface Trainings
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingApiImpl
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingApiImpl.yml
  name: TrainingApiImpl
  nameWithType: TrainingApiImpl
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.implementation.TrainingApiImpl
  type: Class
  summary: <p>Initializes a new instance of the TrainingApiImpl class. </p>
  syntax:
    content: public class TrainingApiImpl implements TrainingApi
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag.yml
  name: Tag
  nameWithType: Tag
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
  type: Class
  summary: <p>Represents a Tag. </p>
  syntax:
    content: public class Tag
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createTag(UUID,String,CreateTagOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: createTag(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)
  nameWithType: Trainings.createTag(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createTag(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)
  type: Method
  summary: >-
    <p>Create a tag for the project.</p>

    <p></p>
  syntax:
    content: public Tag createTag(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: name
      type: "26831127"
      description: <p>The tag name. </p>
    - id: createTagOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateTagOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
      description: <p>the Tag object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateTagOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateTagOptionalParameter.yml
  name: CreateTagOptionalParameter
  nameWithType: CreateTagOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateTagOptionalParameter
  type: Class
  summary: <p>The CreateTagOptionalParameter model. </p>
  syntax:
    content: public class CreateTagOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createTagAsync(UUID,String,CreateTagOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: createTagAsync(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)
  nameWithType: Trainings.createTagAsync(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createTagAsync(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)
  type: Method
  summary: >-
    <p>Create a tag for the project.</p>

    <p></p>
  syntax:
    content: public Observable<Tag> createTagAsync(UUID projectId, String name, CreateTagOptionalParameter createTagOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: name
      type: "26831127"
      description: <p>The tag name. </p>
    - id: createTagOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateTagOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Taga08ddfce
      description: <p>the observable to the Tag object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createTag()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: createTag()
  nameWithType: Trainings.createTag()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createTag()
  type: Method
  summary: >-
    <p>Create a tag for the project.</p>

    <p></p>
  syntax:
    content: public TrainingsCreateTagDefinitionStages.WithProjectId createTag()
    return:
      type: "98690114"
      description: <p>the first stage of the createTag call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTags(UUID,GetTagsOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getTags(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)
  nameWithType: Trainings.getTags(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTags(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)
  type: Method
  summary: >-
    <p>Get the tags for a given project and iteration.</p>

    <p></p>
  syntax:
    content: public List<Tag> getTags(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: getTagsOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagsOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Taga08ddfce
      description: <p>the List&lt;Tag&gt; object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagsOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagsOptionalParameter.yml
  name: GetTagsOptionalParameter
  nameWithType: GetTagsOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagsOptionalParameter
  type: Class
  summary: <p>The GetTagsOptionalParameter model. </p>
  syntax:
    content: public class GetTagsOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTagsAsync(UUID,GetTagsOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getTagsAsync(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)
  nameWithType: Trainings.getTagsAsync(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTagsAsync(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)
  type: Method
  summary: >-
    <p>Get the tags for a given project and iteration.</p>

    <p></p>
  syntax:
    content: public Observable<List<Tag>> getTagsAsync(UUID projectId, GetTagsOptionalParameter getTagsOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: getTagsOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagsOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tage7daa122
      description: <p>the observable to the List&lt;Tag&gt; object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTags()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getTags()
  nameWithType: Trainings.getTags()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTags()
  type: Method
  summary: >-
    <p>Get the tags for a given project and iteration.</p>

    <p></p>
  syntax:
    content: public TrainingsGetTagsDefinitionStages.WithProjectId getTags()
    return:
      type: 4f178c68
      description: <p>the first stage of the getTags call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateTag(UUID,UUID,Tag)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: updateTag(UUID projectId, UUID tagId, Tag updatedTag)
  nameWithType: Trainings.updateTag(UUID projectId, UUID tagId, Tag updatedTag)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateTag(UUID projectId, UUID tagId, Tag updatedTag)
  type: Method
  summary: >-
    <p>Update a tag.</p>

    <p></p>
  syntax:
    content: public Tag updateTag(UUID projectId, UUID tagId, Tag updatedTag)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: tagId
      type: add9545a
      description: <p>The id of the target tag. </p>
    - id: updatedTag
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
      description: <p>The updated tag model. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
      description: <p>the Tag object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateTagAsync(UUID,UUID,Tag)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: updateTagAsync(UUID projectId, UUID tagId, Tag updatedTag)
  nameWithType: Trainings.updateTagAsync(UUID projectId, UUID tagId, Tag updatedTag)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateTagAsync(UUID projectId, UUID tagId, Tag updatedTag)
  type: Method
  summary: >-
    <p>Update a tag.</p>

    <p></p>
  syntax:
    content: public Observable<Tag> updateTagAsync(UUID projectId, UUID tagId, Tag updatedTag)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: tagId
      type: add9545a
      description: <p>The id of the target tag. </p>
    - id: updatedTag
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
      description: <p>The updated tag model. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Taga08ddfce
      description: <p>the observable to the Tag object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteTag(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: deleteTag(UUID projectId, UUID tagId)
  nameWithType: Trainings.deleteTag(UUID projectId, UUID tagId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteTag(UUID projectId, UUID tagId)
  type: Method
  summary: >-
    <p>Delete a tag from the project.</p>

    <p></p>
  syntax:
    content: public void deleteTag(UUID projectId, UUID tagId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: tagId
      type: add9545a
      description: <p>Id of the tag to be deleted. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteTagAsync(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: deleteTagAsync(UUID projectId, UUID tagId)
  nameWithType: Trainings.deleteTagAsync(UUID projectId, UUID tagId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteTagAsync(UUID projectId, UUID tagId)
  type: Method
  summary: >-
    <p>Delete a tag from the project.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteTagAsync(UUID projectId, UUID tagId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: tagId
      type: add9545a
      description: <p>Id of the tag to be deleted. </p>
    return:
      type: dcd884b2
      description: <p>a representation of the deferred computation of this call if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTag(UUID,UUID,GetTagOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getTag(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)
  nameWithType: Trainings.getTag(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTag(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)
  type: Method
  summary: >-
    <p>Get information about a specific tag.</p>

    <p></p>
  syntax:
    content: public Tag getTag(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project this tag belongs to. </p>
    - id: tagId
      type: add9545a
      description: <p>The tag id. </p>
    - id: getTagOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Tag
      description: <p>the Tag object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagOptionalParameter.yml
  name: GetTagOptionalParameter
  nameWithType: GetTagOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagOptionalParameter
  type: Class
  summary: <p>The GetTagOptionalParameter model. </p>
  syntax:
    content: public class GetTagOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTagAsync(UUID,UUID,GetTagOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getTagAsync(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)
  nameWithType: Trainings.getTagAsync(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTagAsync(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)
  type: Method
  summary: >-
    <p>Get information about a specific tag.</p>

    <p></p>
  syntax:
    content: public Observable<Tag> getTagAsync(UUID projectId, UUID tagId, GetTagOptionalParameter getTagOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project this tag belongs to. </p>
    - id: tagId
      type: add9545a
      description: <p>The tag id. </p>
    - id: getTagOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTagOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Taga08ddfce
      description: <p>the observable to the Tag object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTag()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getTag()
  nameWithType: Trainings.getTag()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTag()
  type: Method
  summary: >-
    <p>Get information about a specific tag.</p>

    <p></p>
  syntax:
    content: public TrainingsGetTagDefinitionStages.WithProjectId getTag()
    return:
      type: "55847003"
      description: <p>the first stage of the getTag call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export.yml
  name: Export
  nameWithType: Export
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export
  type: Class
  summary: <p>The Export model. </p>
  syntax:
    content: public class Export
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.exportIteration(UUID,UUID,String,ExportIterationOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: exportIteration(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)
  nameWithType: Trainings.exportIteration(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.exportIteration(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)
  type: Method
  summary: >-
    <p>Export a trained iteration.</p>

    <p></p>
  syntax:
    content: public Export exportIteration(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. </p>
    - id: platform
      type: "26831127"
      description: "<p>The target platform (coreml or tensorflow). Possible values include: 'CoreML', 'TensorFlow', 'DockerFile', 'ONNX'. </p>"
    - id: exportIterationOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ExportIterationOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Export
      description: <p>the Export object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ExportIterationOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ExportIterationOptionalParameter.yml
  name: ExportIterationOptionalParameter
  nameWithType: ExportIterationOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ExportIterationOptionalParameter
  type: Class
  summary: <p>The ExportIterationOptionalParameter model. </p>
  syntax:
    content: public class ExportIterationOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.exportIterationAsync(UUID,UUID,String,ExportIterationOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: exportIterationAsync(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)
  nameWithType: Trainings.exportIterationAsync(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.exportIterationAsync(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)
  type: Method
  summary: >-
    <p>Export a trained iteration.</p>

    <p></p>
  syntax:
    content: public Observable<Export> exportIterationAsync(UUID projectId, UUID iterationId, String platform, ExportIterationOptionalParameter exportIterationOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. </p>
    - id: platform
      type: "26831127"
      description: "<p>The target platform (coreml or tensorflow). Possible values include: 'CoreML', 'TensorFlow', 'DockerFile', 'ONNX'. </p>"
    - id: exportIterationOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ExportIterationOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Exporta08ddfce
      description: <p>the observable to the Export object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.exportIteration()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: exportIteration()
  nameWithType: Trainings.exportIteration()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.exportIteration()
  type: Method
  summary: >-
    <p>Export a trained iteration.</p>

    <p></p>
  syntax:
    content: public TrainingsExportIterationDefinitionStages.WithProjectId exportIteration()
    return:
      type: "22216077"
      description: <p>the first stage of the exportIteration call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getExports(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getExports(UUID projectId, UUID iterationId)
  nameWithType: Trainings.getExports(UUID projectId, UUID iterationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getExports(UUID projectId, UUID iterationId)
  type: Method
  summary: >-
    <p>Get the list of exports for a specific iteration.</p>

    <p></p>
  syntax:
    content: public List<Export> getExports(UUID projectId, UUID iterationId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. </p>
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Exporta08ddfce
      description: <p>the List&lt;Export&gt; object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getExportsAsync(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getExportsAsync(UUID projectId, UUID iterationId)
  nameWithType: Trainings.getExportsAsync(UUID projectId, UUID iterationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getExportsAsync(UUID projectId, UUID iterationId)
  type: Method
  summary: >-
    <p>Get the list of exports for a specific iteration.</p>

    <p></p>
  syntax:
    content: public Observable<List<Export>> getExportsAsync(UUID projectId, UUID iterationId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. </p>
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Exporte7daa122
      description: <p>the observable to the List&lt;Export&gt; object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformanceCount(UUID,UUID,GetImagePerformanceCountOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getImagePerformanceCount(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)
  nameWithType: Trainings.getImagePerformanceCount(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformanceCount(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)
  type: Method
  summary: >-
    <p>Gets the number of images tagged with the provided {tagIds} that have prediction results from training for the provided iteration {iterationId}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the "Dog" and "Cat" tags, then only images tagged with Dog and/or Cat will be returned.</p>

    <p></p>
  syntax:
    content: public int getImagePerformanceCount(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. Defaults to workspace. </p>
    - id: getImagePerformanceCountOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformanceCountOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: f75371fa
      description: <p>the int object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformanceCountOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformanceCountOptionalParameter.yml
  name: GetImagePerformanceCountOptionalParameter
  nameWithType: GetImagePerformanceCountOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformanceCountOptionalParameter
  type: Class
  summary: <p>The GetImagePerformanceCountOptionalParameter model. </p>
  syntax:
    content: public class GetImagePerformanceCountOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformanceCountAsync(UUID,UUID,GetImagePerformanceCountOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getImagePerformanceCountAsync(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)
  nameWithType: Trainings.getImagePerformanceCountAsync(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformanceCountAsync(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)
  type: Method
  summary: >-
    <p>Gets the number of images tagged with the provided {tagIds} that have prediction results from training for the provided iteration {iterationId}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the "Dog" and "Cat" tags, then only images tagged with Dog and/or Cat will be returned.</p>

    <p></p>
  syntax:
    content: public Observable<Integer> getImagePerformanceCountAsync(UUID projectId, UUID iterationId, GetImagePerformanceCountOptionalParameter getImagePerformanceCountOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. Defaults to workspace. </p>
    - id: getImagePerformanceCountOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformanceCountOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 44f6ae9a
      description: <p>the observable to the int object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformanceCount()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getImagePerformanceCount()
  nameWithType: Trainings.getImagePerformanceCount()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformanceCount()
  type: Method
  summary: >-
    <p>Gets the number of images tagged with the provided {tagIds} that have prediction results from training for the provided iteration {iterationId}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the "Dog" and "Cat" tags, then only images tagged with Dog and/or Cat will be returned.</p>

    <p></p>
  syntax:
    content: public TrainingsGetImagePerformanceCountDefinitionStages.WithProjectId getImagePerformanceCount()
    return:
      type: 567404cc
      description: <p>the first stage of the getImagePerformanceCount call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance.yml
  name: ImagePerformance
  nameWithType: ImagePerformance
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformance
  type: Class
  summary: <p>Image performance model. </p>
  syntax:
    content: public class ImagePerformance
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformances(UUID,UUID,GetImagePerformancesOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getImagePerformances(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)
  nameWithType: Trainings.getImagePerformances(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformances(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)
  type: Method
  summary: >-
    <p>Get image with its prediction for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch. The filtering is on an and/or relationship. For example, if the provided tag ids are for the "Dog" and "Cat" tags, then only images tagged with Dog and/or Cat will be returned.</p>

    <p></p>
  syntax:
    content: public List<ImagePerformance> getImagePerformances(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. Defaults to workspace. </p>
    - id: getImagePerformancesOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformancesOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformancea08ddfce
      description: <p>the List&lt;ImagePerformance&gt; object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformancesOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformancesOptionalParameter.yml
  name: GetImagePerformancesOptionalParameter
  nameWithType: GetImagePerformancesOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformancesOptionalParameter
  type: Class
  summary: <p>The GetImagePerformancesOptionalParameter model. </p>
  syntax:
    content: public class GetImagePerformancesOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformancesAsync(UUID,UUID,GetImagePerformancesOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getImagePerformancesAsync(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)
  nameWithType: Trainings.getImagePerformancesAsync(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformancesAsync(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)
  type: Method
  summary: >-
    <p>Get image with its prediction for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch. The filtering is on an and/or relationship. For example, if the provided tag ids are for the "Dog" and "Cat" tags, then only images tagged with Dog and/or Cat will be returned.</p>

    <p></p>
  syntax:
    content: public Observable<List<ImagePerformance>> getImagePerformancesAsync(UUID projectId, UUID iterationId, GetImagePerformancesOptionalParameter getImagePerformancesOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. Defaults to workspace. </p>
    - id: getImagePerformancesOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagePerformancesOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePerformancee7daa122
      description: <p>the observable to the List&lt;ImagePerformance&gt; object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformances()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getImagePerformances()
  nameWithType: Trainings.getImagePerformances()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagePerformances()
  type: Method
  summary: >-
    <p>Get image with its prediction for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch. The filtering is on an and/or relationship. For example, if the provided tag ids are for the "Dog" and "Cat" tags, then only images tagged with Dog and/or Cat will be returned.</p>

    <p></p>
  syntax:
    content: public TrainingsGetImagePerformancesDefinitionStages.WithProjectId getImagePerformances()
    return:
      type: 7fc38119
      description: <p>the first stage of the getImagePerformances call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformance
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformance.yml
  name: IterationPerformance
  nameWithType: IterationPerformance
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformance
  type: Class
  summary: <p>Represents the detailed performance data for a trained iteration. </p>
  syntax:
    content: public class IterationPerformance
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationPerformance(UUID,UUID,GetIterationPerformanceOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getIterationPerformance(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)
  nameWithType: Trainings.getIterationPerformance(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationPerformance(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)
  type: Method
  summary: >-
    <p>Get detailed performance information about an iteration.</p>

    <p></p>
  syntax:
    content: public IterationPerformance getIterationPerformance(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project the iteration belongs to. </p>
    - id: iterationId
      type: add9545a
      description: <p>The id of the iteration to get. </p>
    - id: getIterationPerformanceOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetIterationPerformanceOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformance
      description: <p>the IterationPerformance object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetIterationPerformanceOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetIterationPerformanceOptionalParameter.yml
  name: GetIterationPerformanceOptionalParameter
  nameWithType: GetIterationPerformanceOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetIterationPerformanceOptionalParameter
  type: Class
  summary: <p>The GetIterationPerformanceOptionalParameter model. </p>
  syntax:
    content: public class GetIterationPerformanceOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationPerformanceAsync(UUID,UUID,GetIterationPerformanceOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getIterationPerformanceAsync(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)
  nameWithType: Trainings.getIterationPerformanceAsync(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationPerformanceAsync(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)
  type: Method
  summary: >-
    <p>Get detailed performance information about an iteration.</p>

    <p></p>
  syntax:
    content: public Observable<IterationPerformance> getIterationPerformanceAsync(UUID projectId, UUID iterationId, GetIterationPerformanceOptionalParameter getIterationPerformanceOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project the iteration belongs to. </p>
    - id: iterationId
      type: add9545a
      description: <p>The id of the iteration to get. </p>
    - id: getIterationPerformanceOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetIterationPerformanceOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.IterationPerformancea08ddfce
      description: <p>the observable to the IterationPerformance object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationPerformance()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getIterationPerformance()
  nameWithType: Trainings.getIterationPerformance()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationPerformance()
  type: Method
  summary: >-
    <p>Get detailed performance information about an iteration.</p>

    <p></p>
  syntax:
    content: public TrainingsGetIterationPerformanceDefinitionStages.WithProjectId getIterationPerformance()
    return:
      type: 1b4261b2
      description: <p>the first stage of the getIterationPerformance call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration.yml
  name: Iteration
  nameWithType: Iteration
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
  type: Class
  summary: <p>Iteration model to be sent over JSON. </p>
  syntax:
    content: public class Iteration
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateIteration(UUID,UUID,Iteration)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: updateIteration(UUID projectId, UUID iterationId, Iteration updatedIteration)
  nameWithType: Trainings.updateIteration(UUID projectId, UUID iterationId, Iteration updatedIteration)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateIteration(UUID projectId, UUID iterationId, Iteration updatedIteration)
  type: Method
  summary: >-
    <p>Update a specific iteration.</p>

    <p></p>
  syntax:
    content: public Iteration updateIteration(UUID projectId, UUID iterationId, Iteration updatedIteration)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>Project id. </p>
    - id: iterationId
      type: add9545a
      description: <p>Iteration id. </p>
    - id: updatedIteration
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
      description: <p>The updated iteration model. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
      description: <p>the Iteration object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateIterationAsync(UUID,UUID,Iteration)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: updateIterationAsync(UUID projectId, UUID iterationId, Iteration updatedIteration)
  nameWithType: Trainings.updateIterationAsync(UUID projectId, UUID iterationId, Iteration updatedIteration)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateIterationAsync(UUID projectId, UUID iterationId, Iteration updatedIteration)
  type: Method
  summary: >-
    <p>Update a specific iteration.</p>

    <p></p>
  syntax:
    content: public Observable<Iteration> updateIterationAsync(UUID projectId, UUID iterationId, Iteration updatedIteration)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>Project id. </p>
    - id: iterationId
      type: add9545a
      description: <p>Iteration id. </p>
    - id: updatedIteration
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
      description: <p>The updated iteration model. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iterationa08ddfce
      description: <p>the observable to the Iteration object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteIteration(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: deleteIteration(UUID projectId, UUID iterationId)
  nameWithType: Trainings.deleteIteration(UUID projectId, UUID iterationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteIteration(UUID projectId, UUID iterationId)
  type: Method
  summary: >-
    <p>Delete a specific iteration of a project.</p>

    <p></p>
  syntax:
    content: public void deleteIteration(UUID projectId, UUID iterationId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteIterationAsync(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: deleteIterationAsync(UUID projectId, UUID iterationId)
  nameWithType: Trainings.deleteIterationAsync(UUID projectId, UUID iterationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteIterationAsync(UUID projectId, UUID iterationId)
  type: Method
  summary: >-
    <p>Delete a specific iteration of a project.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteIterationAsync(UUID projectId, UUID iterationId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: iterationId
      type: add9545a
      description: <p>The iteration id. </p>
    return:
      type: dcd884b2
      description: <p>a representation of the deferred computation of this call if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIteration(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getIteration(UUID projectId, UUID iterationId)
  nameWithType: Trainings.getIteration(UUID projectId, UUID iterationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIteration(UUID projectId, UUID iterationId)
  type: Method
  summary: >-
    <p>Get a specific iteration.</p>

    <p></p>
  syntax:
    content: public Iteration getIteration(UUID projectId, UUID iterationId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project the iteration belongs to. </p>
    - id: iterationId
      type: add9545a
      description: <p>The id of the iteration to get. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
      description: <p>the Iteration object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationAsync(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getIterationAsync(UUID projectId, UUID iterationId)
  nameWithType: Trainings.getIterationAsync(UUID projectId, UUID iterationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationAsync(UUID projectId, UUID iterationId)
  type: Method
  summary: >-
    <p>Get a specific iteration.</p>

    <p></p>
  syntax:
    content: public Observable<Iteration> getIterationAsync(UUID projectId, UUID iterationId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project the iteration belongs to. </p>
    - id: iterationId
      type: add9545a
      description: <p>The id of the iteration to get. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iterationa08ddfce
      description: <p>the observable to the Iteration object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterations(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getIterations(UUID projectId)
  nameWithType: Trainings.getIterations(UUID projectId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterations(UUID projectId)
  type: Method
  summary: >-
    <p>Get iterations for the project.</p>

    <p></p>
  syntax:
    content: public List<Iteration> getIterations(UUID projectId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iterationa08ddfce
      description: <p>the List&lt;Iteration&gt; object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationsAsync(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getIterationsAsync(UUID projectId)
  nameWithType: Trainings.getIterationsAsync(UUID projectId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getIterationsAsync(UUID projectId)
  type: Method
  summary: >-
    <p>Get iterations for the project.</p>

    <p></p>
  syntax:
    content: public Observable<List<Iteration>> getIterationsAsync(UUID projectId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteratione7daa122
      description: <p>the observable to the List&lt;Iteration&gt; object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project.yml
  name: Project
  nameWithType: Project
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
  type: Class
  summary: <p>Represents a project. </p>
  syntax:
    content: public class Project
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateProject(UUID,Project)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: updateProject(UUID projectId, Project updatedProject)
  nameWithType: Trainings.updateProject(UUID projectId, Project updatedProject)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateProject(UUID projectId, Project updatedProject)
  type: Method
  summary: >-
    <p>Update a specific project.</p>

    <p></p>
  syntax:
    content: public Project updateProject(UUID projectId, Project updatedProject)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project to update. </p>
    - id: updatedProject
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
      description: <p>The updated project model. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
      description: <p>the Project object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateProjectAsync(UUID,Project)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: updateProjectAsync(UUID projectId, Project updatedProject)
  nameWithType: Trainings.updateProjectAsync(UUID projectId, Project updatedProject)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.updateProjectAsync(UUID projectId, Project updatedProject)
  type: Method
  summary: >-
    <p>Update a specific project.</p>

    <p></p>
  syntax:
    content: public Observable<Project> updateProjectAsync(UUID projectId, Project updatedProject)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project to update. </p>
    - id: updatedProject
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
      description: <p>The updated project model. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecta08ddfce
      description: <p>the observable to the Project object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteProject(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: deleteProject(UUID projectId)
  nameWithType: Trainings.deleteProject(UUID projectId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteProject(UUID projectId)
  type: Method
  summary: >-
    <p>Delete a specific project.</p>

    <p></p>
  syntax:
    content: public void deleteProject(UUID projectId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteProjectAsync(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: deleteProjectAsync(UUID projectId)
  nameWithType: Trainings.deleteProjectAsync(UUID projectId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteProjectAsync(UUID projectId)
  type: Method
  summary: >-
    <p>Delete a specific project.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteProjectAsync(UUID projectId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    return:
      type: dcd884b2
      description: <p>a representation of the deferred computation of this call if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getProject(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getProject(UUID projectId)
  nameWithType: Trainings.getProject(UUID projectId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getProject(UUID projectId)
  type: Method
  summary: >-
    <p>Get a specific project.</p>

    <p></p>
  syntax:
    content: public Project getProject(UUID projectId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project to get. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
      description: <p>the Project object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getProjectAsync(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getProjectAsync(UUID projectId)
  nameWithType: Trainings.getProjectAsync(UUID projectId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getProjectAsync(UUID projectId)
  type: Method
  summary: >-
    <p>Get a specific project.</p>

    <p></p>
  syntax:
    content: public Observable<Project> getProjectAsync(UUID projectId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The id of the project to get. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecta08ddfce
      description: <p>the observable to the Project object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createProject(String,CreateProjectOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: createProject(String name, CreateProjectOptionalParameter createProjectOptionalParameter)
  nameWithType: Trainings.createProject(String name, CreateProjectOptionalParameter createProjectOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createProject(String name, CreateProjectOptionalParameter createProjectOptionalParameter)
  type: Method
  summary: >-
    <p>Create a project.</p>

    <p></p>
  syntax:
    content: public Project createProject(String name, CreateProjectOptionalParameter createProjectOptionalParameter)
    parameters:
    - id: name
      type: "26831127"
      description: <p>Name of the project. </p>
    - id: createProjectOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateProjectOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Project
      description: <p>the Project object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateProjectOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateProjectOptionalParameter.yml
  name: CreateProjectOptionalParameter
  nameWithType: CreateProjectOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateProjectOptionalParameter
  type: Class
  summary: <p>The CreateProjectOptionalParameter model. </p>
  syntax:
    content: public class CreateProjectOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createProjectAsync(String,CreateProjectOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: createProjectAsync(String name, CreateProjectOptionalParameter createProjectOptionalParameter)
  nameWithType: Trainings.createProjectAsync(String name, CreateProjectOptionalParameter createProjectOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createProjectAsync(String name, CreateProjectOptionalParameter createProjectOptionalParameter)
  type: Method
  summary: >-
    <p>Create a project.</p>

    <p></p>
  syntax:
    content: public Observable<Project> createProjectAsync(String name, CreateProjectOptionalParameter createProjectOptionalParameter)
    parameters:
    - id: name
      type: "26831127"
      description: <p>Name of the project. </p>
    - id: createProjectOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateProjectOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecta08ddfce
      description: <p>the observable to the Project object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createProject()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: createProject()
  nameWithType: Trainings.createProject()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createProject()
  type: Method
  summary: >-
    <p>Create a project.</p>

    <p></p>
  syntax:
    content: public TrainingsCreateProjectDefinitionStages.WithName createProject()
    return:
      type: eb8320c3
      description: <p>the first stage of the createProject call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getProjects()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getProjects()
  nameWithType: Trainings.getProjects()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getProjects()
  type: Method
  summary: >-
    <p>Get your projects.</p>

    <p></p>
  syntax:
    content: public List<Project> getProjects()
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecta08ddfce
      description: <p>the List&lt;Project&gt; object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getProjectsAsync()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getProjectsAsync()
  nameWithType: Trainings.getProjectsAsync()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getProjectsAsync()
  type: Method
  summary: >-
    <p>Get your projects.</p>

    <p></p>
  syntax:
    content: public Observable<List<Project>> getProjectsAsync()
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Projecte7daa122
      description: <p>the observable to the List&lt;Project&gt; object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.trainProject(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: trainProject(UUID projectId)
  nameWithType: Trainings.trainProject(UUID projectId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.trainProject(UUID projectId)
  type: Method
  summary: >-
    <p>Queues project for training.</p>

    <p></p>
  syntax:
    content: public Iteration trainProject(UUID projectId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iteration
      description: <p>the Iteration object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.trainProjectAsync(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: trainProjectAsync(UUID projectId)
  nameWithType: Trainings.trainProjectAsync(UUID projectId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.trainProjectAsync(UUID projectId)
  type: Method
  summary: >-
    <p>Queues project for training.</p>

    <p></p>
  syntax:
    content: public Observable<Iteration> trainProjectAsync(UUID projectId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Iterationa08ddfce
      description: <p>the observable to the Iteration object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction.yml
  name: ImagePrediction
  nameWithType: ImagePrediction
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction
  type: Class
  summary: <p>The ImagePrediction model. </p>
  syntax:
    content: public class ImagePrediction
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImage(UUID,byte [],QuickTestImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: quickTestImage(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)
  nameWithType: Trainings.quickTestImage(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImage(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)
  type: Method
  summary: >-
    <p>Quick test an image.</p>

    <p></p>
  syntax:
    content: public ImagePrediction quickTestImage(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: imageData
      type: ccd9418d
      description: <p>the InputStream value. </p>
    - id: quickTestImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction
      description: <p>the ImagePrediction object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageOptionalParameter.yml
  name: QuickTestImageOptionalParameter
  nameWithType: QuickTestImageOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageOptionalParameter
  type: Class
  summary: <p>The QuickTestImageOptionalParameter model. </p>
  syntax:
    content: public class QuickTestImageOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageAsync(UUID,byte [],QuickTestImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: quickTestImageAsync(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)
  nameWithType: Trainings.quickTestImageAsync(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageAsync(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)
  type: Method
  summary: >-
    <p>Quick test an image.</p>

    <p></p>
  syntax:
    content: public Observable<ImagePrediction> quickTestImageAsync(UUID projectId, byte[] imageData, QuickTestImageOptionalParameter quickTestImageOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: imageData
      type: ccd9418d
      description: <p>the InputStream value. </p>
    - id: quickTestImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePredictiona08ddfce
      description: <p>the observable to the ImagePrediction object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImage()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: quickTestImage()
  nameWithType: Trainings.quickTestImage()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImage()
  type: Method
  summary: >-
    <p>Quick test an image.</p>

    <p></p>
  syntax:
    content: public TrainingsQuickTestImageDefinitionStages.WithProjectId quickTestImage()
    return:
      type: 5f8611e6
      description: <p>the first stage of the quickTestImage call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageUrl(UUID,QuickTestImageUrlOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: quickTestImageUrl(UUID projectId, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)
  nameWithType: Trainings.quickTestImageUrl(UUID projectId, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageUrl(UUID projectId, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)
  type: Method
  summary: >-
    <p>Quick test an image url.</p>

    <p></p>
  syntax:
    content: public ImagePrediction quickTestImageUrl(UUID projectId, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project to evaluate against. </p>
    - id: quickTestImageUrlOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageUrlOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePrediction
      description: <p>the ImagePrediction object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageUrlOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageUrlOptionalParameter.yml
  name: QuickTestImageUrlOptionalParameter
  nameWithType: QuickTestImageUrlOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageUrlOptionalParameter
  type: Class
  summary: <p>The QuickTestImageUrlOptionalParameter model. </p>
  syntax:
    content: public class QuickTestImageUrlOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageUrlAsync(UUID,QuickTestImageUrlOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: quickTestImageUrlAsync(UUID projectId, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)
  nameWithType: Trainings.quickTestImageUrlAsync(UUID projectId, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageUrlAsync(UUID projectId, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)
  type: Method
  summary: >-
    <p>Quick test an image url.</p>

    <p></p>
  syntax:
    content: public Observable<ImagePrediction> quickTestImageUrlAsync(UUID projectId, QuickTestImageUrlOptionalParameter quickTestImageUrlOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project to evaluate against. </p>
    - id: quickTestImageUrlOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.QuickTestImageUrlOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImagePredictiona08ddfce
      description: <p>the observable to the ImagePrediction object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageUrl()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: quickTestImageUrl()
  nameWithType: Trainings.quickTestImageUrl()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.quickTestImageUrl()
  type: Method
  summary: >-
    <p>Quick test an image url.</p>

    <p></p>
  syntax:
    content: public TrainingsQuickTestImageUrlDefinitionStages.WithProjectId quickTestImageUrl()
    return:
      type: 46ec0da1
      description: <p>the first stage of the quickTestImageUrl call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResult
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResult.yml
  name: PredictionQueryResult
  nameWithType: PredictionQueryResult
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResult
  type: Class
  summary: <p>The PredictionQueryResult model. </p>
  syntax:
    content: public class PredictionQueryResult
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.queryPredictions(UUID,PredictionQueryToken)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: queryPredictions(UUID projectId, PredictionQueryToken query)
  nameWithType: Trainings.queryPredictions(UUID projectId, PredictionQueryToken query)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.queryPredictions(UUID projectId, PredictionQueryToken query)
  type: Method
  summary: >-
    <p>Get images that were sent to your prediction endpoint.</p>

    <p></p>
  syntax:
    content: public PredictionQueryResult queryPredictions(UUID projectId, PredictionQueryToken query)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: query
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryToken
      description: <p>Parameters used to query the predictions. Limited to combining 2 tags. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResult
      description: <p>the PredictionQueryResult object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryToken
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryToken.yml
  name: PredictionQueryToken
  nameWithType: PredictionQueryToken
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryToken
  type: Class
  summary: <p>The PredictionQueryToken model. </p>
  syntax:
    content: public class PredictionQueryToken
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.queryPredictionsAsync(UUID,PredictionQueryToken)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: queryPredictionsAsync(UUID projectId, PredictionQueryToken query)
  nameWithType: Trainings.queryPredictionsAsync(UUID projectId, PredictionQueryToken query)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.queryPredictionsAsync(UUID projectId, PredictionQueryToken query)
  type: Method
  summary: >-
    <p>Get images that were sent to your prediction endpoint.</p>

    <p></p>
  syntax:
    content: public Observable<PredictionQueryResult> queryPredictionsAsync(UUID projectId, PredictionQueryToken query)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: query
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryToken
      description: <p>Parameters used to query the predictions. Limited to combining 2 tags. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.PredictionQueryResulta08ddfce
      description: <p>the observable to the PredictionQueryResult object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deletePrediction(UUID,List<String>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: deletePrediction(UUID projectId, List<String> ids)
  nameWithType: Trainings.deletePrediction(UUID projectId, List<String> ids)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deletePrediction(UUID projectId, List<String> ids)
  type: Method
  summary: >-
    <p>Delete a set of predicted images and their associated prediction results.</p>

    <p></p>
  syntax:
    content: public void deletePrediction(UUID projectId, List<String> ids)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: ids
      type: 7d60c20e
      description: <p>The prediction ids. Limited to 64. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deletePredictionAsync(UUID,List<String>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: deletePredictionAsync(UUID projectId, List<String> ids)
  nameWithType: Trainings.deletePredictionAsync(UUID projectId, List<String> ids)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deletePredictionAsync(UUID projectId, List<String> ids)
  type: Method
  summary: >-
    <p>Delete a set of predicted images and their associated prediction results.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deletePredictionAsync(UUID projectId, List<String> ids)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: ids
      type: 7d60c20e
      description: <p>The prediction ids. Limited to 64. </p>
    return:
      type: dcd884b2
      description: <p>a representation of the deferred computation of this call if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposal
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposal.yml
  name: ImageRegionProposal
  nameWithType: ImageRegionProposal
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposal
  type: Class
  summary: <p>The ImageRegionProposal model. </p>
  syntax:
    content: public class ImageRegionProposal
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImageRegionProposals(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getImageRegionProposals(UUID projectId, UUID imageId)
  nameWithType: Trainings.getImageRegionProposals(UUID projectId, UUID imageId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImageRegionProposals(UUID projectId, UUID imageId)
  type: Method
  summary: >-
    <p>Get region proposals for an image. Returns empty array if no proposals are found. This API will get region proposals for an image along with confidences for the region. It returns an empty array if no proposals are found.</p>

    <p></p>
  syntax:
    content: public ImageRegionProposal getImageRegionProposals(UUID projectId, UUID imageId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: imageId
      type: add9545a
      description: <p>The image id. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposal
      description: <p>the ImageRegionProposal object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImageRegionProposalsAsync(UUID,UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getImageRegionProposalsAsync(UUID projectId, UUID imageId)
  nameWithType: Trainings.getImageRegionProposalsAsync(UUID projectId, UUID imageId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImageRegionProposalsAsync(UUID projectId, UUID imageId)
  type: Method
  summary: >-
    <p>Get region proposals for an image. Returns empty array if no proposals are found. This API will get region proposals for an image along with confidences for the region. It returns an empty array if no proposals are found.</p>

    <p></p>
  syntax:
    content: public Observable<ImageRegionProposal> getImageRegionProposalsAsync(UUID projectId, UUID imageId)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: imageId
      type: add9545a
      description: <p>The image id. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionProposala08ddfce
      description: <p>the observable to the ImageRegionProposal object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImageRegions(UUID,List<String>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: deleteImageRegions(UUID projectId, List<String> regionIds)
  nameWithType: Trainings.deleteImageRegions(UUID projectId, List<String> regionIds)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImageRegions(UUID projectId, List<String> regionIds)
  type: Method
  summary: >-
    <p>Delete a set of image regions.</p>

    <p></p>
  syntax:
    content: public void deleteImageRegions(UUID projectId, List<String> regionIds)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: regionIds
      type: 7d60c20e
      description: <p>Regions to delete. Limited to 64. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImageRegionsAsync(UUID,List<String>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: deleteImageRegionsAsync(UUID projectId, List<String> regionIds)
  nameWithType: Trainings.deleteImageRegionsAsync(UUID projectId, List<String> regionIds)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImageRegionsAsync(UUID projectId, List<String> regionIds)
  type: Method
  summary: >-
    <p>Delete a set of image regions.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteImageRegionsAsync(UUID projectId, List<String> regionIds)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: regionIds
      type: 7d60c20e
      description: <p>Regions to delete. Limited to 64. </p>
    return:
      type: dcd884b2
      description: <p>a representation of the deferred computation of this call if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummary
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummary.yml
  name: ImageRegionCreateSummary
  nameWithType: ImageRegionCreateSummary
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummary
  type: Class
  summary: <p>The ImageRegionCreateSummary model. </p>
  syntax:
    content: public class ImageRegionCreateSummary
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageRegions(UUID,CreateImageRegionsOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: createImageRegions(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)
  nameWithType: Trainings.createImageRegions(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageRegions(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)
  type: Method
  summary: >-
    <p>Create a set of image regions. This API accepts a batch of image regions, and optionally tags, to update existing images with region information. There is a limit of 64 entries in the batch.</p>

    <p></p>
  syntax:
    content: public ImageRegionCreateSummary createImageRegions(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: createImageRegionsOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageRegionsOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummary
      description: <p>the ImageRegionCreateSummary object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageRegionsOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageRegionsOptionalParameter.yml
  name: CreateImageRegionsOptionalParameter
  nameWithType: CreateImageRegionsOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageRegionsOptionalParameter
  type: Class
  summary: <p>The CreateImageRegionsOptionalParameter model. </p>
  syntax:
    content: public class CreateImageRegionsOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageRegionsAsync(UUID,CreateImageRegionsOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: createImageRegionsAsync(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)
  nameWithType: Trainings.createImageRegionsAsync(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageRegionsAsync(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)
  type: Method
  summary: >-
    <p>Create a set of image regions. This API accepts a batch of image regions, and optionally tags, to update existing images with region information. There is a limit of 64 entries in the batch.</p>

    <p></p>
  syntax:
    content: public Observable<ImageRegionCreateSummary> createImageRegionsAsync(UUID projectId, CreateImageRegionsOptionalParameter createImageRegionsOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: createImageRegionsOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageRegionsOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateSummarya08ddfce
      description: <p>the observable to the ImageRegionCreateSummary object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateEntry
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateEntry.yml
  name: ImageRegionCreateEntry
  nameWithType: ImageRegionCreateEntry
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageRegionCreateEntry
  type: Class
  summary: <p>The ImageRegionCreateEntry model. </p>
  syntax:
    content: public class ImageRegionCreateEntry
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageRegions()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: createImageRegions()
  nameWithType: Trainings.createImageRegions()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageRegions()
  type: Method
  summary: >-
    <p>Create a set of image regions. This API accepts a batch of image regions, and optionally tags, to update existing images with region information. There is a limit of 64 entries in the batch.</p>

    <p></p>
  syntax:
    content: public TrainingsCreateImageRegionsDefinitionStages.WithProjectId createImageRegions()
    return:
      type: fa3f121c
      description: <p>the first stage of the createImageRegions call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImageTags(UUID,List<String>,List<String>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: deleteImageTags(UUID projectId, List<String> imageIds, List<String> tagIds)
  nameWithType: Trainings.deleteImageTags(UUID projectId, List<String> imageIds, List<String> tagIds)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImageTags(UUID projectId, List<String> imageIds, List<String> tagIds)
  type: Method
  summary: >-
    <p>Remove a set of tags from a set of images.</p>

    <p></p>
  syntax:
    content: public void deleteImageTags(UUID projectId, List<String> imageIds, List<String> tagIds)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: imageIds
      type: 7d60c20e
      description: <p>Image ids. Limited to 64 images. </p>
    - id: tagIds
      type: 7d60c20e
      description: <p>Tags to be deleted from the specified images. Limted to 20 tags. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImageTagsAsync(UUID,List<String>,List<String>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: deleteImageTagsAsync(UUID projectId, List<String> imageIds, List<String> tagIds)
  nameWithType: Trainings.deleteImageTagsAsync(UUID projectId, List<String> imageIds, List<String> tagIds)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImageTagsAsync(UUID projectId, List<String> imageIds, List<String> tagIds)
  type: Method
  summary: >-
    <p>Remove a set of tags from a set of images.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteImageTagsAsync(UUID projectId, List<String> imageIds, List<String> tagIds)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: imageIds
      type: 7d60c20e
      description: <p>Image ids. Limited to 64 images. </p>
    - id: tagIds
      type: 7d60c20e
      description: <p>Tags to be deleted from the specified images. Limted to 20 tags. </p>
    return:
      type: dcd884b2
      description: <p>a representation of the deferred computation of this call if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummary
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummary.yml
  name: ImageTagCreateSummary
  nameWithType: ImageTagCreateSummary
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummary
  type: Class
  summary: <p>The ImageTagCreateSummary model. </p>
  syntax:
    content: public class ImageTagCreateSummary
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageTags(UUID,CreateImageTagsOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: createImageTags(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)
  nameWithType: Trainings.createImageTags(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageTags(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)
  type: Method
  summary: >-
    <p>Associate a set of images with a set of tags.</p>

    <p></p>
  syntax:
    content: public ImageTagCreateSummary createImageTags(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: createImageTagsOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageTagsOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummary
      description: <p>the ImageTagCreateSummary object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageTagsOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageTagsOptionalParameter.yml
  name: CreateImageTagsOptionalParameter
  nameWithType: CreateImageTagsOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageTagsOptionalParameter
  type: Class
  summary: <p>The CreateImageTagsOptionalParameter model. </p>
  syntax:
    content: public class CreateImageTagsOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageTagsAsync(UUID,CreateImageTagsOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: createImageTagsAsync(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)
  nameWithType: Trainings.createImageTagsAsync(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageTagsAsync(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)
  type: Method
  summary: >-
    <p>Associate a set of images with a set of tags.</p>

    <p></p>
  syntax:
    content: public Observable<ImageTagCreateSummary> createImageTagsAsync(UUID projectId, CreateImageTagsOptionalParameter createImageTagsOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: createImageTagsOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImageTagsOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateSummarya08ddfce
      description: <p>the observable to the ImageTagCreateSummary object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateEntry
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateEntry.yml
  name: ImageTagCreateEntry
  nameWithType: ImageTagCreateEntry
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateEntry
  type: Class
  summary: <p>The ImageTagCreateEntry model. </p>
  syntax:
    content: public class ImageTagCreateEntry
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageTags()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: createImageTags()
  nameWithType: Trainings.createImageTags()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImageTags()
  type: Method
  summary: >-
    <p>Associate a set of images with a set of tags.</p>

    <p></p>
  syntax:
    content: public TrainingsCreateImageTagsDefinitionStages.WithProjectId createImageTags()
    return:
      type: b4afd906
      description: <p>the first stage of the createImageTags call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary.yml
  name: ImageCreateSummary
  nameWithType: ImageCreateSummary
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary
  type: Class
  summary: <p>The ImageCreateSummary model. </p>
  syntax:
    content: public class ImageCreateSummary
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromPredictions(UUID,ImageIdCreateBatch)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: createImagesFromPredictions(UUID projectId, ImageIdCreateBatch batch)
  nameWithType: Trainings.createImagesFromPredictions(UUID projectId, ImageIdCreateBatch batch)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromPredictions(UUID projectId, ImageIdCreateBatch batch)
  type: Method
  summary: >-
    <p>Add the specified predicted images to the set of training images. This API creates a batch of images from predicted images specified. There is a limit of 64 images and 20 tags.</p>

    <p></p>
  syntax:
    content: public ImageCreateSummary createImagesFromPredictions(UUID projectId, ImageIdCreateBatch batch)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: batch
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageIdCreateBatch
      description: <p>Image and tag ids. Limted to 64 images and 20 tags per batch. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary
      description: <p>the ImageCreateSummary object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageIdCreateBatch
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageIdCreateBatch.yml
  name: ImageIdCreateBatch
  nameWithType: ImageIdCreateBatch
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageIdCreateBatch
  type: Class
  summary: <p>The ImageIdCreateBatch model. </p>
  syntax:
    content: public class ImageIdCreateBatch
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromPredictionsAsync(UUID,ImageIdCreateBatch)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: createImagesFromPredictionsAsync(UUID projectId, ImageIdCreateBatch batch)
  nameWithType: Trainings.createImagesFromPredictionsAsync(UUID projectId, ImageIdCreateBatch batch)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromPredictionsAsync(UUID projectId, ImageIdCreateBatch batch)
  type: Method
  summary: >-
    <p>Add the specified predicted images to the set of training images. This API creates a batch of images from predicted images specified. There is a limit of 64 images and 20 tags.</p>

    <p></p>
  syntax:
    content: public Observable<ImageCreateSummary> createImagesFromPredictionsAsync(UUID projectId, ImageIdCreateBatch batch)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: batch
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageIdCreateBatch
      description: <p>Image and tag ids. Limted to 64 images and 20 tags per batch. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarya08ddfce
      description: <p>the observable to the ImageCreateSummary object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromUrls(UUID,ImageUrlCreateBatch)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: createImagesFromUrls(UUID projectId, ImageUrlCreateBatch batch)
  nameWithType: Trainings.createImagesFromUrls(UUID projectId, ImageUrlCreateBatch batch)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromUrls(UUID projectId, ImageUrlCreateBatch batch)
  type: Method
  summary: >-
    <p>Add the provided images urls to the set of training images. This API accepts a batch of urls, and optionally tags, to create images. There is a limit of 64 images and 20 tags.</p>

    <p></p>
  syntax:
    content: public ImageCreateSummary createImagesFromUrls(UUID projectId, ImageUrlCreateBatch batch)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: batch
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageUrlCreateBatch
      description: <p>Image urls and tag ids. Limited to 64 images and 20 tags per batch. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary
      description: <p>the ImageCreateSummary object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageUrlCreateBatch
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageUrlCreateBatch.yml
  name: ImageUrlCreateBatch
  nameWithType: ImageUrlCreateBatch
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageUrlCreateBatch
  type: Class
  summary: <p>The ImageUrlCreateBatch model. </p>
  syntax:
    content: public class ImageUrlCreateBatch
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromUrlsAsync(UUID,ImageUrlCreateBatch)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: createImagesFromUrlsAsync(UUID projectId, ImageUrlCreateBatch batch)
  nameWithType: Trainings.createImagesFromUrlsAsync(UUID projectId, ImageUrlCreateBatch batch)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromUrlsAsync(UUID projectId, ImageUrlCreateBatch batch)
  type: Method
  summary: >-
    <p>Add the provided images urls to the set of training images. This API accepts a batch of urls, and optionally tags, to create images. There is a limit of 64 images and 20 tags.</p>

    <p></p>
  syntax:
    content: public Observable<ImageCreateSummary> createImagesFromUrlsAsync(UUID projectId, ImageUrlCreateBatch batch)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: batch
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageUrlCreateBatch
      description: <p>Image urls and tag ids. Limited to 64 images and 20 tags per batch. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarya08ddfce
      description: <p>the observable to the ImageCreateSummary object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromFiles(UUID,ImageFileCreateBatch)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: createImagesFromFiles(UUID projectId, ImageFileCreateBatch batch)
  nameWithType: Trainings.createImagesFromFiles(UUID projectId, ImageFileCreateBatch batch)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromFiles(UUID projectId, ImageFileCreateBatch batch)
  type: Method
  summary: >-
    <p>Add the provided batch of images to the set of training images. This API accepts a batch of files, and optionally tags, to create images. There is a limit of 64 images and 20 tags.</p>

    <p></p>
  syntax:
    content: public ImageCreateSummary createImagesFromFiles(UUID projectId, ImageFileCreateBatch batch)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: batch
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageFileCreateBatch
      description: <p>The batch of image files to add. Limited to 64 images and 20 tags per batch. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary
      description: <p>the ImageCreateSummary object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageFileCreateBatch
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageFileCreateBatch.yml
  name: ImageFileCreateBatch
  nameWithType: ImageFileCreateBatch
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageFileCreateBatch
  type: Class
  summary: <p>The ImageFileCreateBatch model. </p>
  syntax:
    content: public class ImageFileCreateBatch
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromFilesAsync(UUID,ImageFileCreateBatch)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: createImagesFromFilesAsync(UUID projectId, ImageFileCreateBatch batch)
  nameWithType: Trainings.createImagesFromFilesAsync(UUID projectId, ImageFileCreateBatch batch)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromFilesAsync(UUID projectId, ImageFileCreateBatch batch)
  type: Method
  summary: >-
    <p>Add the provided batch of images to the set of training images. This API accepts a batch of files, and optionally tags, to create images. There is a limit of 64 images and 20 tags.</p>

    <p></p>
  syntax:
    content: public Observable<ImageCreateSummary> createImagesFromFilesAsync(UUID projectId, ImageFileCreateBatch batch)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: batch
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageFileCreateBatch
      description: <p>The batch of image files to add. Limited to 64 images and 20 tags per batch. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarya08ddfce
      description: <p>the observable to the ImageCreateSummary object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImages(UUID,List<String>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: deleteImages(UUID projectId, List<String> imageIds)
  nameWithType: Trainings.deleteImages(UUID projectId, List<String> imageIds)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImages(UUID projectId, List<String> imageIds)
  type: Method
  summary: >-
    <p>Delete images from the set of training images.</p>

    <p></p>
  syntax:
    content: public void deleteImages(UUID projectId, List<String> imageIds)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: imageIds
      type: 7d60c20e
      description: <p>Ids of the images to be deleted. Limted to 256 images per batch. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImagesAsync(UUID,List<String>)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: deleteImagesAsync(UUID projectId, List<String> imageIds)
  nameWithType: Trainings.deleteImagesAsync(UUID projectId, List<String> imageIds)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteImagesAsync(UUID projectId, List<String> imageIds)
  type: Method
  summary: >-
    <p>Delete images from the set of training images.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteImagesAsync(UUID projectId, List<String> imageIds)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: imageIds
      type: 7d60c20e
      description: <p>Ids of the images to be deleted. Limted to 256 images per batch. </p>
    return:
      type: dcd884b2
      description: <p>a representation of the deferred computation of this call if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromData(UUID,byte [],CreateImagesFromDataOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: createImagesFromData(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)
  nameWithType: Trainings.createImagesFromData(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromData(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)
  type: Method
  summary: >-
    <p>Add the provided images to the set of training images. This API accepts body content as multipart/form-data and application/octet-stream. When using multipart multiple image files can be sent at once, with a maximum of 64 files.</p>

    <p></p>
  syntax:
    content: public ImageCreateSummary createImagesFromData(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: imageData
      type: ccd9418d
      description: <p>the InputStream value. </p>
    - id: createImagesFromDataOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImagesFromDataOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummary
      description: <p>the ImageCreateSummary object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImagesFromDataOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImagesFromDataOptionalParameter.yml
  name: CreateImagesFromDataOptionalParameter
  nameWithType: CreateImagesFromDataOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImagesFromDataOptionalParameter
  type: Class
  summary: <p>The CreateImagesFromDataOptionalParameter model. </p>
  syntax:
    content: public class CreateImagesFromDataOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromDataAsync(UUID,byte [],CreateImagesFromDataOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: createImagesFromDataAsync(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)
  nameWithType: Trainings.createImagesFromDataAsync(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromDataAsync(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)
  type: Method
  summary: >-
    <p>Add the provided images to the set of training images. This API accepts body content as multipart/form-data and application/octet-stream. When using multipart multiple image files can be sent at once, with a maximum of 64 files.</p>

    <p></p>
  syntax:
    content: public Observable<ImageCreateSummary> createImagesFromDataAsync(UUID projectId, byte[] imageData, CreateImagesFromDataOptionalParameter createImagesFromDataOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: imageData
      type: ccd9418d
      description: <p>the InputStream value. </p>
    - id: createImagesFromDataOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.CreateImagesFromDataOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageCreateSummarya08ddfce
      description: <p>the observable to the ImageCreateSummary object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromData()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: createImagesFromData()
  nameWithType: Trainings.createImagesFromData()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.createImagesFromData()
  type: Method
  summary: >-
    <p>Add the provided images to the set of training images. This API accepts body content as multipart/form-data and application/octet-stream. When using multipart multiple image files can be sent at once, with a maximum of 64 files.</p>

    <p></p>
  syntax:
    content: public TrainingsCreateImagesFromDataDefinitionStages.WithProjectId createImagesFromData()
    return:
      type: 0f1f7a89
      description: <p>the first stage of the createImagesFromData call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image.yml
  name: Image
  nameWithType: Image
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image
  type: Class
  summary: <p>Image model to be sent as JSON. </p>
  syntax:
    content: public class Image
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagesByIds(UUID,GetImagesByIdsOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getImagesByIds(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)
  nameWithType: Trainings.getImagesByIds(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagesByIds(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)
  type: Method
  summary: >-
    <p>Get images by id for a given project iteration. This API will return a set of Images for the specified tags and optionally iteration. If no iteration is specified the current workspace is used.</p>

    <p></p>
  syntax:
    content: public List<Image> getImagesByIds(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: getImagesByIdsOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagesByIdsOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Imagea08ddfce
      description: <p>the List&lt;Image&gt; object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagesByIdsOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagesByIdsOptionalParameter.yml
  name: GetImagesByIdsOptionalParameter
  nameWithType: GetImagesByIdsOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagesByIdsOptionalParameter
  type: Class
  summary: <p>The GetImagesByIdsOptionalParameter model. </p>
  syntax:
    content: public class GetImagesByIdsOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagesByIdsAsync(UUID,GetImagesByIdsOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getImagesByIdsAsync(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)
  nameWithType: Trainings.getImagesByIdsAsync(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagesByIdsAsync(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)
  type: Method
  summary: >-
    <p>Get images by id for a given project iteration. This API will return a set of Images for the specified tags and optionally iteration. If no iteration is specified the current workspace is used.</p>

    <p></p>
  syntax:
    content: public Observable<List<Image>> getImagesByIdsAsync(UUID projectId, GetImagesByIdsOptionalParameter getImagesByIdsOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: getImagesByIdsOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetImagesByIdsOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Imagee7daa122
      description: <p>the observable to the List&lt;Image&gt; object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagesByIds()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getImagesByIds()
  nameWithType: Trainings.getImagesByIds()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getImagesByIds()
  type: Method
  summary: >-
    <p>Get images by id for a given project iteration. This API will return a set of Images for the specified tags and optionally iteration. If no iteration is specified the current workspace is used.</p>

    <p></p>
  syntax:
    content: public TrainingsGetImagesByIdsDefinitionStages.WithProjectId getImagesByIds()
    return:
      type: 89e463c1
      description: <p>the first stage of the getImagesByIds call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImageCount(UUID,GetUntaggedImageCountOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getUntaggedImageCount(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)
  nameWithType: Trainings.getUntaggedImageCount(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImageCount(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)
  type: Method
  summary: >-
    <p>Gets the number of untagged images. This API returns the images which have no tags for a given project and optionally an iteration. If no iteration is specified the current workspace is used.</p>

    <p></p>
  syntax:
    content: public int getUntaggedImageCount(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: getUntaggedImageCountOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImageCountOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: f75371fa
      description: <p>the int object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImageCountOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImageCountOptionalParameter.yml
  name: GetUntaggedImageCountOptionalParameter
  nameWithType: GetUntaggedImageCountOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImageCountOptionalParameter
  type: Class
  summary: <p>The GetUntaggedImageCountOptionalParameter model. </p>
  syntax:
    content: public class GetUntaggedImageCountOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImageCountAsync(UUID,GetUntaggedImageCountOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getUntaggedImageCountAsync(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)
  nameWithType: Trainings.getUntaggedImageCountAsync(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImageCountAsync(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)
  type: Method
  summary: >-
    <p>Gets the number of untagged images. This API returns the images which have no tags for a given project and optionally an iteration. If no iteration is specified the current workspace is used.</p>

    <p></p>
  syntax:
    content: public Observable<Integer> getUntaggedImageCountAsync(UUID projectId, GetUntaggedImageCountOptionalParameter getUntaggedImageCountOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: getUntaggedImageCountOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImageCountOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 44f6ae9a
      description: <p>the observable to the int object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImageCount()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getUntaggedImageCount()
  nameWithType: Trainings.getUntaggedImageCount()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImageCount()
  type: Method
  summary: >-
    <p>Gets the number of untagged images. This API returns the images which have no tags for a given project and optionally an iteration. If no iteration is specified the current workspace is used.</p>

    <p></p>
  syntax:
    content: public TrainingsGetUntaggedImageCountDefinitionStages.WithProjectId getUntaggedImageCount()
    return:
      type: 48d0108b
      description: <p>the first stage of the getUntaggedImageCount call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImageCount(UUID,GetTaggedImageCountOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getTaggedImageCount(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
  nameWithType: Trainings.getTaggedImageCount(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImageCount(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
  type: Method
  summary: >-
    <p>Gets the number of images tagged with the provided {tagIds}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the "Dog" and "Cat" tags, then only images tagged with Dog and/or Cat will be returned.</p>

    <p></p>
  syntax:
    content: public int getTaggedImageCount(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: getTaggedImageCountOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImageCountOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: f75371fa
      description: <p>the int object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImageCountOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImageCountOptionalParameter.yml
  name: GetTaggedImageCountOptionalParameter
  nameWithType: GetTaggedImageCountOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImageCountOptionalParameter
  type: Class
  summary: <p>The GetTaggedImageCountOptionalParameter model. </p>
  syntax:
    content: public class GetTaggedImageCountOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImageCountAsync(UUID,GetTaggedImageCountOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getTaggedImageCountAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
  nameWithType: Trainings.getTaggedImageCountAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImageCountAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
  type: Method
  summary: >-
    <p>Gets the number of images tagged with the provided {tagIds}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the "Dog" and "Cat" tags, then only images tagged with Dog and/or Cat will be returned.</p>

    <p></p>
  syntax:
    content: public Observable<Integer> getTaggedImageCountAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: getTaggedImageCountOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImageCountOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 44f6ae9a
      description: <p>the observable to the int object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImageCount()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getTaggedImageCount()
  nameWithType: Trainings.getTaggedImageCount()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImageCount()
  type: Method
  summary: >-
    <p>Gets the number of images tagged with the provided {tagIds}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the "Dog" and "Cat" tags, then only images tagged with Dog and/or Cat will be returned.</p>

    <p></p>
  syntax:
    content: public TrainingsGetTaggedImageCountDefinitionStages.WithProjectId getTaggedImageCount()
    return:
      type: 1ad8150f
      description: <p>the first stage of the getTaggedImageCount call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImages(UUID,GetUntaggedImagesOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getUntaggedImages(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)
  nameWithType: Trainings.getUntaggedImages(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImages(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)
  type: Method
  summary: >-
    <p>Get untagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch.</p>

    <p></p>
  syntax:
    content: public List<Image> getUntaggedImages(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: getUntaggedImagesOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImagesOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Imagea08ddfce
      description: <p>the List&lt;Image&gt; object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImagesOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImagesOptionalParameter.yml
  name: GetUntaggedImagesOptionalParameter
  nameWithType: GetUntaggedImagesOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImagesOptionalParameter
  type: Class
  summary: <p>The GetUntaggedImagesOptionalParameter model. </p>
  syntax:
    content: public class GetUntaggedImagesOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImagesAsync(UUID,GetUntaggedImagesOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getUntaggedImagesAsync(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)
  nameWithType: Trainings.getUntaggedImagesAsync(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImagesAsync(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)
  type: Method
  summary: >-
    <p>Get untagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch.</p>

    <p></p>
  syntax:
    content: public Observable<List<Image>> getUntaggedImagesAsync(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: getUntaggedImagesOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImagesOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Imagee7daa122
      description: <p>the observable to the List&lt;Image&gt; object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImages()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getUntaggedImages()
  nameWithType: Trainings.getUntaggedImages()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImages()
  type: Method
  summary: >-
    <p>Get untagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch.</p>

    <p></p>
  syntax:
    content: public TrainingsGetUntaggedImagesDefinitionStages.WithProjectId getUntaggedImages()
    return:
      type: d209f896
      description: <p>the first stage of the getUntaggedImages call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImages(UUID,GetTaggedImagesOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getTaggedImages(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)
  nameWithType: Trainings.getTaggedImages(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImages(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)
  type: Method
  summary: >-
    <p>Get tagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch. The filtering is on an and/or relationship. For example, if the provided tag ids are for the "Dog" and "Cat" tags, then only images tagged with Dog and/or Cat will be returned.</p>

    <p></p>
  syntax:
    content: public List<Image> getTaggedImages(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: getTaggedImagesOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImagesOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Imagea08ddfce
      description: <p>the List&lt;Image&gt; object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImagesOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImagesOptionalParameter.yml
  name: GetTaggedImagesOptionalParameter
  nameWithType: GetTaggedImagesOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImagesOptionalParameter
  type: Class
  summary: <p>The GetTaggedImagesOptionalParameter model. </p>
  syntax:
    content: public class GetTaggedImagesOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImagesAsync(UUID,GetTaggedImagesOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getTaggedImagesAsync(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)
  nameWithType: Trainings.getTaggedImagesAsync(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImagesAsync(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)
  type: Method
  summary: >-
    <p>Get tagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch. The filtering is on an and/or relationship. For example, if the provided tag ids are for the "Dog" and "Cat" tags, then only images tagged with Dog and/or Cat will be returned.</p>

    <p></p>
  syntax:
    content: public Observable<List<Image>> getTaggedImagesAsync(UUID projectId, GetTaggedImagesOptionalParameter getTaggedImagesOptionalParameter)
    parameters:
    - id: projectId
      type: add9545a
      description: <p>The project id. </p>
    - id: getTaggedImagesOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImagesOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Imagee7daa122
      description: <p>the observable to the List&lt;Image&gt; object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImages()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getTaggedImages()
  nameWithType: Trainings.getTaggedImages()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImages()
  type: Method
  summary: >-
    <p>Get tagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch. The filtering is on an and/or relationship. For example, if the provided tag ids are for the "Dog" and "Cat" tags, then only images tagged with Dog and/or Cat will be returned.</p>

    <p></p>
  syntax:
    content: public TrainingsGetTaggedImagesDefinitionStages.WithProjectId getTaggedImages()
    return:
      type: c95c46b6
      description: <p>the first stage of the getTaggedImages call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.models
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain.yml
  name: Domain
  nameWithType: Domain
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain
  type: Class
  summary: <p>The Domain model. </p>
  syntax:
    content: public class Domain
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomain(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getDomain(UUID domainId)
  nameWithType: Trainings.getDomain(UUID domainId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomain(UUID domainId)
  type: Method
  summary: >-
    <p>Get information about a specific domain.</p>

    <p></p>
  syntax:
    content: public Domain getDomain(UUID domainId)
    parameters:
    - id: domainId
      type: add9545a
      description: <p>The id of the domain to get information about. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domain
      description: <p>the Domain object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomainAsync(UUID)
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getDomainAsync(UUID domainId)
  nameWithType: Trainings.getDomainAsync(UUID domainId)
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomainAsync(UUID domainId)
  type: Method
  summary: >-
    <p>Get information about a specific domain.</p>

    <p></p>
  syntax:
    content: public Observable<Domain> getDomainAsync(UUID domainId)
    parameters:
    - id: domainId
      type: add9545a
      description: <p>The id of the domain to get information about. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domaina08ddfce
      description: <p>the observable to the Domain object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomains()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getDomains()
  nameWithType: Trainings.getDomains()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomains()
  type: Method
  summary: >-
    <p>Get a list of the available domains.</p>

    <p></p>
  syntax:
    content: public List<Domain> getDomains()
    return:
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domaina08ddfce
      description: <p>the List&lt;Domain&gt; object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomainsAsync()
  parent: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings
  href: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.yml
  name: getDomainsAsync()
  nameWithType: Trainings.getDomainsAsync()
  fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getDomainsAsync()
  type: Method
  summary: >-
    <p>Get a list of the available domains.</p>

    <p></p>
  syntax:
    content: public Observable<List<Domain>> getDomainsAsync()
    return:
      type: 39a50407com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Domaine7daa122
      description: <p>the observable to the List&lt;Domain&gt; object </p>
