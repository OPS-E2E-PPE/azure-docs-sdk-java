### YamlMime:ManagedReference
items:
- uid: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest
  id: TwinPropertiesTest
  parent: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs
  children:
  - tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.constructorStoreDesiredProperty()
  - tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.constructorSucceed()
  - tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.constructorThrowsOnNullDesiredProperty()
  - tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.getDesiredReturnsDesiredProperty()
  - tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.toJsonElementReturnsEmptyJsonElement()
  - tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.toJsonElementReturnsJsonElement()
  - tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.toJsonElementWithMetadataReturnsEmptyJsonElement()
  - tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.toJsonElementWithMetadataReturnsJsonElement()
  href: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.yml
  langs:
  - java
  name: TwinPropertiesTest
  nameWithType: TwinPropertiesTest
  fullName: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest
  type: Class
  source:
    remote: &o0
      path: provisioning/provisioning-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinPropertiesTest.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: provisioning/provisioning-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinPropertiesTest.java
    startLine: 23
  package: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs
  summary: "<p>Unit tests for Device Provisioning Service TwinProperties 100% methods, 100% lines covered </p>"
  syntax:
    content: public class TwinPropertiesTest
  inheritance:
  - java.lang.Object
- uid: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.constructorStoreDesiredProperty()
  id: constructorStoreDesiredProperty()
  parent: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest
  href: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.yml
  langs:
  - java
  name: constructorStoreDesiredProperty()
  nameWithType: TwinPropertiesTest.constructorStoreDesiredProperty()
  fullName: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.constructorStoreDesiredProperty()
  overload: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.constructorStoreDesiredProperty*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinPropertiesTest.java
    startLine: 98
  package: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs
  syntax:
    content: public void constructorStoreDesiredProperty()
- uid: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.constructorSucceed()
  id: constructorSucceed()
  parent: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest
  href: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.yml
  langs:
  - java
  name: constructorSucceed()
  nameWithType: TwinPropertiesTest.constructorSucceed()
  fullName: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.constructorSucceed()
  overload: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.constructorSucceed*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinPropertiesTest.java
    startLine: 183
  package: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs
  syntax:
    content: public void constructorSucceed()
- uid: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.constructorThrowsOnNullDesiredProperty()
  id: constructorThrowsOnNullDesiredProperty()
  parent: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest
  href: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.yml
  langs:
  - java
  name: constructorThrowsOnNullDesiredProperty()
  nameWithType: TwinPropertiesTest.constructorThrowsOnNullDesiredProperty()
  fullName: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.constructorThrowsOnNullDesiredProperty()
  overload: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.constructorThrowsOnNullDesiredProperty*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinPropertiesTest.java
    startLine: 87
  package: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs
  syntax:
    content: public void constructorThrowsOnNullDesiredProperty()
- uid: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.getDesiredReturnsDesiredProperty()
  id: getDesiredReturnsDesiredProperty()
  parent: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest
  href: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.yml
  langs:
  - java
  name: getDesiredReturnsDesiredProperty()
  nameWithType: TwinPropertiesTest.getDesiredReturnsDesiredProperty()
  fullName: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.getDesiredReturnsDesiredProperty()
  overload: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.getDesiredReturnsDesiredProperty*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinPropertiesTest.java
    startLine: 169
  package: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs
  syntax:
    content: public void getDesiredReturnsDesiredProperty()
- uid: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.toJsonElementReturnsEmptyJsonElement()
  id: toJsonElementReturnsEmptyJsonElement()
  parent: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest
  href: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.yml
  langs:
  - java
  name: toJsonElementReturnsEmptyJsonElement()
  nameWithType: TwinPropertiesTest.toJsonElementReturnsEmptyJsonElement()
  fullName: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.toJsonElementReturnsEmptyJsonElement()
  overload: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.toJsonElementReturnsEmptyJsonElement*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinPropertiesTest.java
    startLine: 124
  package: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs
  syntax:
    content: public void toJsonElementReturnsEmptyJsonElement()
- uid: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.toJsonElementReturnsJsonElement()
  id: toJsonElementReturnsJsonElement()
  parent: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest
  href: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.yml
  langs:
  - java
  name: toJsonElementReturnsJsonElement()
  nameWithType: TwinPropertiesTest.toJsonElementReturnsJsonElement()
  fullName: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.toJsonElementReturnsJsonElement()
  overload: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.toJsonElementReturnsJsonElement*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinPropertiesTest.java
    startLine: 110
  package: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs
  syntax:
    content: public void toJsonElementReturnsJsonElement()
- uid: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.toJsonElementWithMetadataReturnsEmptyJsonElement()
  id: toJsonElementWithMetadataReturnsEmptyJsonElement()
  parent: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest
  href: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.yml
  langs:
  - java
  name: toJsonElementWithMetadataReturnsEmptyJsonElement()
  nameWithType: TwinPropertiesTest.toJsonElementWithMetadataReturnsEmptyJsonElement()
  fullName: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.toJsonElementWithMetadataReturnsEmptyJsonElement()
  overload: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.toJsonElementWithMetadataReturnsEmptyJsonElement*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinPropertiesTest.java
    startLine: 155
  package: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs
  syntax:
    content: public void toJsonElementWithMetadataReturnsEmptyJsonElement()
- uid: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.toJsonElementWithMetadataReturnsJsonElement()
  id: toJsonElementWithMetadataReturnsJsonElement()
  parent: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest
  href: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.yml
  langs:
  - java
  name: toJsonElementWithMetadataReturnsJsonElement()
  nameWithType: TwinPropertiesTest.toJsonElementWithMetadataReturnsJsonElement()
  fullName: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.toJsonElementWithMetadataReturnsJsonElement()
  overload: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.toJsonElementWithMetadataReturnsJsonElement*
  type: Method
  source:
    remote: *o0
    path: provisioning/provisioning-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/provisioning/service/configs/TwinPropertiesTest.java
    startLine: 138
  package: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs
  syntax:
    content: public void toJsonElementWithMetadataReturnsJsonElement()
references:
- uid: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.constructorThrowsOnNullDesiredProperty*
  name: constructorThrowsOnNullDesiredProperty
  nameWithType: TwinPropertiesTest.constructorThrowsOnNullDesiredProperty
  fullName: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.constructorThrowsOnNullDesiredProperty
  package: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.constructorStoreDesiredProperty*
  name: constructorStoreDesiredProperty
  nameWithType: TwinPropertiesTest.constructorStoreDesiredProperty
  fullName: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.constructorStoreDesiredProperty
  package: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.toJsonElementReturnsJsonElement*
  name: toJsonElementReturnsJsonElement
  nameWithType: TwinPropertiesTest.toJsonElementReturnsJsonElement
  fullName: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.toJsonElementReturnsJsonElement
  package: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.toJsonElementReturnsEmptyJsonElement*
  name: toJsonElementReturnsEmptyJsonElement
  nameWithType: TwinPropertiesTest.toJsonElementReturnsEmptyJsonElement
  fullName: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.toJsonElementReturnsEmptyJsonElement
  package: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.toJsonElementWithMetadataReturnsJsonElement*
  name: toJsonElementWithMetadataReturnsJsonElement
  nameWithType: TwinPropertiesTest.toJsonElementWithMetadataReturnsJsonElement
  fullName: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.toJsonElementWithMetadataReturnsJsonElement
  package: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.toJsonElementWithMetadataReturnsEmptyJsonElement*
  name: toJsonElementWithMetadataReturnsEmptyJsonElement
  nameWithType: TwinPropertiesTest.toJsonElementWithMetadataReturnsEmptyJsonElement
  fullName: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.toJsonElementWithMetadataReturnsEmptyJsonElement
  package: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.getDesiredReturnsDesiredProperty*
  name: getDesiredReturnsDesiredProperty
  nameWithType: TwinPropertiesTest.getDesiredReturnsDesiredProperty
  fullName: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.getDesiredReturnsDesiredProperty
  package: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.constructorSucceed*
  name: constructorSucceed
  nameWithType: TwinPropertiesTest.constructorSucceed
  fullName: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinPropertiesTest.constructorSucceed
  package: tests.unit.com.microsoft.azure.sdk.iot.provisioning.service.configs
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection
  parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
  href: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection.yml
  name: TwinCollection
  nameWithType: TwinCollection
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection
  type: Class
  summary: "<p>Representation of a single Twin collection for Provisioning.</p>\r\n<p>The TwinCollection is an extension of a<code>HashMap \r\n    </code> of<code>String \r\n    </code> and <code>Object \r\n    </code> that contain individual and general versioning mechanism.</p>\r\n<p>By the Twin definition, the<code>Object \r\n    </code> can contain types of<code>Boolean \r\n    </code> , <code>Number \r\n    </code> ,<code>String \r\n    </code> ,<code>Object \r\n    </code> , or a sub-TwinCollection, but it cannot be types defined by the user or arrays.</p>\r\n<p>A TwinCollection can contain up to 5 levels of sub TwinCollections. Once the TwinCollection is a extension of the<code>HashMap \r\n    </code> , both TwinCollection as well as its sub-TwinCollections can be casted to Map of String and Object.</p>\r\n<p>The collection will be represented in the rest API as a JSON in the body. It can or cannot contain the metadata (identified by the <b>$</b> character at the beginning of the key.</p>\r\n<p>Because of the Twin metadata, the character <b>$</b> is not allowed in the entry key.</p>\r\n<p>For instance, the following JSON is a valid TwinCollection with its metadata. <pre><code>{\r\n        \"Color\":\"White\",\r\n        \"MaxSpeed\":{\r\n            \"Value\":500,\r\n            \"NewValue\":300\r\n        },\r\n        \"$metadata\":{\r\n            \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n            \"$lastUpdatedVersion\":4,\r\n            \"Color\":{\r\n                \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                \"$lastUpdatedVersion\":4,\r\n            },\r\n            \"MaxSpeed\":{\r\n                \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                \"$lastUpdatedVersion\":4,\r\n                \"Value\":{\r\n                    \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                    \"$lastUpdatedVersion\":4\r\n                },\r\n                \"NewValue\":{\r\n                    \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                    \"$lastUpdatedVersion\":4\r\n                }\r\n            }\r\n        },\r\n        \"$version\":4\r\n    }\r\n    </code></pre></p>\r\n<p>This class exposes the Twin collection with or without metadata as a Map here user can gat both the value and the metadata. For instance, in the above TwinCollection, <xref uid=\"\" data-throw-if-not-resolved=\"false\">get(Object)</xref> for <b>Color</b> will return <b>White</b> and the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.TwinCollection.getTwinMetadata(String)\" data-throw-if-not-resolved=\"false\">getTwinMetadata(String)</xref> for <b>Color</b> will return the Object TwinMetadata that contain <xref uid=\"\" data-throw-if-not-resolved=\"false\">TwinMetadata#getLastUpdated()</xref> that will returns the<code>Date \r\n    </code><b>2017-09-21T02:07:44.238Z</b> and <xref uid=\"\" data-throw-if-not-resolved=\"false\">TwinMetadata#getLastUpdatedVersion()</xref> that will returns the<code>Integer \r\n    </code><b>4</b>.</p>\r\n<p>For the nested TwinCollection, you can do the same, for instance, the following code will return the value and metadata of the <b>NewValue</b> nested in <b>MaxSpeed</b>: <pre><code>// Get the value of the MaxSpeed, which is a inner TwinCollection.\r\n    TwinCollection innerMaxSpeed = (TwinCollection) twinCollection.get(\"MaxSpeed\");\r\n    \r\n    // From the inner TwinCollection, get the value of the NewValue.\r\n    Long maxSpeedNewValue = innerMaxSpeed.get(\"NewValue\");\r\n    \r\n    // As in the root TwinCollection, the inner TwinCollection contain its own metadata.\r\n    // So, get the metadata information for the inner NewValue.\r\n    TwinMetadata maxSpeedNewValueMetadata = innerMaxSpeed.getTwinMetadata(\"NewValue\");\r\n    Date newValueLastUpdated = maxSpeedNewValueMetadata.getLastUpdated(); //Shall contain `2017-09-21T02:07:44.238Z`\r\n    Integer newValueLastUpdatedVersion = maxSpeedNewValueMetadata.getLastUpdatedVersion(); //Shall contain `4`\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public class TwinCollection
