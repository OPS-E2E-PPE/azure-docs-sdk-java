### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  id: ComputerVisionImpl
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  children:
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage(String,AnalyzeImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageAsync(String,AnalyzeImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageAsync(String,AnalyzeImageOptionalParameter,final ServiceCallback<ImageAnalysis>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomain()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomain(String,String,AnalyzeImageByDomainOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainAsync(String,String,AnalyzeImageByDomainOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainAsync(String,String,AnalyzeImageByDomainOptionalParameter,final ServiceCallback<DomainModelResults>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStream(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter,final ServiceCallback<DomainModelResults>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync(String,byte [],String)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync(String,String,AnalyzeImageByDomainOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStream(byte [],AnalyzeImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamAsync(byte [],AnalyzeImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamAsync(byte [],AnalyzeImageInStreamOptionalParameter,final ServiceCallback<ImageAnalysis>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync(byte [],AnalyzeImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync(byte [],List<VisualFeatureTypes>,String,String)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync(String,AnalyzeImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync(String,List<VisualFeatureTypes>,List<Details>,String)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionImpl(Retrofit,ComputerVisionClientImpl)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImage()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImage(String,DescribeImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageAsync(String,DescribeImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageAsync(String,DescribeImageOptionalParameter,final ServiceCallback<ImageDescription>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStream(byte [],DescribeImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamAsync(byte [],DescribeImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamAsync(byte [],DescribeImageInStreamOptionalParameter,final ServiceCallback<ImageDescription>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync(byte [],DescribeImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync(byte [],String,String)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageWithServiceResponseAsync(String,DescribeImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnail()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnail(int,int,String,GenerateThumbnailOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailAsync(int,int,String,GenerateThumbnailOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailAsync(int,int,String,GenerateThumbnailOptionalParameter,final ServiceCallback<InputStream>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStream(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamAsync(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamAsync(int,int,byte [],GenerateThumbnailInStreamOptionalParameter,final ServiceCallback<InputStream>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync(int,int,byte [],Boolean)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailWithServiceResponseAsync(int,int,String,Boolean)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailWithServiceResponseAsync(int,int,String,GenerateThumbnailOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getTextOperationResult(String)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getTextOperationResultAsync(String)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getTextOperationResultAsync(String,final ServiceCallback<TextOperationResult>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getTextOperationResultWithServiceResponseAsync(String)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModels()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsAsync()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsAsync(final ServiceCallback<ListModelsResult>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsWithServiceResponseAsync()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedText()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedText(boolean,String,RecognizePrintedTextOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextAsync(boolean,String,RecognizePrintedTextOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextAsync(boolean,String,RecognizePrintedTextOptionalParameter,final ServiceCallback<OcrResult>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStream(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamAsync(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamAsync(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter,final ServiceCallback<OcrResult>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync(boolean,byte [],OcrLanguages)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync(boolean,String,OcrLanguages)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync(boolean,String,RecognizePrintedTextOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeText(String,TextRecognitionMode)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextAsync(String,TextRecognitionMode)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextAsync(String,TextRecognitionMode,final ServiceCallback<Void>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextInStream(byte [],TextRecognitionMode)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextInStreamAsync(byte [],TextRecognitionMode)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextInStreamAsync(byte [],TextRecognitionMode,final ServiceCallback<Void>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextInStreamWithServiceResponseAsync(byte [],TextRecognitionMode)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextWithServiceResponseAsync(String,TextRecognitionMode)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImage()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImage(String,TagImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageAsync(String,TagImageOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageAsync(String,TagImageOptionalParameter,final ServiceCallback<TagResult>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStream()
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStream(byte [],TagImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamAsync(byte [],TagImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamAsync(byte [],TagImageInStreamOptionalParameter,final ServiceCallback<TagResult>)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync(byte [],String)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync(byte [],TagImageInStreamOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync(String,String)
  - com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync(String,TagImageOptionalParameter)
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: ComputerVisionImpl
  nameWithType: ComputerVisionImpl
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  type: Class
  source:
    remote: &o0
      path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 70
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>An instance of this class provides access to all the operations defined in ComputerVision. </p>"
  syntax:
    content: public class ComputerVisionImpl implements ComputerVision
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage()
  id: analyzeImage()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: analyzeImage()
  nameWithType: ComputerVisionImpl.analyzeImage()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 2342
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation extracts a rich set of visual features based on the image content. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionAnalyzeImageParameters analyzeImage()
    return:
      type: fd9191c7
      description: <p>the first stage of the analyzeImage call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImage()
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage(String,AnalyzeImageOptionalParameter)
  id: analyzeImage(String,AnalyzeImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  nameWithType: ComputerVisionImpl.analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 2240
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation extracts a rich set of visual features based on the image content. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response.</p>\r\n<p></p>"
  syntax:
    content: public ImageAnalysis analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: analyzeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
      description: <p>the ImageAnalysis object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImage(String,AnalyzeImageOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageAsync(String,AnalyzeImageOptionalParameter)
  id: analyzeImageAsync(String,AnalyzeImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  nameWithType: ComputerVisionImpl.analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 2265
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation extracts a rich set of visual features based on the image content. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ImageAnalysis> analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: analyzeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysisa08ddfce
      description: <p>the observable to the ImageAnalysis object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageAsync(String,AnalyzeImageOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageAsync(String,AnalyzeImageOptionalParameter,final ServiceCallback<ImageAnalysis>)
  id: analyzeImageAsync(String,AnalyzeImageOptionalParameter,final ServiceCallback<ImageAnalysis>)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter, final ServiceCallback<ImageAnalysis> serviceCallback)
  nameWithType: ComputerVisionImpl.analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter, final ServiceCallback<ImageAnalysis> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter, final ServiceCallback<ImageAnalysis> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 2253
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation extracts a rich set of visual features based on the image content. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<ImageAnalysis> analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter, final ServiceCallback<ImageAnalysis> serviceCallback)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: analyzeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysisa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysisa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomain()
  id: analyzeImageByDomain()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: analyzeImageByDomain()
  nameWithType: ComputerVisionImpl.analyzeImageByDomain()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomain()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomain*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1517
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API only provides a single domain-specific model: celebrities. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionAnalyzeImageByDomainParameters analyzeImageByDomain()
    return:
      type: af888159
      description: <p>the first stage of the analyzeImageByDomain call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain()
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomain(String,String,AnalyzeImageByDomainOptionalParameter)
  id: analyzeImageByDomain(String,String,AnalyzeImageByDomainOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  nameWithType: ComputerVisionImpl.analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomain*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1413
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API only provides a single domain-specific model: celebrities. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public DomainModelResults analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
    parameters:
    - id: model
      type: "26831127"
      description: <p>The domain-specific content to recognize. </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: analyzeImageByDomainOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
      description: <p>the DomainModelResults object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain(String,String,AnalyzeImageByDomainOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainAsync(String,String,AnalyzeImageByDomainOptionalParameter)
  id: analyzeImageByDomainAsync(String,String,AnalyzeImageByDomainOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  nameWithType: ComputerVisionImpl.analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1440
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API only provides a single domain-specific model: celebrities. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DomainModelResults> analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
    parameters:
    - id: model
      type: "26831127"
      description: <p>The domain-specific content to recognize. </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: analyzeImageByDomainOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResultsa08ddfce
      description: <p>the observable to the DomainModelResults object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainAsync(String,String,AnalyzeImageByDomainOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainAsync(String,String,AnalyzeImageByDomainOptionalParameter,final ServiceCallback<DomainModelResults>)
  id: analyzeImageByDomainAsync(String,String,AnalyzeImageByDomainOptionalParameter,final ServiceCallback<DomainModelResults>)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter, final ServiceCallback<DomainModelResults> serviceCallback)
  nameWithType: ComputerVisionImpl.analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter, final ServiceCallback<DomainModelResults> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter, final ServiceCallback<DomainModelResults> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1427
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API only provides a single domain-specific model: celebrities. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<DomainModelResults> analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter, final ServiceCallback<DomainModelResults> serviceCallback)
    parameters:
    - id: model
      type: "26831127"
      description: <p>The domain-specific content to recognize. </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: analyzeImageByDomainOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResultsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResultsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStream()
  id: analyzeImageByDomainInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: analyzeImageByDomainInStream()
  nameWithType: ComputerVisionImpl.analyzeImageByDomainInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 359
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API only provides a single domain-specific model: celebrities. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionAnalyzeImageByDomainInStreamParameters analyzeImageByDomainInStream()
    return:
      type: 24297c65
      description: <p>the first stage of the analyzeImageByDomainInStream call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStream()
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStream(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  id: analyzeImageByDomainInStream(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: analyzeImageByDomainInStream(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.analyzeImageByDomainInStream(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStream(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 256
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API only provides a single domain-specific model: celebrities. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public DomainModelResults analyzeImageByDomainInStream(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
    parameters:
    - id: model
      type: "26831127"
      description: <p>The domain-specific content to recognize. </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: analyzeImageByDomainInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
      description: <p>the DomainModelResults object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStream(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  id: analyzeImageByDomainInStreamAsync(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 283
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API only provides a single domain-specific model: celebrities. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DomainModelResults> analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
    parameters:
    - id: model
      type: "26831127"
      description: <p>The domain-specific content to recognize. </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: analyzeImageByDomainInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResultsa08ddfce
      description: <p>the observable to the DomainModelResults object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStreamAsync(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter,final ServiceCallback<DomainModelResults>)
  id: analyzeImageByDomainInStreamAsync(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter,final ServiceCallback<DomainModelResults>)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter, final ServiceCallback<DomainModelResults> serviceCallback)
  nameWithType: ComputerVisionImpl.analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter, final ServiceCallback<DomainModelResults> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter, final ServiceCallback<DomainModelResults> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 270
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API only provides a single domain-specific model: celebrities. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<DomainModelResults> analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter, final ServiceCallback<DomainModelResults> serviceCallback)
    parameters:
    - id: model
      type: "26831127"
      description: <p>The domain-specific content to recognize. </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: analyzeImageByDomainInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResultsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResultsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  id: analyzeImageByDomainInStreamWithServiceResponseAsync(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: analyzeImageByDomainInStreamWithServiceResponseAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 301
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API only provides a single domain-specific model: celebrities. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DomainModelResults>> analyzeImageByDomainInStreamWithServiceResponseAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
    parameters:
    - id: model
      type: "26831127"
      description: <p>The domain-specific content to recognize. </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: analyzeImageByDomainInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResultse7daa122
      description: <p>the observable to the DomainModelResults object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync(String,byte [],String)
  id: analyzeImageByDomainInStreamWithServiceResponseAsync(String,byte [],String)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: analyzeImageByDomainInStreamWithServiceResponseAsync(String model, byte[] image, String language)
  nameWithType: ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync(String model, byte[] image, String language)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync(String model, byte[] image, String language)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 325
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API only provides a single domain-specific model: celebrities. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DomainModelResults>> analyzeImageByDomainInStreamWithServiceResponseAsync(String model, byte[] image, String language)
    parameters:
    - id: model
      type: "26831127"
      description: <p>The domain-specific content to recognize. </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: language
      type: "26831127"
      description: "<p>The desired language for output generation. If this parameter is not specified, the default value is &amp;quot;en&amp;quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese. Possible values include: 'en', 'es', 'ja', 'pt', 'zh' </p>"
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResultse7daa122
      description: <p>the observable to the DomainModelResults object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync(String,String,AnalyzeImageByDomainOptionalParameter)
  id: analyzeImageByDomainWithServiceResponseAsync(String,String,AnalyzeImageByDomainOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: analyzeImageByDomainWithServiceResponseAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  nameWithType: ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1458
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API only provides a single domain-specific model: celebrities. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DomainModelResults>> analyzeImageByDomainWithServiceResponseAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
    parameters:
    - id: model
      type: "26831127"
      description: <p>The domain-specific content to recognize. </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: analyzeImageByDomainOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResultse7daa122
      description: <p>the observable to the DomainModelResults object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync(String,String,String)
  id: analyzeImageByDomainWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: analyzeImageByDomainWithServiceResponseAsync(String model, String url, String language)
  nameWithType: ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync(String model, String url, String language)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync(String model, String url, String language)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1482
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API only provides a single domain-specific model: celebrities. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DomainModelResults>> analyzeImageByDomainWithServiceResponseAsync(String model, String url, String language)
    parameters:
    - id: model
      type: "26831127"
      description: <p>The domain-specific content to recognize. </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: language
      type: "26831127"
      description: "<p>The desired language for output generation. If this parameter is not specified, the default value is &amp;quot;en&amp;quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese. Possible values include: 'en', 'es', 'ja', 'pt', 'zh' </p>"
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResultse7daa122
      description: <p>the observable to the DomainModelResults object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStream()
  id: analyzeImageInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: analyzeImageInStream()
  nameWithType: ComputerVisionImpl.analyzeImageInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1177
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation extracts a rich set of visual features based on the image content.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionAnalyzeImageInStreamParameters analyzeImageInStream()
    return:
      type: 68990fad
      description: <p>the first stage of the analyzeImageInStream call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStream()
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStream(byte [],AnalyzeImageInStreamOptionalParameter)
  id: analyzeImageInStream(byte [],AnalyzeImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: analyzeImageInStream(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.analyzeImageInStream(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStream(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1078
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation extracts a rich set of visual features based on the image content.</p>\r\n<p></p>"
  syntax:
    content: public ImageAnalysis analyzeImageInStream(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: analyzeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
      description: <p>the ImageAnalysis object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStream(byte [],AnalyzeImageInStreamOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamAsync(byte [],AnalyzeImageInStreamOptionalParameter)
  id: analyzeImageInStreamAsync(byte [],AnalyzeImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1103
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation extracts a rich set of visual features based on the image content.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ImageAnalysis> analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: analyzeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysisa08ddfce
      description: <p>the observable to the ImageAnalysis object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStreamAsync(byte [],AnalyzeImageInStreamOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamAsync(byte [],AnalyzeImageInStreamOptionalParameter,final ServiceCallback<ImageAnalysis>)
  id: analyzeImageInStreamAsync(byte [],AnalyzeImageInStreamOptionalParameter,final ServiceCallback<ImageAnalysis>)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter, final ServiceCallback<ImageAnalysis> serviceCallback)
  nameWithType: ComputerVisionImpl.analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter, final ServiceCallback<ImageAnalysis> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter, final ServiceCallback<ImageAnalysis> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1091
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation extracts a rich set of visual features based on the image content.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<ImageAnalysis> analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter, final ServiceCallback<ImageAnalysis> serviceCallback)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: analyzeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysisa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysisa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync(byte [],AnalyzeImageInStreamOptionalParameter)
  id: analyzeImageInStreamWithServiceResponseAsync(byte [],AnalyzeImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: analyzeImageInStreamWithServiceResponseAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1120
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation extracts a rich set of visual features based on the image content.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<ImageAnalysis>> analyzeImageInStreamWithServiceResponseAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: analyzeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysise7daa122
      description: <p>the observable to the ImageAnalysis object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync(byte [],List<VisualFeatureTypes>,String,String)
  id: analyzeImageInStreamWithServiceResponseAsync(byte [],List<VisualFeatureTypes>,String,String)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: analyzeImageInStreamWithServiceResponseAsync(byte[] image, List<VisualFeatureTypes> visualFeatures, String details, String language)
  nameWithType: ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync(byte[] image, List<VisualFeatureTypes> visualFeatures, String details, String language)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync(byte[] image, List<VisualFeatureTypes> visualFeatures, String details, String language)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1144
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation extracts a rich set of visual features based on the image content.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<ImageAnalysis>> analyzeImageInStreamWithServiceResponseAsync(byte[] image, List<VisualFeatureTypes> visualFeatures, String details, String language)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: visualFeatures
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypesa08ddfce
      description: <p>A string indicating what visual feature types to return. Multiple values should be comma-separated. Valid visual feature types include:Categories - categorizes image content according to a taxonomy defined in documentation. Tags - tags the image with a detailed list of words related to the image content. Description - describes the image content with a complete English sentence. Faces - detects if faces are present. If present, generate coordinates, gender and age. ImageType - detects if image is clipart or a line drawing. Color - determines the accent color, dominant color, and whether an image is black&amp;white.Adult - detects if the image is pornographic in nature (depicts nudity or a sex act). Sexually suggestive content is also detected. </p>
    - id: details
      type: "26831127"
      description: "<p>A string indicating which domain-specific details to return. Multiple values should be comma-separated. Valid visual feature types include:Celebrities - identifies celebrities if detected in the image. Possible values include: 'Celebrities', 'Landmarks' </p>"
    - id: language
      type: "26831127"
      description: "<p>The desired language for output generation. If this parameter is not specified, the default value is &amp;quot;en&amp;quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese. Possible values include: 'en', 'es', 'ja', 'pt', 'zh' </p>"
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysise7daa122
      description: <p>the observable to the ImageAnalysis object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync(String,AnalyzeImageOptionalParameter)
  id: analyzeImageWithServiceResponseAsync(String,AnalyzeImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: analyzeImageWithServiceResponseAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  nameWithType: ComputerVisionImpl.analyzeImageWithServiceResponseAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 2282
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation extracts a rich set of visual features based on the image content. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<ImageAnalysis>> analyzeImageWithServiceResponseAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: analyzeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysise7daa122
      description: <p>the observable to the ImageAnalysis object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync(String,List<VisualFeatureTypes>,List<Details>,String)
  id: analyzeImageWithServiceResponseAsync(String,List<VisualFeatureTypes>,List<Details>,String)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: analyzeImageWithServiceResponseAsync(String url, List<VisualFeatureTypes> visualFeatures, List<Details> details, String language)
  nameWithType: ComputerVisionImpl.analyzeImageWithServiceResponseAsync(String url, List<VisualFeatureTypes> visualFeatures, List<Details> details, String language)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync(String url, List<VisualFeatureTypes> visualFeatures, List<Details> details, String language)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 2306
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation extracts a rich set of visual features based on the image content. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<ImageAnalysis>> analyzeImageWithServiceResponseAsync(String url, List<VisualFeatureTypes> visualFeatures, List<Details> details, String language)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: visualFeatures
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypesa08ddfce
      description: <p>A string indicating what visual feature types to return. Multiple values should be comma-separated. Valid visual feature types include:Categories - categorizes image content according to a taxonomy defined in documentation. Tags - tags the image with a detailed list of words related to the image content. Description - describes the image content with a complete English sentence. Faces - detects if faces are present. If present, generate coordinates, gender and age. ImageType - detects if image is clipart or a line drawing. Color - determines the accent color, dominant color, and whether an image is black&amp;white.Adult - detects if the image is pornographic in nature (depicts nudity or a sex act). Sexually suggestive content is also detected. </p>
    - id: details
      type: 5618da2dcom.microsoft.azure.cognitiveservices.vision.computervision.models.Detailsa08ddfce
      description: <p>A string indicating which domain-specific details to return. Multiple values should be comma-separated. Valid visual feature types include:Celebrities - identifies celebrities if detected in the image. </p>
    - id: language
      type: "26831127"
      description: "<p>The desired language for output generation. If this parameter is not specified, the default value is &amp;quot;en&amp;quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese. Possible values include: 'en', 'es', 'ja', 'pt', 'zh' </p>"
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysise7daa122
      description: <p>the observable to the ImageAnalysis object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionImpl(Retrofit,ComputerVisionClientImpl)
  id: ComputerVisionImpl(Retrofit,ComputerVisionClientImpl)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: ComputerVisionImpl(Retrofit retrofit, ComputerVisionClientImpl client)
  nameWithType: ComputerVisionImpl.ComputerVisionImpl(Retrofit retrofit, ComputerVisionClientImpl client)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionImpl(Retrofit retrofit, ComputerVisionClientImpl client)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionImpl*
  type: Constructor
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 82
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>Initializes an instance of ComputerVisionImpl.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionImpl(Retrofit retrofit, ComputerVisionClientImpl client)
    parameters:
    - id: retrofit
      type: 964879b9
      description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    - id: client
      type: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionClientImpl
      description: <p>the instance of the service client containing this operation class. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImage()
  id: describeImage()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: describeImage()
  nameWithType: ComputerVisionImpl.describeImage()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImage()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImage*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1832
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. All descriptions are in English. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionDescribeImageParameters describeImage()
    return:
      type: d4e50ef6
      description: <p>the first stage of the describeImage call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImage()
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImage(String,DescribeImageOptionalParameter)
  id: describeImage(String,DescribeImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: describeImage(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  nameWithType: ComputerVisionImpl.describeImage(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImage(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImage*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1736
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. All descriptions are in English. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ImageDescription describeImage(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: describeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
      description: <p>the ImageDescription object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImage(String,DescribeImageOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageAsync(String,DescribeImageOptionalParameter)
  id: describeImageAsync(String,DescribeImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  nameWithType: ComputerVisionImpl.describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1761
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. All descriptions are in English. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ImageDescription> describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: describeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescriptiona08ddfce
      description: <p>the observable to the ImageDescription object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageAsync(String,DescribeImageOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageAsync(String,DescribeImageOptionalParameter,final ServiceCallback<ImageDescription>)
  id: describeImageAsync(String,DescribeImageOptionalParameter,final ServiceCallback<ImageDescription>)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter, final ServiceCallback<ImageDescription> serviceCallback)
  nameWithType: ComputerVisionImpl.describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter, final ServiceCallback<ImageDescription> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter, final ServiceCallback<ImageDescription> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1749
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. All descriptions are in English. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<ImageDescription> describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter, final ServiceCallback<ImageDescription> serviceCallback)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: describeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescriptiona08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescriptiona08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStream()
  id: describeImageInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: describeImageInStream()
  nameWithType: ComputerVisionImpl.describeImageInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 672
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. All descriptions are in English. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionDescribeImageInStreamParameters describeImageInStream()
    return:
      type: f9e2aa7f
      description: <p>the first stage of the describeImageInStream call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStream()
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStream(byte [],DescribeImageInStreamOptionalParameter)
  id: describeImageInStream(byte [],DescribeImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: describeImageInStream(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.describeImageInStream(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStream(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 577
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. All descriptions are in English. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ImageDescription describeImageInStream(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: describeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
      description: <p>the ImageDescription object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStream(byte [],DescribeImageInStreamOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamAsync(byte [],DescribeImageInStreamOptionalParameter)
  id: describeImageInStreamAsync(byte [],DescribeImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 602
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. All descriptions are in English. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ImageDescription> describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: describeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescriptiona08ddfce
      description: <p>the observable to the ImageDescription object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStreamAsync(byte [],DescribeImageInStreamOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamAsync(byte [],DescribeImageInStreamOptionalParameter,final ServiceCallback<ImageDescription>)
  id: describeImageInStreamAsync(byte [],DescribeImageInStreamOptionalParameter,final ServiceCallback<ImageDescription>)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter, final ServiceCallback<ImageDescription> serviceCallback)
  nameWithType: ComputerVisionImpl.describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter, final ServiceCallback<ImageDescription> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter, final ServiceCallback<ImageDescription> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 590
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. All descriptions are in English. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<ImageDescription> describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter, final ServiceCallback<ImageDescription> serviceCallback)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: describeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescriptiona08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescriptiona08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync(byte [],DescribeImageInStreamOptionalParameter)
  id: describeImageInStreamWithServiceResponseAsync(byte [],DescribeImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: describeImageInStreamWithServiceResponseAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 619
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. All descriptions are in English. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<ImageDescription>> describeImageInStreamWithServiceResponseAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: describeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescriptione7daa122
      description: <p>the observable to the ImageDescription object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync(byte [],String,String)
  id: describeImageInStreamWithServiceResponseAsync(byte [],String,String)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: describeImageInStreamWithServiceResponseAsync(byte[] image, String maxCandidates, String language)
  nameWithType: ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync(byte[] image, String maxCandidates, String language)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync(byte[] image, String maxCandidates, String language)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 641
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. All descriptions are in English. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<ImageDescription>> describeImageInStreamWithServiceResponseAsync(byte[] image, String maxCandidates, String language)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: maxCandidates
      type: "26831127"
      description: <p>Maximum number of candidate descriptions to be returned. The default is 1. </p>
    - id: language
      type: "26831127"
      description: "<p>The desired language for output generation. If this parameter is not specified, the default value is &amp;quot;en&amp;quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese. Possible values include: 'en', 'es', 'ja', 'pt', 'zh' </p>"
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescriptione7daa122
      description: <p>the observable to the ImageDescription object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageWithServiceResponseAsync(String,DescribeImageOptionalParameter)
  id: describeImageWithServiceResponseAsync(String,DescribeImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: describeImageWithServiceResponseAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  nameWithType: ComputerVisionImpl.describeImageWithServiceResponseAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageWithServiceResponseAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1778
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. All descriptions are in English. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<ImageDescription>> describeImageWithServiceResponseAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: describeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescriptione7daa122
      description: <p>the observable to the ImageDescription object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageWithServiceResponseAsync(String,String,String)
  id: describeImageWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: describeImageWithServiceResponseAsync(String url, String maxCandidates, String language)
  nameWithType: ComputerVisionImpl.describeImageWithServiceResponseAsync(String url, String maxCandidates, String language)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageWithServiceResponseAsync(String url, String maxCandidates, String language)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1800
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. All descriptions are in English. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<ImageDescription>> describeImageWithServiceResponseAsync(String url, String maxCandidates, String language)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: maxCandidates
      type: "26831127"
      description: <p>Maximum number of candidate descriptions to be returned. The default is 1. </p>
    - id: language
      type: "26831127"
      description: "<p>The desired language for output generation. If this parameter is not specified, the default value is &amp;quot;en&amp;quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese. Possible values include: 'en', 'es', 'ja', 'pt', 'zh' </p>"
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescriptione7daa122
      description: <p>the observable to the ImageDescription object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnail()
  id: generateThumbnail()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: generateThumbnail()
  nameWithType: ComputerVisionImpl.generateThumbnail()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnail()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnail*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 2167
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionGenerateThumbnailParameters generateThumbnail()
    return:
      type: b03edcec
      description: <p>the first stage of the generateThumbnail call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnail()
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnail(int,int,String,GenerateThumbnailOptionalParameter)
  id: generateThumbnail(int,int,String,GenerateThumbnailOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: generateThumbnail(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  nameWithType: ComputerVisionImpl.generateThumbnail(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnail(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnail*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 2065
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public InputStream generateThumbnail(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
    parameters:
    - id: width
      type: f75371fa
      description: <p>Width of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: height
      type: f75371fa
      description: <p>Height of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: generateThumbnailOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 76fcb9b7
      description: <p>the InputStream object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnail(int,int,String,GenerateThumbnailOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailAsync(int,int,String,GenerateThumbnailOptionalParameter)
  id: generateThumbnailAsync(int,int,String,GenerateThumbnailOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  nameWithType: ComputerVisionImpl.generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 2094
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<InputStream> generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
    parameters:
    - id: width
      type: f75371fa
      description: <p>Width of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: height
      type: f75371fa
      description: <p>Height of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: generateThumbnailOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 3ab19265
      description: <p>the observable to the InputStream object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailAsync(int,int,String,GenerateThumbnailOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailAsync(int,int,String,GenerateThumbnailOptionalParameter,final ServiceCallback<InputStream>)
  id: generateThumbnailAsync(int,int,String,GenerateThumbnailOptionalParameter,final ServiceCallback<InputStream>)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter, final ServiceCallback<InputStream> serviceCallback)
  nameWithType: ComputerVisionImpl.generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter, final ServiceCallback<InputStream> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter, final ServiceCallback<InputStream> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 2080
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<InputStream> generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter, final ServiceCallback<InputStream> serviceCallback)
    parameters:
    - id: width
      type: f75371fa
      description: <p>Width of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: height
      type: f75371fa
      description: <p>Height of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: generateThumbnailOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 0377aee2
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 8601070c
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStream()
  id: generateThumbnailInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: generateThumbnailInStream()
  nameWithType: ComputerVisionImpl.generateThumbnailInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1005
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionGenerateThumbnailInStreamParameters generateThumbnailInStream()
    return:
      type: a3a6a20a
      description: <p>the first stage of the generateThumbnailInStream call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStream()
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStream(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  id: generateThumbnailInStream(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: generateThumbnailInStream(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.generateThumbnailInStream(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStream(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 904
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public InputStream generateThumbnailInStream(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
    parameters:
    - id: width
      type: f75371fa
      description: <p>Width of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: height
      type: f75371fa
      description: <p>Height of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: generateThumbnailInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 76fcb9b7
      description: <p>the InputStream object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStream(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: dc385fd4
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamAsync(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  id: generateThumbnailInStreamAsync(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 933
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<InputStream> generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
    parameters:
    - id: width
      type: f75371fa
      description: <p>Width of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: height
      type: f75371fa
      description: <p>Height of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: generateThumbnailInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 3ab19265
      description: <p>the observable to the InputStream object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStreamAsync(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamAsync(int,int,byte [],GenerateThumbnailInStreamOptionalParameter,final ServiceCallback<InputStream>)
  id: generateThumbnailInStreamAsync(int,int,byte [],GenerateThumbnailInStreamOptionalParameter,final ServiceCallback<InputStream>)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter, final ServiceCallback<InputStream> serviceCallback)
  nameWithType: ComputerVisionImpl.generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter, final ServiceCallback<InputStream> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter, final ServiceCallback<InputStream> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 919
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<InputStream> generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter, final ServiceCallback<InputStream> serviceCallback)
    parameters:
    - id: width
      type: f75371fa
      description: <p>Width of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: height
      type: f75371fa
      description: <p>Height of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: generateThumbnailInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 0377aee2
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 8601070c
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync(int,int,byte [],Boolean)
  id: generateThumbnailInStreamWithServiceResponseAsync(int,int,byte [],Boolean)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: generateThumbnailInStreamWithServiceResponseAsync(int width, int height, byte[] image, Boolean smartCropping)
  nameWithType: ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync(int width, int height, byte[] image, Boolean smartCropping)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync(int width, int height, byte[] image, Boolean smartCropping)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 974
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<InputStream>> generateThumbnailInStreamWithServiceResponseAsync(int width, int height, byte[] image, Boolean smartCropping)
    parameters:
    - id: width
      type: f75371fa
      description: <p>Width of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: height
      type: f75371fa
      description: <p>Height of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: smartCropping
      type: 866c2227
      description: <p>Boolean flag for enabling smart cropping. </p>
    return:
      type: b4669ca9
      description: <p>the observable to the InputStream object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  id: generateThumbnailInStreamWithServiceResponseAsync(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: generateThumbnailInStreamWithServiceResponseAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 952
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<InputStream>> generateThumbnailInStreamWithServiceResponseAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
    parameters:
    - id: width
      type: f75371fa
      description: <p>Width of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: height
      type: f75371fa
      description: <p>Height of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: generateThumbnailInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: b4669ca9
      description: <p>the observable to the InputStream object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailWithServiceResponseAsync(int,int,String,Boolean)
  id: generateThumbnailWithServiceResponseAsync(int,int,String,Boolean)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: generateThumbnailWithServiceResponseAsync(int width, int height, String url, Boolean smartCropping)
  nameWithType: ComputerVisionImpl.generateThumbnailWithServiceResponseAsync(int width, int height, String url, Boolean smartCropping)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailWithServiceResponseAsync(int width, int height, String url, Boolean smartCropping)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 2135
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<InputStream>> generateThumbnailWithServiceResponseAsync(int width, int height, String url, Boolean smartCropping)
    parameters:
    - id: width
      type: f75371fa
      description: <p>Width of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: height
      type: f75371fa
      description: <p>Height of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: smartCropping
      type: 866c2227
      description: <p>Boolean flag for enabling smart cropping. </p>
    return:
      type: b4669ca9
      description: <p>the observable to the InputStream object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailWithServiceResponseAsync(int,int,String,GenerateThumbnailOptionalParameter)
  id: generateThumbnailWithServiceResponseAsync(int,int,String,GenerateThumbnailOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: generateThumbnailWithServiceResponseAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  nameWithType: ComputerVisionImpl.generateThumbnailWithServiceResponseAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailWithServiceResponseAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 2113
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<InputStream>> generateThumbnailWithServiceResponseAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
    parameters:
    - id: width
      type: f75371fa
      description: <p>Width of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: height
      type: f75371fa
      description: <p>Height of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: generateThumbnailOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: b4669ca9
      description: <p>the observable to the InputStream object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getTextOperationResult(String)
  id: getTextOperationResult(String)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: getTextOperationResult(String operationId)
  nameWithType: ComputerVisionImpl.getTextOperationResult(String operationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getTextOperationResult(String operationId)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getTextOperationResult*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1248
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This interface is used for getting text operation result. The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</p>\r\n<p></p>"
  syntax:
    content: public TextOperationResult getTextOperationResult(String operationId)
    parameters:
    - id: operationId
      type: "26831127"
      description: <p>Id of the text operation returned in the response of the 'Recognize Text' </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResult
      description: <p>the TextOperationResult object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getTextOperationResult(String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getTextOperationResultAsync(String)
  id: getTextOperationResultAsync(String)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: getTextOperationResultAsync(String operationId)
  nameWithType: ComputerVisionImpl.getTextOperationResultAsync(String operationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getTextOperationResultAsync(String operationId)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getTextOperationResultAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1271
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This interface is used for getting text operation result. The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</p>\r\n<p></p>"
  syntax:
    content: public Observable<TextOperationResult> getTextOperationResultAsync(String operationId)
    parameters:
    - id: operationId
      type: "26831127"
      description: <p>Id of the text operation returned in the response of the 'Recognize Text' </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResulta08ddfce
      description: <p>the observable to the TextOperationResult object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getTextOperationResultAsync(String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getTextOperationResultAsync(String,final ServiceCallback<TextOperationResult>)
  id: getTextOperationResultAsync(String,final ServiceCallback<TextOperationResult>)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: getTextOperationResultAsync(String operationId, final ServiceCallback<TextOperationResult> serviceCallback)
  nameWithType: ComputerVisionImpl.getTextOperationResultAsync(String operationId, final ServiceCallback<TextOperationResult> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getTextOperationResultAsync(String operationId, final ServiceCallback<TextOperationResult> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getTextOperationResultAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1260
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This interface is used for getting text operation result. The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<TextOperationResult> getTextOperationResultAsync(String operationId, final ServiceCallback<TextOperationResult> serviceCallback)
    parameters:
    - id: operationId
      type: "26831127"
      description: <p>Id of the text operation returned in the response of the 'Recognize Text' </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getTextOperationResultWithServiceResponseAsync(String)
  id: getTextOperationResultWithServiceResponseAsync(String)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: getTextOperationResultWithServiceResponseAsync(String operationId)
  nameWithType: ComputerVisionImpl.getTextOperationResultWithServiceResponseAsync(String operationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getTextOperationResultWithServiceResponseAsync(String operationId)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getTextOperationResultWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1287
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This interface is used for getting text operation result. The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<TextOperationResult>> getTextOperationResultWithServiceResponseAsync(String operationId)
    parameters:
    - id: operationId
      type: "26831127"
      description: <p>Id of the text operation returned in the response of the 'Recognize Text' </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResulte7daa122
      description: <p>the observable to the TextOperationResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModels()
  id: listModels()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: listModels()
  nameWithType: ComputerVisionImpl.listModels()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModels()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModels*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 2412
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation returns the list of domain-specific models that are supported by the Computer Vision API. Currently, the API only supports one domain-specific model: a celebrity recognizer. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ListModelsResult listModels()
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
      description: <p>the ListModelsResult object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModels()
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsAsync()
  id: listModelsAsync()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: listModelsAsync()
  nameWithType: ComputerVisionImpl.listModelsAsync()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsAsync()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 2433
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation returns the list of domain-specific models that are supported by the Computer Vision API. Currently, the API only supports one domain-specific model: a celebrity recognizer. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ListModelsResult> listModelsAsync()
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResulta08ddfce
      description: <p>the observable to the ListModelsResult object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModelsAsync()
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsAsync(final ServiceCallback<ListModelsResult>)
  id: listModelsAsync(final ServiceCallback<ListModelsResult>)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: listModelsAsync(final ServiceCallback<ListModelsResult> serviceCallback)
  nameWithType: ComputerVisionImpl.listModelsAsync(final ServiceCallback<ListModelsResult> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsAsync(final ServiceCallback<ListModelsResult> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 2423
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation returns the list of domain-specific models that are supported by the Computer Vision API. Currently, the API only supports one domain-specific model: a celebrity recognizer. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<ListModelsResult> listModelsAsync(final ServiceCallback<ListModelsResult> serviceCallback)
    parameters:
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsWithServiceResponseAsync()
  id: listModelsWithServiceResponseAsync()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: listModelsWithServiceResponseAsync()
  nameWithType: ComputerVisionImpl.listModelsWithServiceResponseAsync()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsWithServiceResponseAsync()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 2448
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation returns the list of domain-specific models that are supported by the Computer Vision API. Currently, the API only supports one domain-specific model: a celebrity recognizer. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<ListModelsResult>> listModelsWithServiceResponseAsync()
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResulte7daa122
      description: <p>the observable to the ListModelsResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedText()
  id: recognizePrintedText()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: recognizePrintedText()
  nameWithType: ComputerVisionImpl.recognizePrintedText()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedText()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedText*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1997
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionRecognizePrintedTextParameters recognizePrintedText()
    return:
      type: 940acc54
      description: <p>the first stage of the recognizePrintedText call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedText()
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedText(boolean,String,RecognizePrintedTextOptionalParameter)
  id: recognizePrintedText(boolean,String,RecognizePrintedTextOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: recognizePrintedText(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  nameWithType: ComputerVisionImpl.recognizePrintedText(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedText(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedText*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1899
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public OcrResult recognizePrintedText(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
    parameters:
    - id: detectOrientation
      type: 4fc6e284
      description: <p>Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down). </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: recognizePrintedTextOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
      description: <p>the OcrResult object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedText(boolean,String,RecognizePrintedTextOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextAsync(boolean,String,RecognizePrintedTextOptionalParameter)
  id: recognizePrintedTextAsync(boolean,String,RecognizePrintedTextOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  nameWithType: ComputerVisionImpl.recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1926
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public Observable<OcrResult> recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
    parameters:
    - id: detectOrientation
      type: 4fc6e284
      description: <p>Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down). </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: recognizePrintedTextOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResulta08ddfce
      description: <p>the observable to the OcrResult object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextAsync(boolean,String,RecognizePrintedTextOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextAsync(boolean,String,RecognizePrintedTextOptionalParameter,final ServiceCallback<OcrResult>)
  id: recognizePrintedTextAsync(boolean,String,RecognizePrintedTextOptionalParameter,final ServiceCallback<OcrResult>)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter, final ServiceCallback<OcrResult> serviceCallback)
  nameWithType: ComputerVisionImpl.recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter, final ServiceCallback<OcrResult> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter, final ServiceCallback<OcrResult> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1913
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<OcrResult> recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter, final ServiceCallback<OcrResult> serviceCallback)
    parameters:
    - id: detectOrientation
      type: 4fc6e284
      description: <p>Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down). </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: recognizePrintedTextOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStream()
  id: recognizePrintedTextInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: recognizePrintedTextInStream()
  nameWithType: ComputerVisionImpl.recognizePrintedTextInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 836
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionRecognizePrintedTextInStreamParameters recognizePrintedTextInStream()
    return:
      type: d117c8a8
      description: <p>the first stage of the recognizePrintedTextInStream call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStream()
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStream(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  id: recognizePrintedTextInStream(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: recognizePrintedTextInStream(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.recognizePrintedTextInStream(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStream(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 739
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public OcrResult recognizePrintedTextInStream(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
    parameters:
    - id: detectOrientation
      type: 4fc6e284
      description: <p>Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down). </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: recognizePrintedTextInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
      description: <p>the OcrResult object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStream(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamAsync(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  id: recognizePrintedTextInStreamAsync(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 766
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public Observable<OcrResult> recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
    parameters:
    - id: detectOrientation
      type: 4fc6e284
      description: <p>Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down). </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: recognizePrintedTextInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResulta08ddfce
      description: <p>the observable to the OcrResult object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStreamAsync(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamAsync(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter,final ServiceCallback<OcrResult>)
  id: recognizePrintedTextInStreamAsync(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter,final ServiceCallback<OcrResult>)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter, final ServiceCallback<OcrResult> serviceCallback)
  nameWithType: ComputerVisionImpl.recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter, final ServiceCallback<OcrResult> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter, final ServiceCallback<OcrResult> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 753
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<OcrResult> recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter, final ServiceCallback<OcrResult> serviceCallback)
    parameters:
    - id: detectOrientation
      type: 4fc6e284
      description: <p>Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down). </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: recognizePrintedTextInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync(boolean,byte [],OcrLanguages)
  id: recognizePrintedTextInStreamWithServiceResponseAsync(boolean,byte [],OcrLanguages)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: recognizePrintedTextInStreamWithServiceResponseAsync(boolean detectOrientation, byte[] image, OcrLanguages language)
  nameWithType: ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync(boolean detectOrientation, byte[] image, OcrLanguages language)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync(boolean detectOrientation, byte[] image, OcrLanguages language)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 805
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<OcrResult>> recognizePrintedTextInStreamWithServiceResponseAsync(boolean detectOrientation, byte[] image, OcrLanguages language)
    parameters:
    - id: detectOrientation
      type: 4fc6e284
      description: <p>Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down). </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: language
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrLanguages
      description: "<p>The BCP-47 language code of the text to be detected in the image. The default value is 'unk'. Possible values include: 'unk', 'zh-Hans', 'zh-Hant', 'cs', 'da', 'nl', 'en', 'fi', 'fr', 'de', 'el', 'hu', 'it', 'ja', 'ko', 'nb', 'pl', 'pt', 'ru', 'es', 'sv', 'tr', 'ar', 'ro', 'sr-Cyrl', 'sr-Latn', 'sk' </p>"
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResulte7daa122
      description: <p>the observable to the OcrResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  id: recognizePrintedTextInStreamWithServiceResponseAsync(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: recognizePrintedTextInStreamWithServiceResponseAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 784
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<OcrResult>> recognizePrintedTextInStreamWithServiceResponseAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
    parameters:
    - id: detectOrientation
      type: 4fc6e284
      description: <p>Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down). </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: recognizePrintedTextInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResulte7daa122
      description: <p>the observable to the OcrResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync(boolean,String,OcrLanguages)
  id: recognizePrintedTextWithServiceResponseAsync(boolean,String,OcrLanguages)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: recognizePrintedTextWithServiceResponseAsync(boolean detectOrientation, String url, OcrLanguages language)
  nameWithType: ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync(boolean detectOrientation, String url, OcrLanguages language)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync(boolean detectOrientation, String url, OcrLanguages language)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1965
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<OcrResult>> recognizePrintedTextWithServiceResponseAsync(boolean detectOrientation, String url, OcrLanguages language)
    parameters:
    - id: detectOrientation
      type: 4fc6e284
      description: <p>Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down). </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: language
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrLanguages
      description: "<p>The BCP-47 language code of the text to be detected in the image. The default value is 'unk'. Possible values include: 'unk', 'zh-Hans', 'zh-Hant', 'cs', 'da', 'nl', 'en', 'fi', 'fr', 'de', 'el', 'hu', 'it', 'ja', 'ko', 'nb', 'pl', 'pt', 'ru', 'es', 'sv', 'tr', 'ar', 'ro', 'sr-Cyrl', 'sr-Latn', 'sk' </p>"
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResulte7daa122
      description: <p>the observable to the OcrResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync(boolean,String,RecognizePrintedTextOptionalParameter)
  id: recognizePrintedTextWithServiceResponseAsync(boolean,String,RecognizePrintedTextOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: recognizePrintedTextWithServiceResponseAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  nameWithType: ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1944
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<OcrResult>> recognizePrintedTextWithServiceResponseAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
    parameters:
    - id: detectOrientation
      type: 4fc6e284
      description: <p>Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down). </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: recognizePrintedTextOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResulte7daa122
      description: <p>the observable to the OcrResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeText(String,TextRecognitionMode)
  id: recognizeText(String,TextRecognitionMode)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: recognizeText(String url, TextRecognitionMode mode)
  nameWithType: ComputerVisionImpl.recognizeText(String url, TextRecognitionMode mode)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeText(String url, TextRecognitionMode mode)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeText*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1325
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>Recognize Text operation. When you use the Recognize Text interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</p>\r\n<p></p>"
  syntax:
    content: public void recognizeText(String url, TextRecognitionMode mode)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: mode
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionMode
      description: "<p>Type of text to recognize. Possible values include: 'Handwritten', 'Printed' </p>"
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizeText(String,TextRecognitionMode)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextAsync(String,TextRecognitionMode)
  id: recognizeTextAsync(String,TextRecognitionMode)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: recognizeTextAsync(String url, TextRecognitionMode mode)
  nameWithType: ComputerVisionImpl.recognizeTextAsync(String url, TextRecognitionMode mode)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextAsync(String url, TextRecognitionMode mode)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1350
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>Recognize Text operation. When you use the Recognize Text interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> recognizeTextAsync(String url, TextRecognitionMode mode)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: mode
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionMode
      description: "<p>Type of text to recognize. Possible values include: 'Handwritten', 'Printed' </p>"
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizeTextAsync(String,TextRecognitionMode)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextAsync(String,TextRecognitionMode,final ServiceCallback<Void>)
  id: recognizeTextAsync(String,TextRecognitionMode,final ServiceCallback<Void>)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: recognizeTextAsync(String url, TextRecognitionMode mode, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputerVisionImpl.recognizeTextAsync(String url, TextRecognitionMode mode, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextAsync(String url, TextRecognitionMode mode, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1338
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>Recognize Text operation. When you use the Recognize Text interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> recognizeTextAsync(String url, TextRecognitionMode mode, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: mode
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionMode
      description: "<p>Type of text to recognize. Possible values include: 'Handwritten', 'Printed' </p>"
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextInStream(byte [],TextRecognitionMode)
  id: recognizeTextInStream(byte [],TextRecognitionMode)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: recognizeTextInStream(byte[] image, TextRecognitionMode mode)
  nameWithType: ComputerVisionImpl.recognizeTextInStream(byte[] image, TextRecognitionMode mode)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextInStream(byte[] image, TextRecognitionMode mode)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 169
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>Recognize Text operation. When you use the Recognize Text interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</p>\r\n<p></p>"
  syntax:
    content: public void recognizeTextInStream(byte[] image, TextRecognitionMode mode)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: mode
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionMode
      description: "<p>Type of text to recognize. Possible values include: 'Handwritten', 'Printed' </p>"
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizeTextInStream(byte [],TextRecognitionMode)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextInStreamAsync(byte [],TextRecognitionMode)
  id: recognizeTextInStreamAsync(byte [],TextRecognitionMode)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: recognizeTextInStreamAsync(byte[] image, TextRecognitionMode mode)
  nameWithType: ComputerVisionImpl.recognizeTextInStreamAsync(byte[] image, TextRecognitionMode mode)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextInStreamAsync(byte[] image, TextRecognitionMode mode)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 194
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>Recognize Text operation. When you use the Recognize Text interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> recognizeTextInStreamAsync(byte[] image, TextRecognitionMode mode)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: mode
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionMode
      description: "<p>Type of text to recognize. Possible values include: 'Handwritten', 'Printed' </p>"
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizeTextInStreamAsync(byte [],TextRecognitionMode)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextInStreamAsync(byte [],TextRecognitionMode,final ServiceCallback<Void>)
  id: recognizeTextInStreamAsync(byte [],TextRecognitionMode,final ServiceCallback<Void>)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: recognizeTextInStreamAsync(byte[] image, TextRecognitionMode mode, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputerVisionImpl.recognizeTextInStreamAsync(byte[] image, TextRecognitionMode mode, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextInStreamAsync(byte[] image, TextRecognitionMode mode, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 182
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>Recognize Text operation. When you use the Recognize Text interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> recognizeTextInStreamAsync(byte[] image, TextRecognitionMode mode, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: mode
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionMode
      description: "<p>Type of text to recognize. Possible values include: 'Handwritten', 'Printed' </p>"
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextInStreamWithServiceResponseAsync(byte [],TextRecognitionMode)
  id: recognizeTextInStreamWithServiceResponseAsync(byte [],TextRecognitionMode)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: recognizeTextInStreamWithServiceResponseAsync(byte[] image, TextRecognitionMode mode)
  nameWithType: ComputerVisionImpl.recognizeTextInStreamWithServiceResponseAsync(byte[] image, TextRecognitionMode mode)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextInStreamWithServiceResponseAsync(byte[] image, TextRecognitionMode mode)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextInStreamWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 211
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>Recognize Text operation. When you use the Recognize Text interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, RecognizeTextInStreamHeaders>> recognizeTextInStreamWithServiceResponseAsync(byte[] image, TextRecognitionMode mode)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: mode
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionMode
      description: "<p>Type of text to recognize. Possible values include: 'Handwritten', 'Printed' </p>"
    return:
      type: 6738ce59com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizeTextInStreamHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextWithServiceResponseAsync(String,TextRecognitionMode)
  id: recognizeTextWithServiceResponseAsync(String,TextRecognitionMode)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: recognizeTextWithServiceResponseAsync(String url, TextRecognitionMode mode)
  nameWithType: ComputerVisionImpl.recognizeTextWithServiceResponseAsync(String url, TextRecognitionMode mode)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextWithServiceResponseAsync(String url, TextRecognitionMode mode)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1367
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>Recognize Text operation. When you use the Recognize Text interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, RecognizeTextHeaders>> recognizeTextWithServiceResponseAsync(String url, TextRecognitionMode mode)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: mode
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionMode
      description: "<p>Type of text to recognize. Possible values include: 'Handwritten', 'Printed' </p>"
    return:
      type: 6738ce59com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizeTextHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImage()
  id: tagImage()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: tagImage()
  nameWithType: ComputerVisionImpl.tagImage()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImage()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImage*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1677
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'. All tags are in English.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionTagImageParameters tagImage()
    return:
      type: 8a918dfe
      description: <p>the first stage of the tagImage call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage()
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImage(String,TagImageOptionalParameter)
  id: tagImage(String,TagImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)
  nameWithType: ComputerVisionImpl.tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImage*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1583
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'. All tags are in English.</p>\r\n<p></p>"
  syntax:
    content: public TagResult tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: tagImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
      description: <p>the TagResult object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage(String,TagImageOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageAsync(String,TagImageOptionalParameter)
  id: tagImageAsync(String,TagImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
  nameWithType: ComputerVisionImpl.tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1608
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'. All tags are in English.</p>\r\n<p></p>"
  syntax:
    content: public Observable<TagResult> tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: tagImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResulta08ddfce
      description: <p>the observable to the TagResult object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageAsync(String,TagImageOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageAsync(String,TagImageOptionalParameter,final ServiceCallback<TagResult>)
  id: tagImageAsync(String,TagImageOptionalParameter,final ServiceCallback<TagResult>)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter, final ServiceCallback<TagResult> serviceCallback)
  nameWithType: ComputerVisionImpl.tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter, final ServiceCallback<TagResult> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter, final ServiceCallback<TagResult> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1596
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'. All tags are in English.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<TagResult> tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter, final ServiceCallback<TagResult> serviceCallback)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: tagImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.computervision.models.TagResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStream()
  id: tagImageInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: tagImageInStream()
  nameWithType: ComputerVisionImpl.tagImageInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStream()
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 518
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'. All tags are in English.</p>\r\n<p></p>"
  syntax:
    content: public ComputerVisionTagImageInStreamParameters tagImageInStream()
    return:
      type: 7c1f99e3
      description: <p>the first stage of the tagImageInStream call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStream()
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStream(byte [],TagImageInStreamOptionalParameter)
  id: tagImageInStream(byte [],TagImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: tagImageInStream(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.tagImageInStream(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStream(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStream*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 425
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'. All tags are in English.</p>\r\n<p></p>"
  syntax:
    content: public TagResult tagImageInStream(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: tagImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
      description: <p>the TagResult object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStream(byte [],TagImageInStreamOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 16da869d
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamAsync(byte [],TagImageInStreamOptionalParameter)
  id: tagImageInStreamAsync(byte [],TagImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 450
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'. All tags are in English.</p>\r\n<p></p>"
  syntax:
    content: public Observable<TagResult> tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: tagImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResulta08ddfce
      description: <p>the observable to the TagResult object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStreamAsync(byte [],TagImageInStreamOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamAsync(byte [],TagImageInStreamOptionalParameter,final ServiceCallback<TagResult>)
  id: tagImageInStreamAsync(byte [],TagImageInStreamOptionalParameter,final ServiceCallback<TagResult>)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter, final ServiceCallback<TagResult> serviceCallback)
  nameWithType: ComputerVisionImpl.tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter, final ServiceCallback<TagResult> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter, final ServiceCallback<TagResult> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 438
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'. All tags are in English.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<TagResult> tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter, final ServiceCallback<TagResult> serviceCallback)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: tagImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.computervision.models.TagResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync(byte [],String)
  id: tagImageInStreamWithServiceResponseAsync(byte [],String)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: tagImageInStreamWithServiceResponseAsync(byte[] image, String language)
  nameWithType: ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync(byte[] image, String language)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync(byte[] image, String language)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 487
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'. All tags are in English.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<TagResult>> tagImageInStreamWithServiceResponseAsync(byte[] image, String language)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: language
      type: "26831127"
      description: "<p>The desired language for output generation. If this parameter is not specified, the default value is &amp;quot;en&amp;quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese. Possible values include: 'en', 'es', 'ja', 'pt', 'zh' </p>"
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResulte7daa122
      description: <p>the observable to the TagResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync(byte [],TagImageInStreamOptionalParameter)
  id: tagImageInStreamWithServiceResponseAsync(byte [],TagImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: tagImageInStreamWithServiceResponseAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  nameWithType: ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 467
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'. All tags are in English.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<TagResult>> tagImageInStreamWithServiceResponseAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: tagImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResulte7daa122
      description: <p>the observable to the TagResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync(String,String)
  id: tagImageWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: tagImageWithServiceResponseAsync(String url, String language)
  nameWithType: ComputerVisionImpl.tagImageWithServiceResponseAsync(String url, String language)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync(String url, String language)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1645
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'. All tags are in English.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<TagResult>> tagImageWithServiceResponseAsync(String url, String language)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: language
      type: "26831127"
      description: "<p>The desired language for output generation. If this parameter is not specified, the default value is &amp;quot;en&amp;quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese. Possible values include: 'en', 'es', 'ja', 'pt', 'zh' </p>"
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResulte7daa122
      description: <p>the observable to the TagResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync(String,TagImageOptionalParameter)
  id: tagImageWithServiceResponseAsync(String,TagImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.yml
  langs:
  - java
  name: tagImageWithServiceResponseAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
  nameWithType: ComputerVisionImpl.tagImageWithServiceResponseAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/computervision/src/main/java/com/microsoft/azure/cognitiveservices/vision/computervision/implementation/ComputerVisionImpl.java
    startLine: 1625
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  summary: "<p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'. All tags are in English.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<TagResult>> tagImageWithServiceResponseAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image </p>
    - id: tagImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResulte7daa122
      description: <p>the observable to the TagResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
references:
- uid: 964879b9
  spec.java:
  - name: Retrofit
    fullName: Retrofit
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionImpl*
  name: ComputerVisionImpl
  nameWithType: ComputerVisionImpl.ComputerVisionImpl
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionImpl
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: 16da869d
  spec.java:
  - name: ComputerVisionErrorException
    fullName: ComputerVisionErrorException
- uid: 9b2a4515
  spec.java:
  - name: RuntimeException
    fullName: RuntimeException
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextInStream*
  name: recognizeTextInStream
  nameWithType: ComputerVisionImpl.recognizeTextInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: 1c186eb5
  spec.java:
  - name: final ServiceCallback<Void>
    fullName: final ServiceCallback<Void>
- uid: aa81d378
  spec.java:
  - name: ServiceFuture<Void>
    fullName: ServiceFuture<Void>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextInStreamAsync*
  name: recognizeTextInStreamAsync
  nameWithType: ComputerVisionImpl.recognizeTextInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: dcd884b2
  spec.java:
  - name: Observable<Void>
    fullName: Observable<Void>
- uid: 6738ce59com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizeTextInStreamHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizeTextInStreamHeaders
    name: RecognizeTextInStreamHeaders
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizeTextInStreamHeaders
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizeTextInStreamHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextInStreamWithServiceResponseAsync*
  name: recognizeTextInStreamWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.recognizeTextInStreamWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextInStreamWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStream*
  name: analyzeImageByDomainInStream
  nameWithType: ComputerVisionImpl.analyzeImageByDomainInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResultsa08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
    name: DomainModelResults
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResultsa08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
    name: DomainModelResults
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync*
  name: analyzeImageByDomainInStreamAsync
  nameWithType: ComputerVisionImpl.analyzeImageByDomainInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResultsa08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
    name: DomainModelResults
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResultse7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
    name: DomainModelResults
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync*
  name: analyzeImageByDomainInStreamWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: 24297c65
  spec.java:
  - name: ComputerVisionAnalyzeImageByDomainInStreamParameters
    fullName: ComputerVisionAnalyzeImageByDomainInStreamParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStream*
  name: tagImageInStream
  nameWithType: ComputerVisionImpl.tagImageInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.vision.computervision.models.TagResulta08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
    name: TagResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResulta08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
    name: TagResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamAsync*
  name: tagImageInStreamAsync
  nameWithType: ComputerVisionImpl.tagImageInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
    name: TagResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResulte7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
    name: TagResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync*
  name: tagImageInStreamWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageInStreamWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: 7c1f99e3
  spec.java:
  - name: ComputerVisionTagImageInStreamParameters
    fullName: ComputerVisionTagImageInStreamParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStream*
  name: describeImageInStream
  nameWithType: ComputerVisionImpl.describeImageInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescriptiona08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
    name: ImageDescription
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescriptiona08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
    name: ImageDescription
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamAsync*
  name: describeImageInStreamAsync
  nameWithType: ComputerVisionImpl.describeImageInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescriptiona08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
    name: ImageDescription
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescriptione7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
    name: ImageDescription
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync*
  name: describeImageInStreamWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageInStreamWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: f9e2aa7f
  spec.java:
  - name: ComputerVisionDescribeImageInStreamParameters
    fullName: ComputerVisionDescribeImageInStreamParameters
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStream*
  name: recognizePrintedTextInStream
  nameWithType: ComputerVisionImpl.recognizePrintedTextInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResulta08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
    name: OcrResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResulta08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
    name: OcrResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamAsync*
  name: recognizePrintedTextInStreamAsync
  nameWithType: ComputerVisionImpl.recognizePrintedTextInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
    name: OcrResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResulte7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
    name: OcrResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync*
  name: recognizePrintedTextInStreamWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextInStreamWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: d117c8a8
  spec.java:
  - name: ComputerVisionRecognizePrintedTextInStreamParameters
    fullName: ComputerVisionRecognizePrintedTextInStreamParameters
- uid: dc385fd4
  spec.java:
  - name: CloudException
    fullName: CloudException
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: 76fcb9b7
  spec.java:
  - name: InputStream
    fullName: InputStream
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStream*
  name: generateThumbnailInStream
  nameWithType: ComputerVisionImpl.generateThumbnailInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: 0377aee2
  spec.java:
  - name: final ServiceCallback<InputStream>
    fullName: final ServiceCallback<InputStream>
- uid: 8601070c
  spec.java:
  - name: ServiceFuture<InputStream>
    fullName: ServiceFuture<InputStream>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamAsync*
  name: generateThumbnailInStreamAsync
  nameWithType: ComputerVisionImpl.generateThumbnailInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: 3ab19265
  spec.java:
  - name: Observable<InputStream>
    fullName: Observable<InputStream>
- uid: b4669ca9
  spec.java:
  - name: Observable<ServiceResponse<InputStream>>
    fullName: Observable<ServiceResponse<InputStream>>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync*
  name: generateThumbnailInStreamWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailInStreamWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: a3a6a20a
  spec.java:
  - name: ComputerVisionGenerateThumbnailInStreamParameters
    fullName: ComputerVisionGenerateThumbnailInStreamParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStream*
  name: analyzeImageInStream
  nameWithType: ComputerVisionImpl.analyzeImageInStream
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStream
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysisa08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
    name: ImageAnalysis
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysisa08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
    name: ImageAnalysis
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamAsync*
  name: analyzeImageInStreamAsync
  nameWithType: ComputerVisionImpl.analyzeImageInStreamAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysisa08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
    name: ImageAnalysis
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysise7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
    name: ImageAnalysis
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync*
  name: analyzeImageInStreamWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageInStreamWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: 5618da2dcom.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypesa08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes
    name: VisualFeatureTypes
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes.yml
  - name: '>'
    fullName: '>'
- uid: 68990fad
  spec.java:
  - name: ComputerVisionAnalyzeImageInStreamParameters
    fullName: ComputerVisionAnalyzeImageInStreamParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getTextOperationResult*
  name: getTextOperationResult
  nameWithType: ComputerVisionImpl.getTextOperationResult
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getTextOperationResult
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResulta08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResult
    name: TextOperationResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResult.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResulta08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResult
    name: TextOperationResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResult.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getTextOperationResultAsync*
  name: getTextOperationResultAsync
  nameWithType: ComputerVisionImpl.getTextOperationResultAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getTextOperationResultAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResult
    name: TextOperationResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResult.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResulte7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResult
    name: TextOperationResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResult.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getTextOperationResultWithServiceResponseAsync*
  name: getTextOperationResultWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.getTextOperationResultWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.getTextOperationResultWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeText*
  name: recognizeText
  nameWithType: ComputerVisionImpl.recognizeText
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeText
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextAsync*
  name: recognizeTextAsync
  nameWithType: ComputerVisionImpl.recognizeTextAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: 6738ce59com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizeTextHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizeTextHeaders
    name: RecognizeTextHeaders
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizeTextHeaders
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizeTextHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextWithServiceResponseAsync*
  name: recognizeTextWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.recognizeTextWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizeTextWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomain*
  name: analyzeImageByDomain
  nameWithType: ComputerVisionImpl.analyzeImageByDomain
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomain
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainAsync*
  name: analyzeImageByDomainAsync
  nameWithType: ComputerVisionImpl.analyzeImageByDomainAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync*
  name: analyzeImageByDomainWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: af888159
  spec.java:
  - name: ComputerVisionAnalyzeImageByDomainParameters
    fullName: ComputerVisionAnalyzeImageByDomainParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImage*
  name: tagImage
  nameWithType: ComputerVisionImpl.tagImage
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImage
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageAsync*
  name: tagImageAsync
  nameWithType: ComputerVisionImpl.tagImageAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync*
  name: tagImageWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.tagImageWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.tagImageWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: 8a918dfe
  spec.java:
  - name: ComputerVisionTagImageParameters
    fullName: ComputerVisionTagImageParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImage*
  name: describeImage
  nameWithType: ComputerVisionImpl.describeImage
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImage
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageAsync*
  name: describeImageAsync
  nameWithType: ComputerVisionImpl.describeImageAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageWithServiceResponseAsync*
  name: describeImageWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.describeImageWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.describeImageWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: d4e50ef6
  spec.java:
  - name: ComputerVisionDescribeImageParameters
    fullName: ComputerVisionDescribeImageParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedText*
  name: recognizePrintedText
  nameWithType: ComputerVisionImpl.recognizePrintedText
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedText
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextAsync*
  name: recognizePrintedTextAsync
  nameWithType: ComputerVisionImpl.recognizePrintedTextAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync*
  name: recognizePrintedTextWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.recognizePrintedTextWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: 940acc54
  spec.java:
  - name: ComputerVisionRecognizePrintedTextParameters
    fullName: ComputerVisionRecognizePrintedTextParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnail*
  name: generateThumbnail
  nameWithType: ComputerVisionImpl.generateThumbnail
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnail
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailAsync*
  name: generateThumbnailAsync
  nameWithType: ComputerVisionImpl.generateThumbnailAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailWithServiceResponseAsync*
  name: generateThumbnailWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.generateThumbnailWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.generateThumbnailWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: b03edcec
  spec.java:
  - name: ComputerVisionGenerateThumbnailParameters
    fullName: ComputerVisionGenerateThumbnailParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage*
  name: analyzeImage
  nameWithType: ComputerVisionImpl.analyzeImage
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageAsync*
  name: analyzeImageAsync
  nameWithType: ComputerVisionImpl.analyzeImageAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync*
  name: analyzeImageWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.analyzeImageWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: 5618da2dcom.microsoft.azure.cognitiveservices.vision.computervision.models.Detailsa08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.Details
    name: Details
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.Details
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.Details.yml
  - name: '>'
    fullName: '>'
- uid: fd9191c7
  spec.java:
  - name: ComputerVisionAnalyzeImageParameters
    fullName: ComputerVisionAnalyzeImageParameters
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModels*
  name: listModels
  nameWithType: ComputerVisionImpl.listModels
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModels
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResulta08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
    name: ListModelsResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResulta08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
    name: ListModelsResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsAsync*
  name: listModelsAsync
  nameWithType: ComputerVisionImpl.listModelsAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
    name: ListModelsResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResulte7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
    name: ListModelsResult
    fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
    href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsWithServiceResponseAsync*
  name: listModelsWithServiceResponseAsync
  nameWithType: ComputerVisionImpl.listModelsWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.listModelsWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  parent: com.microsoft.azure.cognitiveservices.vision.computervision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: ComputerVision
  nameWithType: ComputerVision
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  type: Interface
  summary: <p>An instance of this class provides access to all the operations defined in ComputerVision. </p>
  syntax:
    content: public interface ComputerVision
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionClientImpl
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.implementation
  href: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionClientImpl.yml
  name: ComputerVisionClientImpl
  nameWithType: ComputerVisionClientImpl
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionClientImpl
  type: Class
  summary: <p>Initializes a new instance of the ComputerVisionClientImpl class. </p>
  syntax:
    content: public class ComputerVisionClientImpl implements ComputerVisionClient
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizeTextInStream(byte [],TextRecognitionMode)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: recognizeTextInStream(byte[] image, TextRecognitionMode mode)
  nameWithType: ComputerVision.recognizeTextInStream(byte[] image, TextRecognitionMode mode)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizeTextInStream(byte[] image, TextRecognitionMode mode)
  type: Method
  summary: >-
    <p>Recognize Text operation. When you use the Recognize Text interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</p>

    <p></p>
  syntax:
    content: public void recognizeTextInStream(byte[] image, TextRecognitionMode mode)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: mode
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionMode
      description: "<p>Type of text to recognize. Possible values include: 'Handwritten', 'Printed'. </p>"
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionMode
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionMode.yml
  name: TextRecognitionMode
  nameWithType: TextRecognitionMode
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionMode
  type: Enum
  summary: <p>Defines values for TextRecognitionMode. </p>
  syntax:
    content: public enum TextRecognitionMode
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizeTextInStreamAsync(byte [],TextRecognitionMode)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: recognizeTextInStreamAsync(byte[] image, TextRecognitionMode mode)
  nameWithType: ComputerVision.recognizeTextInStreamAsync(byte[] image, TextRecognitionMode mode)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizeTextInStreamAsync(byte[] image, TextRecognitionMode mode)
  type: Method
  summary: >-
    <p>Recognize Text operation. When you use the Recognize Text interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</p>

    <p></p>
  syntax:
    content: public Observable<Void> recognizeTextInStreamAsync(byte[] image, TextRecognitionMode mode)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: mode
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionMode
      description: "<p>Type of text to recognize. Possible values include: 'Handwritten', 'Printed'. </p>"
    return:
      type: dcd884b2
      description: <p>a representation of the deferred computation of this call if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizeTextInStreamHeaders
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizeTextInStreamHeaders.yml
  name: RecognizeTextInStreamHeaders
  nameWithType: RecognizeTextInStreamHeaders
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizeTextInStreamHeaders
  type: Class
  summary: <p>Defines headers for RecognizeTextInStream operation. </p>
  syntax:
    content: public class RecognizeTextInStreamHeaders
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults.yml
  name: DomainModelResults
  nameWithType: DomainModelResults
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
  type: Class
  summary: <p>Result of image analysis using a specific domain model including additional metadata. </p>
  syntax:
    content: public class DomainModelResults
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStream(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: analyzeImageByDomainInStream(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  nameWithType: ComputerVision.analyzeImageByDomainInStream(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStream(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  type: Method
  summary: >-
    <p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API only provides a single domain-specific model: celebrities. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>

    <p></p>
  syntax:
    content: public DomainModelResults analyzeImageByDomainInStream(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
    parameters:
    - id: model
      type: "26831127"
      description: <p>The domain-specific content to recognize. </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: analyzeImageByDomainInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
      description: <p>the DomainModelResults object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter.yml
  name: AnalyzeImageByDomainInStreamOptionalParameter
  nameWithType: AnalyzeImageByDomainInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter
  type: Class
  summary: <p>The AnalyzeImageByDomainInStreamOptionalParameter model. </p>
  syntax:
    content: public class AnalyzeImageByDomainInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStreamAsync(String,byte [],AnalyzeImageByDomainInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  nameWithType: ComputerVision.analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
  type: Method
  summary: >-
    <p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API only provides a single domain-specific model: celebrities. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>

    <p></p>
  syntax:
    content: public Observable<DomainModelResults> analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)
    parameters:
    - id: model
      type: "26831127"
      description: <p>The domain-specific content to recognize. </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: analyzeImageByDomainInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResultsa08ddfce
      description: <p>the observable to the DomainModelResults object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: analyzeImageByDomainInStream()
  nameWithType: ComputerVision.analyzeImageByDomainInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStream()
  type: Method
  summary: >-
    <p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API only provides a single domain-specific model: celebrities. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>

    <p></p>
  syntax:
    content: public ComputerVisionAnalyzeImageByDomainInStreamDefinitionStages.WithModel analyzeImageByDomainInStream()
    return:
      type: 3609dfc8
      description: <p>the first stage of the analyzeImageByDomainInStream call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult.yml
  name: TagResult
  nameWithType: TagResult
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
  type: Class
  summary: <p>The results of a image tag operation, including any tags and image metadata. </p>
  syntax:
    content: public class TagResult
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStream(byte [],TagImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: tagImageInStream(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  nameWithType: ComputerVision.tagImageInStream(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStream(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  type: Method
  summary: >-
    <p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'. All tags are in English.</p>

    <p></p>
  syntax:
    content: public TagResult tagImageInStream(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: tagImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
      description: <p>the TagResult object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter.yml
  name: TagImageInStreamOptionalParameter
  nameWithType: TagImageInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter
  type: Class
  summary: <p>The TagImageInStreamOptionalParameter model. </p>
  syntax:
    content: public class TagImageInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStreamAsync(byte [],TagImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  nameWithType: ComputerVision.tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
  type: Method
  summary: >-
    <p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'. All tags are in English.</p>

    <p></p>
  syntax:
    content: public Observable<TagResult> tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: tagImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResulta08ddfce
      description: <p>the observable to the TagResult object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: tagImageInStream()
  nameWithType: ComputerVision.tagImageInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStream()
  type: Method
  summary: >-
    <p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'. All tags are in English.</p>

    <p></p>
  syntax:
    content: public ComputerVisionTagImageInStreamDefinitionStages.WithImage tagImageInStream()
    return:
      type: 4a4d316f
      description: <p>the first stage of the tagImageInStream call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription.yml
  name: ImageDescription
  nameWithType: ImageDescription
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
  type: Class
  summary: <p>A collection of content tags, along with a list of captions sorted by confidence level, and image metadata. </p>
  syntax:
    content: public class ImageDescription
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStream(byte [],DescribeImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: describeImageInStream(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  nameWithType: ComputerVision.describeImageInStream(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStream(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  type: Method
  summary: >-
    <p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. All descriptions are in English. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>

    <p></p>
  syntax:
    content: public ImageDescription describeImageInStream(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: describeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
      description: <p>the ImageDescription object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter.yml
  name: DescribeImageInStreamOptionalParameter
  nameWithType: DescribeImageInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter
  type: Class
  summary: <p>The DescribeImageInStreamOptionalParameter model. </p>
  syntax:
    content: public class DescribeImageInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStreamAsync(byte [],DescribeImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  nameWithType: ComputerVision.describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
  type: Method
  summary: >-
    <p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. All descriptions are in English. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>

    <p></p>
  syntax:
    content: public Observable<ImageDescription> describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: describeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescriptiona08ddfce
      description: <p>the observable to the ImageDescription object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: describeImageInStream()
  nameWithType: ComputerVision.describeImageInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStream()
  type: Method
  summary: >-
    <p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. All descriptions are in English. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>

    <p></p>
  syntax:
    content: public ComputerVisionDescribeImageInStreamDefinitionStages.WithImage describeImageInStream()
    return:
      type: "70169043"
      description: <p>the first stage of the describeImageInStream call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult.yml
  name: OcrResult
  nameWithType: OcrResult
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
  type: Class
  summary: <p>The OcrResult model. </p>
  syntax:
    content: public class OcrResult
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStream(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: recognizePrintedTextInStream(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  nameWithType: ComputerVision.recognizePrintedTextInStream(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStream(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  type: Method
  summary: >-
    <p>Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>

    <p></p>
  syntax:
    content: public OcrResult recognizePrintedTextInStream(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
    parameters:
    - id: detectOrientation
      type: 4fc6e284
      description: <p>Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down). </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: recognizePrintedTextInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
      description: <p>the OcrResult object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter.yml
  name: RecognizePrintedTextInStreamOptionalParameter
  nameWithType: RecognizePrintedTextInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter
  type: Class
  summary: <p>The RecognizePrintedTextInStreamOptionalParameter model. </p>
  syntax:
    content: public class RecognizePrintedTextInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStreamAsync(boolean,byte [],RecognizePrintedTextInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  nameWithType: ComputerVision.recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
  type: Method
  summary: >-
    <p>Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>

    <p></p>
  syntax:
    content: public Observable<OcrResult> recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)
    parameters:
    - id: detectOrientation
      type: 4fc6e284
      description: <p>Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down). </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: recognizePrintedTextInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResulta08ddfce
      description: <p>the observable to the OcrResult object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrLanguages
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrLanguages.yml
  name: OcrLanguages
  nameWithType: OcrLanguages
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrLanguages
  type: Enum
  summary: <p>Defines values for OcrLanguages. </p>
  syntax:
    content: public enum OcrLanguages
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: recognizePrintedTextInStream()
  nameWithType: ComputerVision.recognizePrintedTextInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStream()
  type: Method
  summary: >-
    <p>Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>

    <p></p>
  syntax:
    content: public ComputerVisionRecognizePrintedTextInStreamDefinitionStages.WithDetectOrientation recognizePrintedTextInStream()
    return:
      type: 02bbc546
      description: <p>the first stage of the recognizePrintedTextInStream call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStream(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: generateThumbnailInStream(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  nameWithType: ComputerVision.generateThumbnailInStream(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStream(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  type: Method
  summary: >-
    <p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.</p>

    <p></p>
  syntax:
    content: public InputStream generateThumbnailInStream(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
    parameters:
    - id: width
      type: f75371fa
      description: <p>Width of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: height
      type: f75371fa
      description: <p>Height of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: generateThumbnailInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 76fcb9b7
      description: <p>the InputStream object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter.yml
  name: GenerateThumbnailInStreamOptionalParameter
  nameWithType: GenerateThumbnailInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter
  type: Class
  summary: <p>The GenerateThumbnailInStreamOptionalParameter model. </p>
  syntax:
    content: public class GenerateThumbnailInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStreamAsync(int,int,byte [],GenerateThumbnailInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  nameWithType: ComputerVision.generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
  type: Method
  summary: >-
    <p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.</p>

    <p></p>
  syntax:
    content: public Observable<InputStream> generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)
    parameters:
    - id: width
      type: f75371fa
      description: <p>Width of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: height
      type: f75371fa
      description: <p>Height of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: generateThumbnailInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 3ab19265
      description: <p>the observable to the InputStream object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: generateThumbnailInStream()
  nameWithType: ComputerVision.generateThumbnailInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStream()
  type: Method
  summary: >-
    <p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.</p>

    <p></p>
  syntax:
    content: public ComputerVisionGenerateThumbnailInStreamDefinitionStages.WithWidth generateThumbnailInStream()
    return:
      type: 012fc9a6
      description: <p>the first stage of the generateThumbnailInStream call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis.yml
  name: ImageAnalysis
  nameWithType: ImageAnalysis
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
  type: Class
  summary: <p>Result of AnalyzeImage operation. </p>
  syntax:
    content: public class ImageAnalysis
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStream(byte [],AnalyzeImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: analyzeImageInStream(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  nameWithType: ComputerVision.analyzeImageInStream(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStream(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  type: Method
  summary: >-
    <p>This operation extracts a rich set of visual features based on the image content.</p>

    <p></p>
  syntax:
    content: public ImageAnalysis analyzeImageInStream(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: analyzeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
      description: <p>the ImageAnalysis object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter.yml
  name: AnalyzeImageInStreamOptionalParameter
  nameWithType: AnalyzeImageInStreamOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter
  type: Class
  summary: <p>The AnalyzeImageInStreamOptionalParameter model. </p>
  syntax:
    content: public class AnalyzeImageInStreamOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStreamAsync(byte [],AnalyzeImageInStreamOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  nameWithType: ComputerVision.analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
  type: Method
  summary: >-
    <p>This operation extracts a rich set of visual features based on the image content.</p>

    <p></p>
  syntax:
    content: public Observable<ImageAnalysis> analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)
    parameters:
    - id: image
      type: ccd9418d
      description: <p>An image stream. </p>
    - id: analyzeImageInStreamOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysisa08ddfce
      description: <p>the observable to the ImageAnalysis object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes.yml
  name: VisualFeatureTypes
  nameWithType: VisualFeatureTypes
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes
  type: Enum
  summary: <p>Defines values for VisualFeatureTypes. </p>
  syntax:
    content: public enum VisualFeatureTypes
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStream()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: analyzeImageInStream()
  nameWithType: ComputerVision.analyzeImageInStream()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStream()
  type: Method
  summary: >-
    <p>This operation extracts a rich set of visual features based on the image content.</p>

    <p></p>
  syntax:
    content: public ComputerVisionAnalyzeImageInStreamDefinitionStages.WithImage analyzeImageInStream()
    return:
      type: 9ad9f102
      description: <p>the first stage of the analyzeImageInStream call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResult
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResult.yml
  name: TextOperationResult
  nameWithType: TextOperationResult
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResult
  type: Class
  summary: <p>The TextOperationResult model. </p>
  syntax:
    content: public class TextOperationResult
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getTextOperationResult(String)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: getTextOperationResult(String operationId)
  nameWithType: ComputerVision.getTextOperationResult(String operationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getTextOperationResult(String operationId)
  type: Method
  summary: >-
    <p>This interface is used for getting text operation result. The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</p>

    <p></p>
  syntax:
    content: public TextOperationResult getTextOperationResult(String operationId)
    parameters:
    - id: operationId
      type: "26831127"
      description: <p>Id of the text operation returned in the response of the 'Recognize Text'. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResult
      description: <p>the TextOperationResult object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getTextOperationResultAsync(String)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: getTextOperationResultAsync(String operationId)
  nameWithType: ComputerVision.getTextOperationResultAsync(String operationId)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getTextOperationResultAsync(String operationId)
  type: Method
  summary: >-
    <p>This interface is used for getting text operation result. The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</p>

    <p></p>
  syntax:
    content: public Observable<TextOperationResult> getTextOperationResultAsync(String operationId)
    parameters:
    - id: operationId
      type: "26831127"
      description: <p>Id of the text operation returned in the response of the 'Recognize Text'. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.TextOperationResulta08ddfce
      description: <p>the observable to the TextOperationResult object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizeText(String,TextRecognitionMode)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: recognizeText(String url, TextRecognitionMode mode)
  nameWithType: ComputerVision.recognizeText(String url, TextRecognitionMode mode)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizeText(String url, TextRecognitionMode mode)
  type: Method
  summary: >-
    <p>Recognize Text operation. When you use the Recognize Text interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</p>

    <p></p>
  syntax:
    content: public void recognizeText(String url, TextRecognitionMode mode)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: mode
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionMode
      description: "<p>Type of text to recognize. Possible values include: 'Handwritten', 'Printed'. </p>"
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizeTextAsync(String,TextRecognitionMode)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: recognizeTextAsync(String url, TextRecognitionMode mode)
  nameWithType: ComputerVision.recognizeTextAsync(String url, TextRecognitionMode mode)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizeTextAsync(String url, TextRecognitionMode mode)
  type: Method
  summary: >-
    <p>Recognize Text operation. When you use the Recognize Text interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</p>

    <p></p>
  syntax:
    content: public Observable<Void> recognizeTextAsync(String url, TextRecognitionMode mode)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: mode
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionMode
      description: "<p>Type of text to recognize. Possible values include: 'Handwritten', 'Printed'. </p>"
    return:
      type: dcd884b2
      description: <p>a representation of the deferred computation of this call if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizeTextHeaders
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizeTextHeaders.yml
  name: RecognizeTextHeaders
  nameWithType: RecognizeTextHeaders
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizeTextHeaders
  type: Class
  summary: <p>Defines headers for RecognizeText operation. </p>
  syntax:
    content: public class RecognizeTextHeaders
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain(String,String,AnalyzeImageByDomainOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  nameWithType: ComputerVision.analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  type: Method
  summary: >-
    <p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API only provides a single domain-specific model: celebrities. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>

    <p></p>
  syntax:
    content: public DomainModelResults analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
    parameters:
    - id: model
      type: "26831127"
      description: <p>The domain-specific content to recognize. </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: analyzeImageByDomainOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults
      description: <p>the DomainModelResults object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter.yml
  name: AnalyzeImageByDomainOptionalParameter
  nameWithType: AnalyzeImageByDomainOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter
  type: Class
  summary: <p>The AnalyzeImageByDomainOptionalParameter model. </p>
  syntax:
    content: public class AnalyzeImageByDomainOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainAsync(String,String,AnalyzeImageByDomainOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  nameWithType: ComputerVision.analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
  type: Method
  summary: >-
    <p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API only provides a single domain-specific model: celebrities. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>

    <p></p>
  syntax:
    content: public Observable<DomainModelResults> analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)
    parameters:
    - id: model
      type: "26831127"
      description: <p>The domain-specific content to recognize. </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: analyzeImageByDomainOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResultsa08ddfce
      description: <p>the observable to the DomainModelResults object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: analyzeImageByDomain()
  nameWithType: ComputerVision.analyzeImageByDomain()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain()
  type: Method
  summary: >-
    <p>This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API only provides a single domain-specific model: celebrities. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>

    <p></p>
  syntax:
    content: public ComputerVisionAnalyzeImageByDomainDefinitionStages.WithModel analyzeImageByDomain()
    return:
      type: 45c47c42
      description: <p>the first stage of the analyzeImageByDomain call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage(String,TagImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)
  nameWithType: ComputerVision.tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)
  type: Method
  summary: >-
    <p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'. All tags are in English.</p>

    <p></p>
  syntax:
    content: public TagResult tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: tagImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult
      description: <p>the TagResult object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter.yml
  name: TagImageOptionalParameter
  nameWithType: TagImageOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter
  type: Class
  summary: <p>The TagImageOptionalParameter model. </p>
  syntax:
    content: public class TagImageOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageAsync(String,TagImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
  nameWithType: ComputerVision.tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
  type: Method
  summary: >-
    <p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'. All tags are in English.</p>

    <p></p>
  syntax:
    content: public Observable<TagResult> tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: tagImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResulta08ddfce
      description: <p>the observable to the TagResult object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: tagImage()
  nameWithType: ComputerVision.tagImage()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage()
  type: Method
  summary: >-
    <p>This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'. All tags are in English.</p>

    <p></p>
  syntax:
    content: public ComputerVisionTagImageDefinitionStages.WithUrl tagImage()
    return:
      type: a1018f3d
      description: <p>the first stage of the tagImage call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImage(String,DescribeImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: describeImage(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  nameWithType: ComputerVision.describeImage(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImage(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  type: Method
  summary: >-
    <p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. All descriptions are in English. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>

    <p></p>
  syntax:
    content: public ImageDescription describeImage(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: describeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription
      description: <p>the ImageDescription object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter.yml
  name: DescribeImageOptionalParameter
  nameWithType: DescribeImageOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter
  type: Class
  summary: <p>The DescribeImageOptionalParameter model. </p>
  syntax:
    content: public class DescribeImageOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageAsync(String,DescribeImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  nameWithType: ComputerVision.describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
  type: Method
  summary: >-
    <p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. All descriptions are in English. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>

    <p></p>
  syntax:
    content: public Observable<ImageDescription> describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: describeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescriptiona08ddfce
      description: <p>the observable to the ImageDescription object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImage()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: describeImage()
  nameWithType: ComputerVision.describeImage()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImage()
  type: Method
  summary: >-
    <p>This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. All descriptions are in English. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>

    <p></p>
  syntax:
    content: public ComputerVisionDescribeImageDefinitionStages.WithUrl describeImage()
    return:
      type: a37ccca7
      description: <p>the first stage of the describeImage call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedText(boolean,String,RecognizePrintedTextOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: recognizePrintedText(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  nameWithType: ComputerVision.recognizePrintedText(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedText(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  type: Method
  summary: >-
    <p>Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>

    <p></p>
  syntax:
    content: public OcrResult recognizePrintedText(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
    parameters:
    - id: detectOrientation
      type: 4fc6e284
      description: <p>Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down). </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: recognizePrintedTextOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult
      description: <p>the OcrResult object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter.yml
  name: RecognizePrintedTextOptionalParameter
  nameWithType: RecognizePrintedTextOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter
  type: Class
  summary: <p>The RecognizePrintedTextOptionalParameter model. </p>
  syntax:
    content: public class RecognizePrintedTextOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextAsync(boolean,String,RecognizePrintedTextOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  nameWithType: ComputerVision.recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
  type: Method
  summary: >-
    <p>Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>

    <p></p>
  syntax:
    content: public Observable<OcrResult> recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)
    parameters:
    - id: detectOrientation
      type: 4fc6e284
      description: <p>Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down). </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: recognizePrintedTextOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResulta08ddfce
      description: <p>the observable to the OcrResult object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedText()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: recognizePrintedText()
  nameWithType: ComputerVision.recognizePrintedText()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedText()
  type: Method
  summary: >-
    <p>Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</p>

    <p></p>
  syntax:
    content: public ComputerVisionRecognizePrintedTextDefinitionStages.WithDetectOrientation recognizePrintedText()
    return:
      type: f16201ec
      description: <p>the first stage of the recognizePrintedText call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnail(int,int,String,GenerateThumbnailOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: generateThumbnail(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  nameWithType: ComputerVision.generateThumbnail(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnail(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  type: Method
  summary: >-
    <p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.</p>

    <p></p>
  syntax:
    content: public InputStream generateThumbnail(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
    parameters:
    - id: width
      type: f75371fa
      description: <p>Width of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: height
      type: f75371fa
      description: <p>Height of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: generateThumbnailOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 76fcb9b7
      description: <p>the InputStream object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter.yml
  name: GenerateThumbnailOptionalParameter
  nameWithType: GenerateThumbnailOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter
  type: Class
  summary: <p>The GenerateThumbnailOptionalParameter model. </p>
  syntax:
    content: public class GenerateThumbnailOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailAsync(int,int,String,GenerateThumbnailOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  nameWithType: ComputerVision.generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
  type: Method
  summary: >-
    <p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.</p>

    <p></p>
  syntax:
    content: public Observable<InputStream> generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)
    parameters:
    - id: width
      type: f75371fa
      description: <p>Width of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: height
      type: f75371fa
      description: <p>Height of the thumbnail. It must be between 1 and 1024. Recommended minimum of 50. </p>
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: generateThumbnailOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: 3ab19265
      description: <p>the observable to the InputStream object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnail()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: generateThumbnail()
  nameWithType: ComputerVision.generateThumbnail()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnail()
  type: Method
  summary: >-
    <p>This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.</p>

    <p></p>
  syntax:
    content: public ComputerVisionGenerateThumbnailDefinitionStages.WithWidth generateThumbnail()
    return:
      type: ffe38203
      description: <p>the first stage of the generateThumbnail call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImage(String,AnalyzeImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  nameWithType: ComputerVision.analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  type: Method
  summary: >-
    <p>This operation extracts a rich set of visual features based on the image content. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response.</p>

    <p></p>
  syntax:
    content: public ImageAnalysis analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: analyzeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis
      description: <p>the ImageAnalysis object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter.yml
  name: AnalyzeImageOptionalParameter
  nameWithType: AnalyzeImageOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter
  type: Class
  summary: <p>The AnalyzeImageOptionalParameter model. </p>
  syntax:
    content: public class AnalyzeImageOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageAsync(String,AnalyzeImageOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  nameWithType: ComputerVision.analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
  type: Method
  summary: >-
    <p>This operation extracts a rich set of visual features based on the image content. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response.</p>

    <p></p>
  syntax:
    content: public Observable<ImageAnalysis> analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)
    parameters:
    - id: url
      type: "26831127"
      description: <p>Publicly reachable URL of an image. </p>
    - id: analyzeImageOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysisa08ddfce
      description: <p>the observable to the ImageAnalysis object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.Details
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.Details.yml
  name: Details
  nameWithType: Details
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.Details
  type: Enum
  summary: <p>Defines values for Details. </p>
  syntax:
    content: public enum Details
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImage()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: analyzeImage()
  nameWithType: ComputerVision.analyzeImage()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImage()
  type: Method
  summary: >-
    <p>This operation extracts a rich set of visual features based on the image content. Two input methods are supported <ndash></ndash> (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response.</p>

    <p></p>
  syntax:
    content: public ComputerVisionAnalyzeImageDefinitionStages.WithUrl analyzeImage()
    return:
      type: 8c7df68d
      description: <p>the first stage of the analyzeImage call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult.yml
  name: ListModelsResult
  nameWithType: ListModelsResult
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
  type: Class
  summary: <p>Result of the List Domain Models operation. </p>
  syntax:
    content: public class ListModelsResult
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModels()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: listModels()
  nameWithType: ComputerVision.listModels()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModels()
  type: Method
  summary: >-
    <p>This operation returns the list of domain-specific models that are supported by the Computer Vision API. Currently, the API only supports one domain-specific model: a celebrity recognizer. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>

    <p></p>
  syntax:
    content: public ListModelsResult listModels()
    return:
      type: com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult
      description: <p>the ListModelsResult object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModelsAsync()
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision
  href: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.yml
  name: listModelsAsync()
  nameWithType: ComputerVision.listModelsAsync()
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModelsAsync()
  type: Method
  summary: >-
    <p>This operation returns the list of domain-specific models that are supported by the Computer Vision API. Currently, the API only supports one domain-specific model: a celebrity recognizer. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong.</p>

    <p></p>
  syntax:
    content: public Observable<ListModelsResult> listModelsAsync()
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResulta08ddfce
      description: <p>the observable to the ListModelsResult object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.ComputerVisionErrorException
  parent: com.microsoft.azure.cognitiveservices.vision.computervision.models
  href: com.microsoft.azure.cognitiveservices.vision.computervision.models.ComputerVisionErrorException.yml
  name: ComputerVisionErrorException
  nameWithType: ComputerVisionErrorException
  fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.ComputerVisionErrorException
  type: Class
  summary: <p>Exception thrown for an invalid response with ComputerVisionError information. </p>
  syntax:
    content: public class ComputerVisionErrorException
