### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner
  id: _entities_inner
  parent: com.microsoft.azure.cognitiveservices.entitysearch.implementation
  children:
  - com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.EntitiesInner(Retrofit,EntitySearchAPIImpl)
  - com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.search(String)
  - com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.search(String,String,String,String,String,String,String,String,List<AnswerType>,List<ResponseFormat>,SafeSearch,String)
  - com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.searchAsync(String)
  - com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.searchAsync(String,final ServiceCallback<SearchResponseInner>)
  - com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.searchAsync(String,String,String,String,String,String,String,String,List<AnswerType>,List<ResponseFormat>,SafeSearch,String)
  - com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.searchAsync(String,String,String,String,String,String,String,String,List<AnswerType>,List<ResponseFormat>,SafeSearch,String,final ServiceCallback<SearchResponseInner>)
  - com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.searchWithServiceResponseAsync(String)
  - com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.searchWithServiceResponseAsync(String,String,String,String,String,String,String,String,List<AnswerType>,List<ResponseFormat>,SafeSearch,String)
  href: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.yml
  langs:
  - java
  name: EntitiesInner
  nameWithType: EntitiesInner
  fullName: com.microsoft.azure.cognitiveservices.entitysearch.implementation.EntitiesInner
  type: Class
  source:
    remote: &o0
      path: cognitiveservices/azure-entitysearch/src/main/java/com/microsoft/azure/cognitiveservices/entitysearch/implementation/EntitiesInner.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: cognitiveservices/azure-entitysearch/src/main/java/com/microsoft/azure/cognitiveservices/entitysearch/implementation/EntitiesInner.java
    startLine: 34
  package: com.microsoft.azure.cognitiveservices.entitysearch.implementation
  summary: <p>An instance of this class provides access to all the operations defined in <xref uid="com.microsoft.azure.cognitiveservices.entitysearch._entities" data-throw-if-not-resolved="false">Entities</xref>. </p>
  syntax: &o1
    content: public class EntitiesInner
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.EntitiesInner(Retrofit,EntitySearchAPIImpl)
  id: EntitiesInner(Retrofit,EntitySearchAPIImpl)
  parent: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner
  href: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.yml
  langs:
  - java
  name: EntitiesInner(Retrofit retrofit, EntitySearchAPIImpl client)
  nameWithType: EntitiesInner.EntitiesInner(Retrofit retrofit, EntitySearchAPIImpl client)
  fullName: com.microsoft.azure.cognitiveservices.entitysearch.implementation.EntitiesInner.EntitiesInner(Retrofit retrofit, EntitySearchAPIImpl client)
  overload: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.EntitiesInner*
  type: Constructor
  source:
    remote: *o0
    path: cognitiveservices/azure-entitysearch/src/main/java/com/microsoft/azure/cognitiveservices/entitysearch/implementation/EntitiesInner.java
    startLine: 46
  package: com.microsoft.azure.cognitiveservices.entitysearch.implementation
  summary: >-
    <p>Initializes an instance of <xref uid="com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner" data-throw-if-not-resolved="false">EntitiesInner</xref>.</p>

    <p></p>
  syntax:
    content: public EntitiesInner(Retrofit retrofit, EntitySearchAPIImpl client)
    parameters:
    - id: retrofit
      type: 964879b9
      description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    - id: client
      type: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entity_search_a_p_i_impl
      description: <p>the instance of the service client containing this operation class. </p>
- uid: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.search(String)
  id: search(String)
  parent: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner
  href: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.yml
  langs:
  - java
  name: search(String query)
  nameWithType: EntitiesInner.search(String query)
  fullName: SearchResponseInner com.microsoft.azure.cognitiveservices.entitysearch.implementation.EntitiesInner.search(String query)
  overload: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.search*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/azure-entitysearch/src/main/java/com/microsoft/azure/cognitiveservices/entitysearch/implementation/EntitiesInner.java
    startLine: 71
  package: com.microsoft.azure.cognitiveservices.entitysearch.implementation
  summary: >-
    <p>The Entity Search API lets you send a search query to Bing and get back search results that include entities and places. <xref uid="com.microsoft.azure.cognitiveservices.entitysearch._place" data-throw-if-not-resolved="false">Place</xref> results include restaurants, hotel, or other local businesses. For places, the query can specify the name of the local business or it can ask for a list (for example, restaurants near me). Entity results include persons, places, or things. <xref uid="com.microsoft.azure.cognitiveservices.entitysearch._place" data-throw-if-not-resolved="false">Place</xref> in this context is tourist attractions, states, countries, etc.</p>

    <p></p>
  syntax:
    content: public SearchResponseInner search(String query)
    parameters:
    - id: query
      type: "26831127"
      description: <p>The user's search term. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_inner
      description: <p>the <xref uid="com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_inner" data-throw-if-not-resolved="false">SearchResponseInner</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: com.microsoft.azure.cognitiveservices.entitysearch._error_response_exception
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.search(String,String,String,String,String,String,String,String,List<AnswerType>,List<ResponseFormat>,SafeSearch,String)
  id: search(String,String,String,String,String,String,String,String,List<AnswerType>,List<ResponseFormat>,SafeSearch,String)
  parent: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner
  href: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.yml
  langs:
  - java
  name: search(String query, String acceptLanguage, String pragma, String clientId, String clientIp, String location, String countryCode, String market, List<AnswerType> responseFilter, List<ResponseFormat> responseFormat, SafeSearch safeSearch, String setLang)
  nameWithType: EntitiesInner.search(String query, String acceptLanguage, String pragma, String clientId, String clientIp, String location, String countryCode, String market, List<AnswerType> responseFilter, List<ResponseFormat> responseFormat, SafeSearch safeSearch, String setLang)
  fullName: SearchResponseInner com.microsoft.azure.cognitiveservices.entitysearch.implementation.EntitiesInner.search(String query, String acceptLanguage, String pragma, String clientId, String clientIp, String location, String countryCode, String market, List<AnswerType> responseFilter, List<ResponseFormat> responseFormat, SafeSearch safeSearch, String setLang)
  overload: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.search*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/azure-entitysearch/src/main/java/com/microsoft/azure/cognitiveservices/entitysearch/implementation/EntitiesInner.java
    startLine: 162
  package: com.microsoft.azure.cognitiveservices.entitysearch.implementation
  summary: >-
    <p>The Entity Search API lets you send a search query to Bing and get back search results that include entities and places. <xref uid="com.microsoft.azure.cognitiveservices.entitysearch._place" data-throw-if-not-resolved="false">Place</xref> results include restaurants, hotel, or other local businesses. For places, the query can specify the name of the local business or it can ask for a list (for example, restaurants near me). Entity results include persons, places, or things. <xref uid="com.microsoft.azure.cognitiveservices.entitysearch._place" data-throw-if-not-resolved="false">Place</xref> in this context is tourist attractions, states, countries, etc.</p>

    <p></p>
  syntax:
    content: public SearchResponseInner search(String query, String acceptLanguage, String pragma, String clientId, String clientIp, String location, String countryCode, String market, List<AnswerType> responseFilter, List<ResponseFormat> responseFormat, SafeSearch safeSearch, String setLang)
    parameters:
    - id: query
      type: "26831127"
      description: <p>The user's search term. </p>
    - id: acceptLanguage
      type: "26831127"
      description: <p>A comma-delimited list of one or more languages to use for user interface strings. The list is in decreasing order of preference. For additional information, including expected format, see [RFC2616](<a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html</a>). This header and the setLang query parameter are mutually exclusive; do not specify both. If you set this header, you must also specify the cc query parameter. Bing will use the first supported language it finds from the list, and combine that language with the cc parameter value to determine the market to return results for. If the list does not include a supported language, Bing will find the closest language and market that supports the request, and may use an aggregated or default market for the results instead of a specified one. You should use this header and the cc query parameter only if you specify multiple languages; otherwise, you should use the mkt and setLang query parameters. A user interface string is a string that's used as a label in a user interface. There are very few user interface strings in the JSON response objects. Any links in the response objects to Bing.com properties will apply the specified language. </p>
    - id: pragma
      type: "26831127"
      description: '<p>By default, Bing returns cached content, if available. To prevent Bing from returning cached content, set the Pragma header to no-cache (for example, Pragma: no-cache). </p>'
    - id: clientId
      type: "26831127"
      description: "<p>Bing uses this header to provide users with consistent behavior across Bing API calls. Bing often flights new features and improvements, and it uses the client ID as a key for assigning traffic on different flights. If you do not use the same client ID for a user across multiple requests, then Bing may assign the user to multiple conflicting flights. Being assigned to multiple conflicting flights can lead to an inconsistent user experience. For example, if the second request has a different flight assignment than the first, the experience may be unexpected. Also, Bing can use the client ID to tailor web results to that client ID’s search history, providing a richer experience for the user. Bing also uses this header to help improve result rankings by analyzing the activity generated by a client ID. The relevance improvements help with better quality of results delivered by Bing APIs and in turn enables higher click-through rates for the API consumer. IMPORTANT: Although optional, you should consider this header required. Persisting the client ID across multiple requests for the same end user and device combination enables 1) the API consumer to receive a consistent user experience, and 2) higher click-through rates via better quality of results from the Bing APIs. Each user that uses your application on the device must have a unique, Bing generated client ID. If you do not include this header in the request, Bing generates an ID and returns it in the X-MSEdge-ClientID response header. The only time that you should NOT include this header in a request is the first time the user uses your app on that device. Use the client ID for each Bing API request that your app makes for this user on the device. Persist the client ID. To persist the ID in a browser app, use a persistent HTTP cookie to ensure the ID is used across all sessions. Do not use a session cookie. For other apps such as mobile apps, use the device's persistent storage to persist the ID. The next time the user uses your app on that device, get the client ID that you persisted. Bing responses may or may not include this header. If the response includes this header, capture the client ID and use it for all subsequent Bing requests for the user on that device. If you include the X-MSEdge-ClientID, you must not include cookies in the request. </p>"
    - id: clientIp
      type: "26831127"
      description: <p>The IPv4 or IPv6 address of the client device. The IP address is used to discover the user's location. Bing uses the location information to determine safe search behavior. Although optional, you are encouraged to always specify this header and the X-Search-Location header. Do not obfuscate the address (for example, by changing the last octet to 0). Obfuscating the address results in the location not being anywhere near the device's actual location, which may result in Bing serving erroneous results. </p>
    - id: location
      type: "26831127"
      description: "<p>A semicolon-delimited list of key/value pairs that describe the client's geographical location. Bing uses the location information to determine safe search behavior and to return relevant local content. Specify the key/value pair as &lt;key&gt;:&lt;value&gt;. The following are the keys that you use to specify the user's location. lat (required): The latitude of the client's location, in degrees. The latitude must be greater than or equal to -90.0 and less than or equal to +90.0. Negative values indicate southern latitudes and positive values indicate northern latitudes. long (required): The longitude of the client's location, in degrees. The longitude must be greater than or equal to -180.0 and less than or equal to +180.0. Negative values indicate western longitudes and positive values indicate eastern longitudes. re (required): The radius, in meters, which specifies the horizontal accuracy of the coordinates. Pass the value returned by the device's location service. Typical values might be 22m for GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for reverse IP lookup. ts (optional): The UTC UNIX timestamp of when the client was at the location. (The UNIX timestamp is the number of seconds since January 1, 1970.) head (optional): The client's relative heading or direction of travel. Specify the direction of travel as degrees from 0 through 360, counting clockwise relative to true north. Specify this key only if the sp key is nonzero. sp (optional): The horizontal velocity (speed), in meters per second, that the client device is traveling. alt (optional): The altitude of the client device, in meters. are (optional): The radius, in meters, that specifies the vertical accuracy of the coordinates. Specify this key only if you specify the alt key. Although many of the keys are optional, the more information that you provide, the more accurate the location results are. Although optional, you are encouraged to always specify the user's geographical location. Providing the location is especially important if the client's IP address does not accurately reflect the user's physical location (for example, if the client uses VPN). For optimal results, you should include this header and the X-MSEdge-ClientIP header, but at a minimum, you should include this header. </p>"
    - id: countryCode
      type: "26831127"
      description: <p>A 2-character country code of the country where the results come from. This API supports only the United States market. If you specify this query parameter, it must be set to us. If you set this parameter, you must also specify the Accept-Language header. Bing uses the first supported language it finds from the languages list, and combine that language with the country code that you specify to determine the market to return results for. If the languages list does not include a supported language, Bing finds the closest language and market that supports the request, or it may use an aggregated or default market for the results instead of a specified one. You should use this query parameter and the Accept-Language query parameter only if you specify multiple languages; otherwise, you should use the mkt and setLang query parameters. This parameter and the mkt query parameter are mutually exclusive—do not specify both. </p>
    - id: market
      type: "26831127"
      description: <p>The market where the results come from. You are strongly encouraged to always specify the market, if known. Specifying the market helps Bing route the request and return an appropriate and optimal response. This parameter and the cc query parameter are mutually exclusive—do not specify both. </p>
    - id: responseFilter
      type: 5618da2dcom.microsoft.azure.cognitiveservices.entitysearch._answer_typea08ddfce
      description: <p>A comma-delimited list of answers to include in the response. If you do not specify this parameter, the response includes all search answers for which there's relevant data. </p>
    - id: responseFormat
      type: 5618da2dcom.microsoft.azure.cognitiveservices.entitysearch._response_formata08ddfce
      description: '<p>The media type to use for the response. The following are the possible case-insensitive values: JSON, JSONLD. The default is JSON. If you specify JSONLD, the response body includes JSON-LD objects that contain the search results. </p>'
    - id: safeSearch
      type: com.microsoft.azure.cognitiveservices.entitysearch._safe_search
      description: "<p>A filter used to filter adult content. Off: Return webpages with adult text, images, or videos. Moderate: Return webpages with adult text, but not adult images or videos. Strict: Do not return webpages with adult text, images, or videos. The default is Moderate. If the request comes from a market that Bing's adult policy requires that safeSearch is set to Strict, Bing ignores the safeSearch value and uses Strict. If you use the site: query operator, there is the chance that the response may contain adult content regardless of what the safeSearch query parameter is set to. Use site: only if you are aware of the content on the site and your scenario supports the possibility of adult content. Possible values include: 'Off', 'Moderate', 'Strict' </p>"
    - id: setLang
      type: "26831127"
      description: <p>The language to use for user interface strings. Specify the language using the ISO 639-1 2-letter language code. For example, the language code for English is EN. The default is EN (English). Although optional, you should always specify the language. Typically, you set setLang to the same language specified by mkt unless the user wants the user interface strings displayed in a different language. This parameter and the Accept-Language header are mutually exclusive; do not specify both. A user interface string is a string that's used as a label in a user interface. There are few user interface strings in the JSON response objects. Also, any links to Bing.com properties in the response objects apply the specified language. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_inner
      description: <p>the <xref uid="com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_inner" data-throw-if-not-resolved="false">SearchResponseInner</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: com.microsoft.azure.cognitiveservices.entitysearch._error_response_exception
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.searchAsync(String)
  id: searchAsync(String)
  parent: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner
  href: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.yml
  langs:
  - java
  name: searchAsync(String query)
  nameWithType: EntitiesInner.searchAsync(String query)
  fullName: Observable<SearchResponseInner> com.microsoft.azure.cognitiveservices.entitysearch.implementation.EntitiesInner.searchAsync(String query)
  overload: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.searchAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/azure-entitysearch/src/main/java/com/microsoft/azure/cognitiveservices/entitysearch/implementation/EntitiesInner.java
    startLine: 94
  package: com.microsoft.azure.cognitiveservices.entitysearch.implementation
  summary: >-
    <p>The Entity Search API lets you send a search query to Bing and get back search results that include entities and places. <xref uid="com.microsoft.azure.cognitiveservices.entitysearch._place" data-throw-if-not-resolved="false">Place</xref> results include restaurants, hotel, or other local businesses. For places, the query can specify the name of the local business or it can ask for a list (for example, restaurants near me). Entity results include persons, places, or things. <xref uid="com.microsoft.azure.cognitiveservices.entitysearch._place" data-throw-if-not-resolved="false">Place</xref> in this context is tourist attractions, states, countries, etc.</p>

    <p></p>
  syntax:
    content: public Observable<SearchResponseInner> searchAsync(String query)
    parameters:
    - id: query
      type: "26831127"
      description: <p>The user's search term. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_innera08ddfce
      description: <p>the observable to the <xref uid="com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_inner" data-throw-if-not-resolved="false">SearchResponseInner</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.searchAsync(String,final ServiceCallback<SearchResponseInner>)
  id: searchAsync(String,final ServiceCallback<SearchResponseInner>)
  parent: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner
  href: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.yml
  langs:
  - java
  name: searchAsync(String query, final ServiceCallback<SearchResponseInner> serviceCallback)
  nameWithType: EntitiesInner.searchAsync(String query, final ServiceCallback<SearchResponseInner> serviceCallback)
  fullName: ServiceFuture<SearchResponseInner> com.microsoft.azure.cognitiveservices.entitysearch.implementation.EntitiesInner.searchAsync(String query, final ServiceCallback<SearchResponseInner> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.searchAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/azure-entitysearch/src/main/java/com/microsoft/azure/cognitiveservices/entitysearch/implementation/EntitiesInner.java
    startLine: 83
  package: com.microsoft.azure.cognitiveservices.entitysearch.implementation
  summary: >-
    <p>The Entity Search API lets you send a search query to Bing and get back search results that include entities and places. <xref uid="com.microsoft.azure.cognitiveservices.entitysearch._place" data-throw-if-not-resolved="false">Place</xref> results include restaurants, hotel, or other local businesses. For places, the query can specify the name of the local business or it can ask for a list (for example, restaurants near me). Entity results include persons, places, or things. <xref uid="com.microsoft.azure.cognitiveservices.entitysearch._place" data-throw-if-not-resolved="false">Place</xref> in this context is tourist attractions, states, countries, etc.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<SearchResponseInner> searchAsync(String query, final ServiceCallback<SearchResponseInner> serviceCallback)
    parameters:
    - id: query
      type: "26831127"
      description: <p>The user's search term. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_innera08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_innera08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.searchAsync(String,String,String,String,String,String,String,String,List<AnswerType>,List<ResponseFormat>,SafeSearch,String)
  id: searchAsync(String,String,String,String,String,String,String,String,List<AnswerType>,List<ResponseFormat>,SafeSearch,String)
  parent: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner
  href: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.yml
  langs:
  - java
  name: searchAsync(String query, String acceptLanguage, String pragma, String clientId, String clientIp, String location, String countryCode, String market, List<AnswerType> responseFilter, List<ResponseFormat> responseFormat, SafeSearch safeSearch, String setLang)
  nameWithType: EntitiesInner.searchAsync(String query, String acceptLanguage, String pragma, String clientId, String clientIp, String location, String countryCode, String market, List<AnswerType> responseFilter, List<ResponseFormat> responseFormat, SafeSearch safeSearch, String setLang)
  fullName: Observable<SearchResponseInner> com.microsoft.azure.cognitiveservices.entitysearch.implementation.EntitiesInner.searchAsync(String query, String acceptLanguage, String pragma, String clientId, String clientIp, String location, String countryCode, String market, List<AnswerType> responseFilter, List<ResponseFormat> responseFormat, SafeSearch safeSearch, String setLang)
  overload: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.searchAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/azure-entitysearch/src/main/java/com/microsoft/azure/cognitiveservices/entitysearch/implementation/EntitiesInner.java
    startLine: 207
  package: com.microsoft.azure.cognitiveservices.entitysearch.implementation
  summary: >-
    <p>The Entity Search API lets you send a search query to Bing and get back search results that include entities and places. <xref uid="com.microsoft.azure.cognitiveservices.entitysearch._place" data-throw-if-not-resolved="false">Place</xref> results include restaurants, hotel, or other local businesses. For places, the query can specify the name of the local business or it can ask for a list (for example, restaurants near me). Entity results include persons, places, or things. <xref uid="com.microsoft.azure.cognitiveservices.entitysearch._place" data-throw-if-not-resolved="false">Place</xref> in this context is tourist attractions, states, countries, etc.</p>

    <p></p>
  syntax:
    content: public Observable<SearchResponseInner> searchAsync(String query, String acceptLanguage, String pragma, String clientId, String clientIp, String location, String countryCode, String market, List<AnswerType> responseFilter, List<ResponseFormat> responseFormat, SafeSearch safeSearch, String setLang)
    parameters:
    - id: query
      type: "26831127"
      description: <p>The user's search term. </p>
    - id: acceptLanguage
      type: "26831127"
      description: <p>A comma-delimited list of one or more languages to use for user interface strings. The list is in decreasing order of preference. For additional information, including expected format, see [RFC2616](<a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html</a>). This header and the setLang query parameter are mutually exclusive; do not specify both. If you set this header, you must also specify the cc query parameter. Bing will use the first supported language it finds from the list, and combine that language with the cc parameter value to determine the market to return results for. If the list does not include a supported language, Bing will find the closest language and market that supports the request, and may use an aggregated or default market for the results instead of a specified one. You should use this header and the cc query parameter only if you specify multiple languages; otherwise, you should use the mkt and setLang query parameters. A user interface string is a string that's used as a label in a user interface. There are very few user interface strings in the JSON response objects. Any links in the response objects to Bing.com properties will apply the specified language. </p>
    - id: pragma
      type: "26831127"
      description: '<p>By default, Bing returns cached content, if available. To prevent Bing from returning cached content, set the Pragma header to no-cache (for example, Pragma: no-cache). </p>'
    - id: clientId
      type: "26831127"
      description: "<p>Bing uses this header to provide users with consistent behavior across Bing API calls. Bing often flights new features and improvements, and it uses the client ID as a key for assigning traffic on different flights. If you do not use the same client ID for a user across multiple requests, then Bing may assign the user to multiple conflicting flights. Being assigned to multiple conflicting flights can lead to an inconsistent user experience. For example, if the second request has a different flight assignment than the first, the experience may be unexpected. Also, Bing can use the client ID to tailor web results to that client ID’s search history, providing a richer experience for the user. Bing also uses this header to help improve result rankings by analyzing the activity generated by a client ID. The relevance improvements help with better quality of results delivered by Bing APIs and in turn enables higher click-through rates for the API consumer. IMPORTANT: Although optional, you should consider this header required. Persisting the client ID across multiple requests for the same end user and device combination enables 1) the API consumer to receive a consistent user experience, and 2) higher click-through rates via better quality of results from the Bing APIs. Each user that uses your application on the device must have a unique, Bing generated client ID. If you do not include this header in the request, Bing generates an ID and returns it in the X-MSEdge-ClientID response header. The only time that you should NOT include this header in a request is the first time the user uses your app on that device. Use the client ID for each Bing API request that your app makes for this user on the device. Persist the client ID. To persist the ID in a browser app, use a persistent HTTP cookie to ensure the ID is used across all sessions. Do not use a session cookie. For other apps such as mobile apps, use the device's persistent storage to persist the ID. The next time the user uses your app on that device, get the client ID that you persisted. Bing responses may or may not include this header. If the response includes this header, capture the client ID and use it for all subsequent Bing requests for the user on that device. If you include the X-MSEdge-ClientID, you must not include cookies in the request. </p>"
    - id: clientIp
      type: "26831127"
      description: <p>The IPv4 or IPv6 address of the client device. The IP address is used to discover the user's location. Bing uses the location information to determine safe search behavior. Although optional, you are encouraged to always specify this header and the X-Search-Location header. Do not obfuscate the address (for example, by changing the last octet to 0). Obfuscating the address results in the location not being anywhere near the device's actual location, which may result in Bing serving erroneous results. </p>
    - id: location
      type: "26831127"
      description: "<p>A semicolon-delimited list of key/value pairs that describe the client's geographical location. Bing uses the location information to determine safe search behavior and to return relevant local content. Specify the key/value pair as &lt;key&gt;:&lt;value&gt;. The following are the keys that you use to specify the user's location. lat (required): The latitude of the client's location, in degrees. The latitude must be greater than or equal to -90.0 and less than or equal to +90.0. Negative values indicate southern latitudes and positive values indicate northern latitudes. long (required): The longitude of the client's location, in degrees. The longitude must be greater than or equal to -180.0 and less than or equal to +180.0. Negative values indicate western longitudes and positive values indicate eastern longitudes. re (required): The radius, in meters, which specifies the horizontal accuracy of the coordinates. Pass the value returned by the device's location service. Typical values might be 22m for GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for reverse IP lookup. ts (optional): The UTC UNIX timestamp of when the client was at the location. (The UNIX timestamp is the number of seconds since January 1, 1970.) head (optional): The client's relative heading or direction of travel. Specify the direction of travel as degrees from 0 through 360, counting clockwise relative to true north. Specify this key only if the sp key is nonzero. sp (optional): The horizontal velocity (speed), in meters per second, that the client device is traveling. alt (optional): The altitude of the client device, in meters. are (optional): The radius, in meters, that specifies the vertical accuracy of the coordinates. Specify this key only if you specify the alt key. Although many of the keys are optional, the more information that you provide, the more accurate the location results are. Although optional, you are encouraged to always specify the user's geographical location. Providing the location is especially important if the client's IP address does not accurately reflect the user's physical location (for example, if the client uses VPN). For optimal results, you should include this header and the X-MSEdge-ClientIP header, but at a minimum, you should include this header. </p>"
    - id: countryCode
      type: "26831127"
      description: <p>A 2-character country code of the country where the results come from. This API supports only the United States market. If you specify this query parameter, it must be set to us. If you set this parameter, you must also specify the Accept-Language header. Bing uses the first supported language it finds from the languages list, and combine that language with the country code that you specify to determine the market to return results for. If the languages list does not include a supported language, Bing finds the closest language and market that supports the request, or it may use an aggregated or default market for the results instead of a specified one. You should use this query parameter and the Accept-Language query parameter only if you specify multiple languages; otherwise, you should use the mkt and setLang query parameters. This parameter and the mkt query parameter are mutually exclusive—do not specify both. </p>
    - id: market
      type: "26831127"
      description: <p>The market where the results come from. You are strongly encouraged to always specify the market, if known. Specifying the market helps Bing route the request and return an appropriate and optimal response. This parameter and the cc query parameter are mutually exclusive—do not specify both. </p>
    - id: responseFilter
      type: 5618da2dcom.microsoft.azure.cognitiveservices.entitysearch._answer_typea08ddfce
      description: <p>A comma-delimited list of answers to include in the response. If you do not specify this parameter, the response includes all search answers for which there's relevant data. </p>
    - id: responseFormat
      type: 5618da2dcom.microsoft.azure.cognitiveservices.entitysearch._response_formata08ddfce
      description: '<p>The media type to use for the response. The following are the possible case-insensitive values: JSON, JSONLD. The default is JSON. If you specify JSONLD, the response body includes JSON-LD objects that contain the search results. </p>'
    - id: safeSearch
      type: com.microsoft.azure.cognitiveservices.entitysearch._safe_search
      description: "<p>A filter used to filter adult content. Off: Return webpages with adult text, images, or videos. Moderate: Return webpages with adult text, but not adult images or videos. Strict: Do not return webpages with adult text, images, or videos. The default is Moderate. If the request comes from a market that Bing's adult policy requires that safeSearch is set to Strict, Bing ignores the safeSearch value and uses Strict. If you use the site: query operator, there is the chance that the response may contain adult content regardless of what the safeSearch query parameter is set to. Use site: only if you are aware of the content on the site and your scenario supports the possibility of adult content. Possible values include: 'Off', 'Moderate', 'Strict' </p>"
    - id: setLang
      type: "26831127"
      description: <p>The language to use for user interface strings. Specify the language using the ISO 639-1 2-letter language code. For example, the language code for English is EN. The default is EN (English). Although optional, you should always specify the language. Typically, you set setLang to the same language specified by mkt unless the user wants the user interface strings displayed in a different language. This parameter and the Accept-Language header are mutually exclusive; do not specify both. A user interface string is a string that's used as a label in a user interface. There are few user interface strings in the JSON response objects. Also, any links to Bing.com properties in the response objects apply the specified language. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_innera08ddfce
      description: <p>the observable to the <xref uid="com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_inner" data-throw-if-not-resolved="false">SearchResponseInner</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.searchAsync(String,String,String,String,String,String,String,String,List<AnswerType>,List<ResponseFormat>,SafeSearch,String,final ServiceCallback<SearchResponseInner>)
  id: searchAsync(String,String,String,String,String,String,String,String,List<AnswerType>,List<ResponseFormat>,SafeSearch,String,final ServiceCallback<SearchResponseInner>)
  parent: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner
  href: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.yml
  langs:
  - java
  name: searchAsync(String query, String acceptLanguage, String pragma, String clientId, String clientIp, String location, String countryCode, String market, List<AnswerType> responseFilter, List<ResponseFormat> responseFormat, SafeSearch safeSearch, String setLang, final ServiceCallback<SearchResponseInner> serviceCallback)
  nameWithType: EntitiesInner.searchAsync(String query, String acceptLanguage, String pragma, String clientId, String clientIp, String location, String countryCode, String market, List<AnswerType> responseFilter, List<ResponseFormat> responseFormat, SafeSearch safeSearch, String setLang, final ServiceCallback<SearchResponseInner> serviceCallback)
  fullName: ServiceFuture<SearchResponseInner> com.microsoft.azure.cognitiveservices.entitysearch.implementation.EntitiesInner.searchAsync(String query, String acceptLanguage, String pragma, String clientId, String clientIp, String location, String countryCode, String market, List<AnswerType> responseFilter, List<ResponseFormat> responseFormat, SafeSearch safeSearch, String setLang, final ServiceCallback<SearchResponseInner> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.searchAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/azure-entitysearch/src/main/java/com/microsoft/azure/cognitiveservices/entitysearch/implementation/EntitiesInner.java
    startLine: 185
  package: com.microsoft.azure.cognitiveservices.entitysearch.implementation
  summary: >-
    <p>The Entity Search API lets you send a search query to Bing and get back search results that include entities and places. <xref uid="com.microsoft.azure.cognitiveservices.entitysearch._place" data-throw-if-not-resolved="false">Place</xref> results include restaurants, hotel, or other local businesses. For places, the query can specify the name of the local business or it can ask for a list (for example, restaurants near me). Entity results include persons, places, or things. <xref uid="com.microsoft.azure.cognitiveservices.entitysearch._place" data-throw-if-not-resolved="false">Place</xref> in this context is tourist attractions, states, countries, etc.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<SearchResponseInner> searchAsync(String query, String acceptLanguage, String pragma, String clientId, String clientIp, String location, String countryCode, String market, List<AnswerType> responseFilter, List<ResponseFormat> responseFormat, SafeSearch safeSearch, String setLang, final ServiceCallback<SearchResponseInner> serviceCallback)
    parameters:
    - id: query
      type: "26831127"
      description: <p>The user's search term. </p>
    - id: acceptLanguage
      type: "26831127"
      description: <p>A comma-delimited list of one or more languages to use for user interface strings. The list is in decreasing order of preference. For additional information, including expected format, see [RFC2616](<a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html</a>). This header and the setLang query parameter are mutually exclusive; do not specify both. If you set this header, you must also specify the cc query parameter. Bing will use the first supported language it finds from the list, and combine that language with the cc parameter value to determine the market to return results for. If the list does not include a supported language, Bing will find the closest language and market that supports the request, and may use an aggregated or default market for the results instead of a specified one. You should use this header and the cc query parameter only if you specify multiple languages; otherwise, you should use the mkt and setLang query parameters. A user interface string is a string that's used as a label in a user interface. There are very few user interface strings in the JSON response objects. Any links in the response objects to Bing.com properties will apply the specified language. </p>
    - id: pragma
      type: "26831127"
      description: '<p>By default, Bing returns cached content, if available. To prevent Bing from returning cached content, set the Pragma header to no-cache (for example, Pragma: no-cache). </p>'
    - id: clientId
      type: "26831127"
      description: "<p>Bing uses this header to provide users with consistent behavior across Bing API calls. Bing often flights new features and improvements, and it uses the client ID as a key for assigning traffic on different flights. If you do not use the same client ID for a user across multiple requests, then Bing may assign the user to multiple conflicting flights. Being assigned to multiple conflicting flights can lead to an inconsistent user experience. For example, if the second request has a different flight assignment than the first, the experience may be unexpected. Also, Bing can use the client ID to tailor web results to that client ID’s search history, providing a richer experience for the user. Bing also uses this header to help improve result rankings by analyzing the activity generated by a client ID. The relevance improvements help with better quality of results delivered by Bing APIs and in turn enables higher click-through rates for the API consumer. IMPORTANT: Although optional, you should consider this header required. Persisting the client ID across multiple requests for the same end user and device combination enables 1) the API consumer to receive a consistent user experience, and 2) higher click-through rates via better quality of results from the Bing APIs. Each user that uses your application on the device must have a unique, Bing generated client ID. If you do not include this header in the request, Bing generates an ID and returns it in the X-MSEdge-ClientID response header. The only time that you should NOT include this header in a request is the first time the user uses your app on that device. Use the client ID for each Bing API request that your app makes for this user on the device. Persist the client ID. To persist the ID in a browser app, use a persistent HTTP cookie to ensure the ID is used across all sessions. Do not use a session cookie. For other apps such as mobile apps, use the device's persistent storage to persist the ID. The next time the user uses your app on that device, get the client ID that you persisted. Bing responses may or may not include this header. If the response includes this header, capture the client ID and use it for all subsequent Bing requests for the user on that device. If you include the X-MSEdge-ClientID, you must not include cookies in the request. </p>"
    - id: clientIp
      type: "26831127"
      description: <p>The IPv4 or IPv6 address of the client device. The IP address is used to discover the user's location. Bing uses the location information to determine safe search behavior. Although optional, you are encouraged to always specify this header and the X-Search-Location header. Do not obfuscate the address (for example, by changing the last octet to 0). Obfuscating the address results in the location not being anywhere near the device's actual location, which may result in Bing serving erroneous results. </p>
    - id: location
      type: "26831127"
      description: "<p>A semicolon-delimited list of key/value pairs that describe the client's geographical location. Bing uses the location information to determine safe search behavior and to return relevant local content. Specify the key/value pair as &lt;key&gt;:&lt;value&gt;. The following are the keys that you use to specify the user's location. lat (required): The latitude of the client's location, in degrees. The latitude must be greater than or equal to -90.0 and less than or equal to +90.0. Negative values indicate southern latitudes and positive values indicate northern latitudes. long (required): The longitude of the client's location, in degrees. The longitude must be greater than or equal to -180.0 and less than or equal to +180.0. Negative values indicate western longitudes and positive values indicate eastern longitudes. re (required): The radius, in meters, which specifies the horizontal accuracy of the coordinates. Pass the value returned by the device's location service. Typical values might be 22m for GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for reverse IP lookup. ts (optional): The UTC UNIX timestamp of when the client was at the location. (The UNIX timestamp is the number of seconds since January 1, 1970.) head (optional): The client's relative heading or direction of travel. Specify the direction of travel as degrees from 0 through 360, counting clockwise relative to true north. Specify this key only if the sp key is nonzero. sp (optional): The horizontal velocity (speed), in meters per second, that the client device is traveling. alt (optional): The altitude of the client device, in meters. are (optional): The radius, in meters, that specifies the vertical accuracy of the coordinates. Specify this key only if you specify the alt key. Although many of the keys are optional, the more information that you provide, the more accurate the location results are. Although optional, you are encouraged to always specify the user's geographical location. Providing the location is especially important if the client's IP address does not accurately reflect the user's physical location (for example, if the client uses VPN). For optimal results, you should include this header and the X-MSEdge-ClientIP header, but at a minimum, you should include this header. </p>"
    - id: countryCode
      type: "26831127"
      description: <p>A 2-character country code of the country where the results come from. This API supports only the United States market. If you specify this query parameter, it must be set to us. If you set this parameter, you must also specify the Accept-Language header. Bing uses the first supported language it finds from the languages list, and combine that language with the country code that you specify to determine the market to return results for. If the languages list does not include a supported language, Bing finds the closest language and market that supports the request, or it may use an aggregated or default market for the results instead of a specified one. You should use this query parameter and the Accept-Language query parameter only if you specify multiple languages; otherwise, you should use the mkt and setLang query parameters. This parameter and the mkt query parameter are mutually exclusive—do not specify both. </p>
    - id: market
      type: "26831127"
      description: <p>The market where the results come from. You are strongly encouraged to always specify the market, if known. Specifying the market helps Bing route the request and return an appropriate and optimal response. This parameter and the cc query parameter are mutually exclusive—do not specify both. </p>
    - id: responseFilter
      type: 5618da2dcom.microsoft.azure.cognitiveservices.entitysearch._answer_typea08ddfce
      description: <p>A comma-delimited list of answers to include in the response. If you do not specify this parameter, the response includes all search answers for which there's relevant data. </p>
    - id: responseFormat
      type: 5618da2dcom.microsoft.azure.cognitiveservices.entitysearch._response_formata08ddfce
      description: '<p>The media type to use for the response. The following are the possible case-insensitive values: JSON, JSONLD. The default is JSON. If you specify JSONLD, the response body includes JSON-LD objects that contain the search results. </p>'
    - id: safeSearch
      type: com.microsoft.azure.cognitiveservices.entitysearch._safe_search
      description: "<p>A filter used to filter adult content. Off: Return webpages with adult text, images, or videos. Moderate: Return webpages with adult text, but not adult images or videos. Strict: Do not return webpages with adult text, images, or videos. The default is Moderate. If the request comes from a market that Bing's adult policy requires that safeSearch is set to Strict, Bing ignores the safeSearch value and uses Strict. If you use the site: query operator, there is the chance that the response may contain adult content regardless of what the safeSearch query parameter is set to. Use site: only if you are aware of the content on the site and your scenario supports the possibility of adult content. Possible values include: 'Off', 'Moderate', 'Strict' </p>"
    - id: setLang
      type: "26831127"
      description: <p>The language to use for user interface strings. Specify the language using the ISO 639-1 2-letter language code. For example, the language code for English is EN. The default is EN (English). Although optional, you should always specify the language. Typically, you set setLang to the same language specified by mkt unless the user wants the user interface strings displayed in a different language. This parameter and the Accept-Language header are mutually exclusive; do not specify both. A user interface string is a string that's used as a label in a user interface. There are few user interface strings in the JSON response objects. Also, any links to Bing.com properties in the response objects apply the specified language. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_innera08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_innera08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.searchWithServiceResponseAsync(String)
  id: searchWithServiceResponseAsync(String)
  parent: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner
  href: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.yml
  langs:
  - java
  name: searchWithServiceResponseAsync(String query)
  nameWithType: EntitiesInner.searchWithServiceResponseAsync(String query)
  fullName: Observable<ServiceResponse<SearchResponseInner>> com.microsoft.azure.cognitiveservices.entitysearch.implementation.EntitiesInner.searchWithServiceResponseAsync(String query)
  overload: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.searchWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/azure-entitysearch/src/main/java/com/microsoft/azure/cognitiveservices/entitysearch/implementation/EntitiesInner.java
    startLine: 110
  package: com.microsoft.azure.cognitiveservices.entitysearch.implementation
  summary: >-
    <p>The Entity Search API lets you send a search query to Bing and get back search results that include entities and places. <xref uid="com.microsoft.azure.cognitiveservices.entitysearch._place" data-throw-if-not-resolved="false">Place</xref> results include restaurants, hotel, or other local businesses. For places, the query can specify the name of the local business or it can ask for a list (for example, restaurants near me). Entity results include persons, places, or things. <xref uid="com.microsoft.azure.cognitiveservices.entitysearch._place" data-throw-if-not-resolved="false">Place</xref> in this context is tourist attractions, states, countries, etc.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<SearchResponseInner>> searchWithServiceResponseAsync(String query)
    parameters:
    - id: query
      type: "26831127"
      description: <p>The user's search term. </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_innere7daa122
      description: <p>the observable to the <xref uid="com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_inner" data-throw-if-not-resolved="false">SearchResponseInner</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.searchWithServiceResponseAsync(String,String,String,String,String,String,String,String,List<AnswerType>,List<ResponseFormat>,SafeSearch,String)
  id: searchWithServiceResponseAsync(String,String,String,String,String,String,String,String,List<AnswerType>,List<ResponseFormat>,SafeSearch,String)
  parent: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner
  href: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.yml
  langs:
  - java
  name: searchWithServiceResponseAsync(String query, String acceptLanguage, String pragma, String clientId, String clientIp, String location, String countryCode, String market, List<AnswerType> responseFilter, List<ResponseFormat> responseFormat, SafeSearch safeSearch, String setLang)
  nameWithType: EntitiesInner.searchWithServiceResponseAsync(String query, String acceptLanguage, String pragma, String clientId, String clientIp, String location, String countryCode, String market, List<AnswerType> responseFilter, List<ResponseFormat> responseFormat, SafeSearch safeSearch, String setLang)
  fullName: Observable<ServiceResponse<SearchResponseInner>> com.microsoft.azure.cognitiveservices.entitysearch.implementation.EntitiesInner.searchWithServiceResponseAsync(String query, String acceptLanguage, String pragma, String clientId, String clientIp, String location, String countryCode, String market, List<AnswerType> responseFilter, List<ResponseFormat> responseFormat, SafeSearch safeSearch, String setLang)
  overload: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.searchWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/azure-entitysearch/src/main/java/com/microsoft/azure/cognitiveservices/entitysearch/implementation/EntitiesInner.java
    startLine: 234
  package: com.microsoft.azure.cognitiveservices.entitysearch.implementation
  summary: >-
    <p>The Entity Search API lets you send a search query to Bing and get back search results that include entities and places. <xref uid="com.microsoft.azure.cognitiveservices.entitysearch._place" data-throw-if-not-resolved="false">Place</xref> results include restaurants, hotel, or other local businesses. For places, the query can specify the name of the local business or it can ask for a list (for example, restaurants near me). Entity results include persons, places, or things. <xref uid="com.microsoft.azure.cognitiveservices.entitysearch._place" data-throw-if-not-resolved="false">Place</xref> in this context is tourist attractions, states, countries, etc.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<SearchResponseInner>> searchWithServiceResponseAsync(String query, String acceptLanguage, String pragma, String clientId, String clientIp, String location, String countryCode, String market, List<AnswerType> responseFilter, List<ResponseFormat> responseFormat, SafeSearch safeSearch, String setLang)
    parameters:
    - id: query
      type: "26831127"
      description: <p>The user's search term. </p>
    - id: acceptLanguage
      type: "26831127"
      description: <p>A comma-delimited list of one or more languages to use for user interface strings. The list is in decreasing order of preference. For additional information, including expected format, see [RFC2616](<a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html</a>). This header and the setLang query parameter are mutually exclusive; do not specify both. If you set this header, you must also specify the cc query parameter. Bing will use the first supported language it finds from the list, and combine that language with the cc parameter value to determine the market to return results for. If the list does not include a supported language, Bing will find the closest language and market that supports the request, and may use an aggregated or default market for the results instead of a specified one. You should use this header and the cc query parameter only if you specify multiple languages; otherwise, you should use the mkt and setLang query parameters. A user interface string is a string that's used as a label in a user interface. There are very few user interface strings in the JSON response objects. Any links in the response objects to Bing.com properties will apply the specified language. </p>
    - id: pragma
      type: "26831127"
      description: '<p>By default, Bing returns cached content, if available. To prevent Bing from returning cached content, set the Pragma header to no-cache (for example, Pragma: no-cache). </p>'
    - id: clientId
      type: "26831127"
      description: "<p>Bing uses this header to provide users with consistent behavior across Bing API calls. Bing often flights new features and improvements, and it uses the client ID as a key for assigning traffic on different flights. If you do not use the same client ID for a user across multiple requests, then Bing may assign the user to multiple conflicting flights. Being assigned to multiple conflicting flights can lead to an inconsistent user experience. For example, if the second request has a different flight assignment than the first, the experience may be unexpected. Also, Bing can use the client ID to tailor web results to that client ID’s search history, providing a richer experience for the user. Bing also uses this header to help improve result rankings by analyzing the activity generated by a client ID. The relevance improvements help with better quality of results delivered by Bing APIs and in turn enables higher click-through rates for the API consumer. IMPORTANT: Although optional, you should consider this header required. Persisting the client ID across multiple requests for the same end user and device combination enables 1) the API consumer to receive a consistent user experience, and 2) higher click-through rates via better quality of results from the Bing APIs. Each user that uses your application on the device must have a unique, Bing generated client ID. If you do not include this header in the request, Bing generates an ID and returns it in the X-MSEdge-ClientID response header. The only time that you should NOT include this header in a request is the first time the user uses your app on that device. Use the client ID for each Bing API request that your app makes for this user on the device. Persist the client ID. To persist the ID in a browser app, use a persistent HTTP cookie to ensure the ID is used across all sessions. Do not use a session cookie. For other apps such as mobile apps, use the device's persistent storage to persist the ID. The next time the user uses your app on that device, get the client ID that you persisted. Bing responses may or may not include this header. If the response includes this header, capture the client ID and use it for all subsequent Bing requests for the user on that device. If you include the X-MSEdge-ClientID, you must not include cookies in the request. </p>"
    - id: clientIp
      type: "26831127"
      description: <p>The IPv4 or IPv6 address of the client device. The IP address is used to discover the user's location. Bing uses the location information to determine safe search behavior. Although optional, you are encouraged to always specify this header and the X-Search-Location header. Do not obfuscate the address (for example, by changing the last octet to 0). Obfuscating the address results in the location not being anywhere near the device's actual location, which may result in Bing serving erroneous results. </p>
    - id: location
      type: "26831127"
      description: "<p>A semicolon-delimited list of key/value pairs that describe the client's geographical location. Bing uses the location information to determine safe search behavior and to return relevant local content. Specify the key/value pair as &lt;key&gt;:&lt;value&gt;. The following are the keys that you use to specify the user's location. lat (required): The latitude of the client's location, in degrees. The latitude must be greater than or equal to -90.0 and less than or equal to +90.0. Negative values indicate southern latitudes and positive values indicate northern latitudes. long (required): The longitude of the client's location, in degrees. The longitude must be greater than or equal to -180.0 and less than or equal to +180.0. Negative values indicate western longitudes and positive values indicate eastern longitudes. re (required): The radius, in meters, which specifies the horizontal accuracy of the coordinates. Pass the value returned by the device's location service. Typical values might be 22m for GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for reverse IP lookup. ts (optional): The UTC UNIX timestamp of when the client was at the location. (The UNIX timestamp is the number of seconds since January 1, 1970.) head (optional): The client's relative heading or direction of travel. Specify the direction of travel as degrees from 0 through 360, counting clockwise relative to true north. Specify this key only if the sp key is nonzero. sp (optional): The horizontal velocity (speed), in meters per second, that the client device is traveling. alt (optional): The altitude of the client device, in meters. are (optional): The radius, in meters, that specifies the vertical accuracy of the coordinates. Specify this key only if you specify the alt key. Although many of the keys are optional, the more information that you provide, the more accurate the location results are. Although optional, you are encouraged to always specify the user's geographical location. Providing the location is especially important if the client's IP address does not accurately reflect the user's physical location (for example, if the client uses VPN). For optimal results, you should include this header and the X-MSEdge-ClientIP header, but at a minimum, you should include this header. </p>"
    - id: countryCode
      type: "26831127"
      description: <p>A 2-character country code of the country where the results come from. This API supports only the United States market. If you specify this query parameter, it must be set to us. If you set this parameter, you must also specify the Accept-Language header. Bing uses the first supported language it finds from the languages list, and combine that language with the country code that you specify to determine the market to return results for. If the languages list does not include a supported language, Bing finds the closest language and market that supports the request, or it may use an aggregated or default market for the results instead of a specified one. You should use this query parameter and the Accept-Language query parameter only if you specify multiple languages; otherwise, you should use the mkt and setLang query parameters. This parameter and the mkt query parameter are mutually exclusive—do not specify both. </p>
    - id: market
      type: "26831127"
      description: <p>The market where the results come from. You are strongly encouraged to always specify the market, if known. Specifying the market helps Bing route the request and return an appropriate and optimal response. This parameter and the cc query parameter are mutually exclusive—do not specify both. </p>
    - id: responseFilter
      type: 5618da2dcom.microsoft.azure.cognitiveservices.entitysearch._answer_typea08ddfce
      description: <p>A comma-delimited list of answers to include in the response. If you do not specify this parameter, the response includes all search answers for which there's relevant data. </p>
    - id: responseFormat
      type: 5618da2dcom.microsoft.azure.cognitiveservices.entitysearch._response_formata08ddfce
      description: '<p>The media type to use for the response. The following are the possible case-insensitive values: JSON, JSONLD. The default is JSON. If you specify JSONLD, the response body includes JSON-LD objects that contain the search results. </p>'
    - id: safeSearch
      type: com.microsoft.azure.cognitiveservices.entitysearch._safe_search
      description: "<p>A filter used to filter adult content. Off: Return webpages with adult text, images, or videos. Moderate: Return webpages with adult text, but not adult images or videos. Strict: Do not return webpages with adult text, images, or videos. The default is Moderate. If the request comes from a market that Bing's adult policy requires that safeSearch is set to Strict, Bing ignores the safeSearch value and uses Strict. If you use the site: query operator, there is the chance that the response may contain adult content regardless of what the safeSearch query parameter is set to. Use site: only if you are aware of the content on the site and your scenario supports the possibility of adult content. Possible values include: 'Off', 'Moderate', 'Strict' </p>"
    - id: setLang
      type: "26831127"
      description: <p>The language to use for user interface strings. Specify the language using the ISO 639-1 2-letter language code. For example, the language code for English is EN. The default is EN (English). Although optional, you should always specify the language. Typically, you set setLang to the same language specified by mkt unless the user wants the user interface strings displayed in a different language. This parameter and the Accept-Language header are mutually exclusive; do not specify both. A user interface string is a string that's used as a label in a user interface. There are few user interface strings in the JSON response objects. Also, any links to Bing.com properties in the response objects apply the specified language. </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_innere7daa122
      description: <p>the observable to the <xref uid="com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_inner" data-throw-if-not-resolved="false">SearchResponseInner</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
references:
- uid: 964879b9
  spec.java:
  - name: Retrofit
    fullName: Retrofit
- uid: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.EntitiesInner*
  name: EntitiesInner
  nameWithType: EntitiesInner.EntitiesInner
  fullName: com.microsoft.azure.cognitiveservices.entitysearch.implementation.EntitiesInner.EntitiesInner
  package: com.microsoft.azure.cognitiveservices.entitysearch.implementation
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: 9b2a4515
  spec.java:
  - name: RuntimeException
    fullName: RuntimeException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.search*
  name: search
  nameWithType: EntitiesInner.search
  fullName: SearchResponseInner com.microsoft.azure.cognitiveservices.entitysearch.implementation.EntitiesInner.search
  package: com.microsoft.azure.cognitiveservices.entitysearch.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_innera08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_inner
    name: SearchResponseInner
    fullName: com.microsoft.azure.cognitiveservices.entitysearch.implementation.SearchResponseInner
    href: com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_inner.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_innera08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_inner
    name: SearchResponseInner
    fullName: com.microsoft.azure.cognitiveservices.entitysearch.implementation.SearchResponseInner
    href: com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_inner.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.searchAsync*
  name: searchAsync
  nameWithType: EntitiesInner.searchAsync
  fullName: ServiceFuture<SearchResponseInner> com.microsoft.azure.cognitiveservices.entitysearch.implementation.EntitiesInner.searchAsync
  package: com.microsoft.azure.cognitiveservices.entitysearch.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_innera08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_inner
    name: SearchResponseInner
    fullName: com.microsoft.azure.cognitiveservices.entitysearch.implementation.SearchResponseInner
    href: com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_inner.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_innere7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_inner
    name: SearchResponseInner
    fullName: com.microsoft.azure.cognitiveservices.entitysearch.implementation.SearchResponseInner
    href: com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_inner.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.searchWithServiceResponseAsync*
  name: searchWithServiceResponseAsync
  nameWithType: EntitiesInner.searchWithServiceResponseAsync
  fullName: Observable<ServiceResponse<SearchResponseInner>> com.microsoft.azure.cognitiveservices.entitysearch.implementation.EntitiesInner.searchWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.entitysearch.implementation
- uid: 5618da2dcom.microsoft.azure.cognitiveservices.entitysearch._answer_typea08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.cognitiveservices.entitysearch._answer_type
    name: AnswerType
    fullName: com.microsoft.azure.cognitiveservices.entitysearch.AnswerType
    href: com.microsoft.azure.cognitiveservices.entitysearch._answer_type.yml
  - name: '>'
    fullName: '>'
- uid: 5618da2dcom.microsoft.azure.cognitiveservices.entitysearch._response_formata08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.cognitiveservices.entitysearch._response_format
    name: ResponseFormat
    fullName: com.microsoft.azure.cognitiveservices.entitysearch.ResponseFormat
    href: com.microsoft.azure.cognitiveservices.entitysearch._response_format.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entity_search_a_p_i_impl
  parent: com.microsoft.azure.cognitiveservices.entitysearch.implementation
  href: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entity_search_a_p_i_impl.yml
  name: EntitySearchAPIImpl
  nameWithType: EntitySearchAPIImpl
  fullName: com.microsoft.azure.cognitiveservices.entitysearch.implementation.EntitySearchAPIImpl
  type: Class
  summary: <p>Initializes a new instance of the <xref uid="com.microsoft.azure.cognitiveservices.entitysearch.implementation._entity_search_a_p_i_impl" data-throw-if-not-resolved="false">EntitySearchAPIImpl</xref> class. </p>
  syntax:
    content: public class EntitySearchAPIImpl
- uid: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner
  parent: com.microsoft.azure.cognitiveservices.entitysearch.implementation
  href: com.microsoft.azure.cognitiveservices.entitysearch.implementation._entities_inner.yml
  name: EntitiesInner
  nameWithType: EntitiesInner
  fullName: com.microsoft.azure.cognitiveservices.entitysearch.implementation.EntitiesInner
  type: Class
  summary: <p>An instance of this class provides access to all the operations defined in <xref uid="com.microsoft.azure.cognitiveservices.entitysearch._entities" data-throw-if-not-resolved="false">Entities</xref>. </p>
  syntax: *o1
- uid: com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_inner
  parent: com.microsoft.azure.cognitiveservices.entitysearch.implementation
  href: com.microsoft.azure.cognitiveservices.entitysearch.implementation._search_response_inner.yml
  name: SearchResponseInner
  nameWithType: SearchResponseInner
  fullName: com.microsoft.azure.cognitiveservices.entitysearch.implementation.SearchResponseInner
  type: Class
  summary: <p>Defines the top-level object that the response includes when the request succeeds. </p>
  syntax:
    content: public class SearchResponseInner
- uid: com.microsoft.azure.cognitiveservices.entitysearch._place
  parent: com.microsoft.azure.cognitiveservices.entitysearch
  href: com.microsoft.azure.cognitiveservices.entitysearch._place.yml
  name: Place
  nameWithType: Place
  fullName: com.microsoft.azure.cognitiveservices.entitysearch.Place
  type: Class
  summary: <p>Defines information about a local entity, such as a restaurant or hotel. </p>
  syntax:
    content: public class Place
- uid: com.microsoft.azure.cognitiveservices.entitysearch._error_response_exception
  parent: com.microsoft.azure.cognitiveservices.entitysearch
  href: com.microsoft.azure.cognitiveservices.entitysearch._error_response_exception.yml
  name: ErrorResponseException
  nameWithType: ErrorResponseException
  fullName: com.microsoft.azure.cognitiveservices.entitysearch.ErrorResponseException
  type: Class
  summary: <p>Exception thrown for an invalid response with <xref uid="com.microsoft.azure.cognitiveservices.entitysearch._error_response" data-throw-if-not-resolved="false">ErrorResponse</xref> information. </p>
  syntax:
    content: public class ErrorResponseException
- uid: com.microsoft.azure.cognitiveservices.entitysearch._answer_type
  parent: com.microsoft.azure.cognitiveservices.entitysearch
  href: com.microsoft.azure.cognitiveservices.entitysearch._answer_type.yml
  name: AnswerType
  nameWithType: AnswerType
  fullName: com.microsoft.azure.cognitiveservices.entitysearch.AnswerType
  type: Class
  summary: <p>Defines values for <xref uid="com.microsoft.azure.cognitiveservices.entitysearch._answer_type" data-throw-if-not-resolved="false">AnswerType</xref>. </p>
  syntax:
    content: public class AnswerType
- uid: com.microsoft.azure.cognitiveservices.entitysearch._response_format
  parent: com.microsoft.azure.cognitiveservices.entitysearch
  href: com.microsoft.azure.cognitiveservices.entitysearch._response_format.yml
  name: ResponseFormat
  nameWithType: ResponseFormat
  fullName: com.microsoft.azure.cognitiveservices.entitysearch.ResponseFormat
  type: Class
  summary: <p>Defines values for <xref uid="com.microsoft.azure.cognitiveservices.entitysearch._response_format" data-throw-if-not-resolved="false">ResponseFormat</xref>. </p>
  syntax:
    content: public class ResponseFormat
- uid: com.microsoft.azure.cognitiveservices.entitysearch._safe_search
  parent: com.microsoft.azure.cognitiveservices.entitysearch
  href: com.microsoft.azure.cognitiveservices.entitysearch._safe_search.yml
  name: SafeSearch
  nameWithType: SafeSearch
  fullName: com.microsoft.azure.cognitiveservices.entitysearch.SafeSearch
  type: Class
  summary: <p>Defines values for <xref uid="com.microsoft.azure.cognitiveservices.entitysearch._safe_search" data-throw-if-not-resolved="false">SafeSearch</xref>. </p>
  syntax:
    content: public class SafeSearch
- uid: com.microsoft.azure.cognitiveservices.entitysearch._response
  parent: com.microsoft.azure.cognitiveservices.entitysearch
  href: com.microsoft.azure.cognitiveservices.entitysearch._response.yml
  name: Response
  nameWithType: Response
  fullName: com.microsoft.azure.cognitiveservices.entitysearch.Response
  type: Class
  summary: <p>Defines a response. All schemas that could be returned at the root of a response should inherit from this. </p>
  syntax:
    content: public class Response
- uid: com.microsoft.azure.cognitiveservices.entitysearch._entities
  parent: com.microsoft.azure.cognitiveservices.entitysearch
  href: com.microsoft.azure.cognitiveservices.entitysearch._entities.yml
  name: Entities
  nameWithType: Entities
  fullName: com.microsoft.azure.cognitiveservices.entitysearch.Entities
  type: Class
  summary: <p>Defines an entity answer. </p>
  syntax:
    content: public class Entities extends SearchResultsAnswer
