### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.Blank
  id: Blank
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.Blank.yml
  langs:
  - java
  name: SqlDatabase.DefinitionStages.Blank
  nameWithType: SqlDatabase.DefinitionStages.Blank
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.Blank
  type: Interface
  source:
    remote:
      path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
      branch: v1.3.0
      repo: https://github.com/Azure/azure-sdk-for-java
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
    startLine: 183
  package: com.microsoft.azure.management.sql
  summary: "<p>The first stage of the SQL database definition. </p>"
  syntax:
    content: public interface Blank extends SqlDatabase.DefinitionStages.WithAllDifferentOptions
  inheritedMembers:
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync(final ServiceCallback<T>)
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync()
  - com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  - com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCollationAllCreateOptions.withCollation(String)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEdition.withEdition(DatabaseEditions)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.withExistingElasticPool(String)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.withExistingElasticPool(SqlElasticPool)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithMaxSizeBytesAllCreateOptions.withMaxSizeBytes(long)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.withNewElasticPool(Creatable<SqlElasticPool>)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithServiceObjective.withServiceObjective(ServiceObjectiveName)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId.withSourceDatabase(String)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId.withSourceDatabase(SqlDatabase)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTag(String,String)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTags(Map<String, String>)
references:
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: create()
  nameWithType: Creatable<T>.create()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.create()
  type: Method
  summary: >-
    <p>Execute the create request.</p>

    <p></p>
  syntax:
    content: public T create()
    return:
      type: 8ce1ecb9
      description: <p>the create resource </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync(final ServiceCallback<T>)
  parent: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: createAsync(final ServiceCallback<T> callback)
  nameWithType: Creatable<T>.createAsync(final ServiceCallback<T> callback)
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync(final ServiceCallback<T> callback)
  type: Method
  summary: >-
    <p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<T> createAsync(final ServiceCallback<T> callback)
    parameters:
    - id: callback
      type: fe95c2b0
      description: <p>the callback to handle success and failure </p>
    return:
      type: c0371a4e
      description: <p>a handle to cancel the request </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: createAsync()
  nameWithType: Creatable<T>.createAsync()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync()
  type: Method
  summary: >-
    <p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>

    <p></p>
  syntax:
    content: public Observable<Indexable> createAsync()
    return:
      type: c2d0e8c6com.microsoft.azure.management.resources.fluentcore.model.Indexablea08ddfce
      description: <p>an observable of the request </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Indexable
  href: com.microsoft.azure.management.resources.fluentcore.model.Indexable.yml
  name: key()
  nameWithType: Indexable.key()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  type: Method
  syntax:
    content: public String key()
    return:
      type: "26831127"
      description: <p>the index key. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.yml
  name: name()
  nameWithType: HasName.name()
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  type: Method
  syntax:
    content: public String name()
    return:
      type: "26831127"
      description: <p>the name of the resource </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCollationAllCreateOptions.withCollation(String)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCollationAllCreateOptions
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCollationAllCreateOptions.yml
  name: withCollation(String collation)
  nameWithType: SqlDatabase.DefinitionStages.WithCollationAllCreateOptions.withCollation(String collation)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCollationAllCreateOptions.withCollation(String collation)
  type: Method
  summary: >-
    <p>Sets the collation for the SQL Database.</p>

    <p></p>
  syntax:
    content: public WithCreate withCollation(String collation)
    parameters:
    - id: collation
      type: "26831127"
      description: <p>collation to be set for database </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCreate
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEdition.withEdition(DatabaseEditions)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEdition
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEdition.yml
  name: withEdition(DatabaseEditions edition)
  nameWithType: SqlDatabase.DefinitionStages.WithEdition.withEdition(DatabaseEditions edition)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEdition.withEdition(DatabaseEditions edition)
  type: Method
  summary: >-
    <p>Sets the edition for the SQL Database.</p>

    <p></p>
  syntax:
    content: public WithCreate withEdition(DatabaseEditions edition)
    parameters:
    - id: edition
      type: com.microsoft.azure.management.sql.DatabaseEditions
      description: <p>edition to be set for database </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCreate
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.withExistingElasticPool(String)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.yml
  name: withExistingElasticPool(String elasticPoolName)
  nameWithType: SqlDatabase.DefinitionStages.WithElasticPoolName.withExistingElasticPool(String elasticPoolName)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.withExistingElasticPool(String elasticPoolName)
  type: Method
  summary: >-
    <p>Sets the existing elastic pool for the SQLDatabase.</p>

    <p></p>
  syntax:
    content: public WithExistingDatabase withExistingElasticPool(String elasticPoolName)
    parameters:
    - id: elasticPoolName
      type: "26831127"
      description: <p>for the SQL Database </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithExistingDatabase
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.withExistingElasticPool(SqlElasticPool)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.yml
  name: withExistingElasticPool(SqlElasticPool sqlElasticPool)
  nameWithType: SqlDatabase.DefinitionStages.WithElasticPoolName.withExistingElasticPool(SqlElasticPool sqlElasticPool)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.withExistingElasticPool(SqlElasticPool sqlElasticPool)
  type: Method
  summary: >-
    <p>Sets the existing elastic pool for the SQLDatabase.</p>

    <p></p>
  syntax:
    content: public WithExistingDatabase withExistingElasticPool(SqlElasticPool sqlElasticPool)
    parameters:
    - id: sqlElasticPool
      type: com.microsoft.azure.management.sql.SqlElasticPool
      description: <p>for the SQL Database </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithExistingDatabase
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithMaxSizeBytesAllCreateOptions.withMaxSizeBytes(long)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithMaxSizeBytesAllCreateOptions
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithMaxSizeBytesAllCreateOptions.yml
  name: withMaxSizeBytes(long maxSizeBytes)
  nameWithType: SqlDatabase.DefinitionStages.WithMaxSizeBytesAllCreateOptions.withMaxSizeBytes(long maxSizeBytes)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithMaxSizeBytesAllCreateOptions.withMaxSizeBytes(long maxSizeBytes)
  type: Method
  summary: >-
    <p>Sets the max size in bytes for SQL Database.</p>

    <p></p>
  syntax:
    content: public WithCreate withMaxSizeBytes(long maxSizeBytes)
    parameters:
    - id: maxSizeBytes
      type: 0364520f
      description: '<p>max size of the Azure SQL Database expressed in bytes. Note: Only the following sizes are supported (in addition to limitations being placed on each edition): { 100 MB | 500 MB |1 GB | 5 GB | 10 GB | 20 GB | 30 GB … 150 GB | 200 GB … 500 GB } </p>'
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCreate
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.withNewElasticPool(Creatable<SqlElasticPool>)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.yml
  name: withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)
  nameWithType: SqlDatabase.DefinitionStages.WithElasticPoolName.withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)
  type: Method
  summary: >-
    <p>Sets the new elastic pool for the SQLDatabase, this will create a new elastic pool while creating database.</p>

    <p></p>
  syntax:
    content: public WithExistingDatabase withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)
    parameters:
    - id: sqlElasticPool
      type: com.microsoft.azure.management.resources.fluentcore.model.Creatable78504a52com.microsoft.azure.management.sql.SqlElasticPoola08ddfce
      description: <p>creatable definition for new elastic pool to be created for the SQL Database </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithExistingDatabase
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithServiceObjective.withServiceObjective(ServiceObjectiveName)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithServiceObjective
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithServiceObjective.yml
  name: withServiceObjective(ServiceObjectiveName serviceLevelObjective)
  nameWithType: SqlDatabase.DefinitionStages.WithServiceObjective.withServiceObjective(ServiceObjectiveName serviceLevelObjective)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithServiceObjective.withServiceObjective(ServiceObjectiveName serviceLevelObjective)
  type: Method
  summary: >-
    <p>Sets the service level objective for the SQL Database.</p>

    <p></p>
  syntax:
    content: public WithCreate withServiceObjective(ServiceObjectiveName serviceLevelObjective)
    parameters:
    - id: serviceLevelObjective
      type: com.microsoft.azure.management.sql.ServiceObjectiveName
      description: <p>service level objected for the SQL Database </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCreate
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId.withSourceDatabase(String)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId.yml
  name: withSourceDatabase(String sourceDatabaseId)
  nameWithType: SqlDatabase.DefinitionStages.WithSourceDatabaseId.withSourceDatabase(String sourceDatabaseId)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId.withSourceDatabase(String sourceDatabaseId)
  type: Method
  summary: >-
    <p>Sets the resource if of source database for the SQL Database. Collation, Edition, and MaxSizeBytes must remain the same while the link is active. Values specified for these parameters will be ignored.</p>

    <p></p>
  syntax:
    content: public WithCreateMode withSourceDatabase(String sourceDatabaseId)
    parameters:
    - id: sourceDatabaseId
      type: "26831127"
      description: <p>id of the source database </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCreateMode
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId.withSourceDatabase(SqlDatabase)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId.yml
  name: withSourceDatabase(SqlDatabase sourceDatabase)
  nameWithType: SqlDatabase.DefinitionStages.WithSourceDatabaseId.withSourceDatabase(SqlDatabase sourceDatabase)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId.withSourceDatabase(SqlDatabase sourceDatabase)
  type: Method
  summary: >-
    <p>Sets the resource if of source database for the SQL Database. Collation, Edition, and MaxSizeBytes must remain the same while the link is active. Values specified for these parameters will be ignored.</p>

    <p></p>
  syntax:
    content: public WithCreateMode withSourceDatabase(SqlDatabase sourceDatabase)
    parameters:
    - id: sourceDatabase
      type: com.microsoft.azure.management.sql.SqlDatabase
      description: <p>instance of the source database </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCreateMode
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTag(String,String)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.yml
  name: withTag(String key, String value)
  nameWithType: Resource.DefinitionWithTags<T>.withTag(String key, String value)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<T>.withTag(String key, String value)
  type: Method
  summary: <p>Adds a tag to the resource. </p>
  syntax:
    content: public T withTag(String key, String value)
    parameters:
    - id: key
      type: "26831127"
      description: <p>the key for the tag </p>
    - id: value
      type: "26831127"
      description: <p>the value for the tag </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTags(Map<String, String>)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.yml
  name: withTags(Map<String, String> tags)
  nameWithType: Resource.DefinitionWithTags<T>.withTags(Map<String, String> tags)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<T>.withTags(Map<String, String> tags)
  type: Method
  summary: <p>Specifies tags for the resource as a <xref uid="" data-throw-if-not-resolved="false">Map</xref>. </p>
  syntax:
    content: public T withTags(Map<String, String> tags)
    parameters:
    - id: tags
      type: 689c8cb5
      description: <p>a <xref uid="" data-throw-if-not-resolved="false">Map</xref> of tags </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAllDifferentOptions
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAllDifferentOptions.yml
  name: SqlDatabase.DefinitionStages.WithAllDifferentOptions
  nameWithType: SqlDatabase.DefinitionStages.WithAllDifferentOptions
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAllDifferentOptions
  type: Interface
  summary: <p>The SQL database interface with all starting options for definition. </p>
  syntax:
    content: public interface WithAllDifferentOptions
- uid: com.microsoft.azure.management.sql.SqlDatabase.Definition
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabase.Definition.yml
  name: SqlDatabase.Definition
  nameWithType: SqlDatabase.Definition
  fullName: com.microsoft.azure.management.sql.SqlDatabase.Definition
  type: Interface
  summary: <p>Container interface for all the definitions that need to be implemented. </p>
  syntax:
    content: public interface Definition
