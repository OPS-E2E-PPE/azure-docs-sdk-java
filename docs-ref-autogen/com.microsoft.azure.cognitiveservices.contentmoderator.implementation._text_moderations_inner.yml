### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner
  id: _text_moderations_inner
  parent: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
  children:
  - com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.detectLanguage(String,String)
  - com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.detectLanguageAsync(String,String)
  - com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.detectLanguageAsync(String,String,final ServiceCallback<DetectedLanguageInner>)
  - com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.detectLanguageWithServiceResponseAsync(String,String)
  - com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenText(String,String,String)
  - com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenText(String,String,String,Boolean,Boolean,String,Boolean)
  - com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenTextAsync(String,String,String)
  - com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenTextAsync(String,String,String,Boolean,Boolean,String,Boolean)
  - com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenTextAsync(String,String,String,Boolean,Boolean,String,Boolean,final ServiceCallback<ScreenInner>)
  - com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenTextAsync(String,String,String,final ServiceCallback<ScreenInner>)
  - com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenTextWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenTextWithServiceResponseAsync(String,String,String,Boolean,Boolean,String,Boolean)
  - com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.TextModerationsInner(Retrofit,ContentModeratorClientImpl)
  href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.yml
  langs:
  - java
  name: TextModerationsInner
  nameWithType: TextModerationsInner
  fullName: com.microsoft.azure.cognitiveservices.contentmoderator.implementation.TextModerationsInner
  type: Class
  source:
    remote: &o0
      path: cognitiveservices/azure-contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/contentmoderator/implementation/TextModerationsInner.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: cognitiveservices/azure-contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/contentmoderator/implementation/TextModerationsInner.java
    startLine: 30
  package: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
  summary: <p>An instance of this class provides access to all the operations defined in TextModerations. </p>
  syntax: &o1
    content: public class TextModerationsInner
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.detectLanguage(String,String)
  id: detectLanguage(String,String)
  parent: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner
  href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.yml
  langs:
  - java
  name: detectLanguage(String textContentType, String textContent)
  nameWithType: TextModerationsInner.detectLanguage(String textContentType, String textContent)
  fullName: DetectedLanguageInner com.microsoft.azure.cognitiveservices.contentmoderator.implementation.TextModerationsInner.detectLanguage(String textContentType, String textContent)
  overload: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.detectLanguage*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/azure-contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/contentmoderator/implementation/TextModerationsInner.java
    startLine: 275
  package: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
  summary: >-
    <p>This operation will detect the language of given input content. Returns the &lt;a href="http://www-01.sil.org/iso639-3/codes.asp"&gt;ISO 639-3 code&lt;/a&gt; for the predominant language comprising the submitted text. Over 110 languages supported.</p>

    <p></p>
  syntax:
    content: public DetectedLanguageInner detectLanguage(String textContentType, String textContent)
    parameters:
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown' </p>"
    - id: textContent
      type: "26831127"
      description: <p>Content to screen. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._detected_language_inner
      description: <p>the <xref uid="com.microsoft.azure.cognitiveservices.contentmoderator.implementation._detected_language_inner" data-throw-if-not-resolved="false">DetectedLanguageInner</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: com.microsoft.azure.cognitiveservices.contentmoderator._a_p_i_error_exception
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.detectLanguageAsync(String,String)
  id: detectLanguageAsync(String,String)
  parent: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner
  href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.yml
  langs:
  - java
  name: detectLanguageAsync(String textContentType, String textContent)
  nameWithType: TextModerationsInner.detectLanguageAsync(String textContentType, String textContent)
  fullName: Observable<DetectedLanguageInner> com.microsoft.azure.cognitiveservices.contentmoderator.implementation.TextModerationsInner.detectLanguageAsync(String textContentType, String textContent)
  overload: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.detectLanguageAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/azure-contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/contentmoderator/implementation/TextModerationsInner.java
    startLine: 300
  package: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
  summary: >-
    <p>This operation will detect the language of given input content. Returns the &lt;a href="http://www-01.sil.org/iso639-3/codes.asp"&gt;ISO 639-3 code&lt;/a&gt; for the predominant language comprising the submitted text. Over 110 languages supported.</p>

    <p></p>
  syntax:
    content: public Observable<DetectedLanguageInner> detectLanguageAsync(String textContentType, String textContent)
    parameters:
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown' </p>"
    - id: textContent
      type: "26831127"
      description: <p>Content to screen. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.contentmoderator.implementation._detected_language_innera08ddfce
      description: <p>the observable to the <xref uid="com.microsoft.azure.cognitiveservices.contentmoderator.implementation._detected_language_inner" data-throw-if-not-resolved="false">DetectedLanguageInner</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.detectLanguageAsync(String,String,final ServiceCallback<DetectedLanguageInner>)
  id: detectLanguageAsync(String,String,final ServiceCallback<DetectedLanguageInner>)
  parent: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner
  href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.yml
  langs:
  - java
  name: detectLanguageAsync(String textContentType, String textContent, final ServiceCallback<DetectedLanguageInner> serviceCallback)
  nameWithType: TextModerationsInner.detectLanguageAsync(String textContentType, String textContent, final ServiceCallback<DetectedLanguageInner> serviceCallback)
  fullName: ServiceFuture<DetectedLanguageInner> com.microsoft.azure.cognitiveservices.contentmoderator.implementation.TextModerationsInner.detectLanguageAsync(String textContentType, String textContent, final ServiceCallback<DetectedLanguageInner> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.detectLanguageAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/azure-contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/contentmoderator/implementation/TextModerationsInner.java
    startLine: 288
  package: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
  summary: >-
    <p>This operation will detect the language of given input content. Returns the &lt;a href="http://www-01.sil.org/iso639-3/codes.asp"&gt;ISO 639-3 code&lt;/a&gt; for the predominant language comprising the submitted text. Over 110 languages supported.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<DetectedLanguageInner> detectLanguageAsync(String textContentType, String textContent, final ServiceCallback<DetectedLanguageInner> serviceCallback)
    parameters:
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown' </p>"
    - id: textContent
      type: "26831127"
      description: <p>Content to screen. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.contentmoderator.implementation._detected_language_innera08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.contentmoderator.implementation._detected_language_innera08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.detectLanguageWithServiceResponseAsync(String,String)
  id: detectLanguageWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner
  href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.yml
  langs:
  - java
  name: detectLanguageWithServiceResponseAsync(String textContentType, String textContent)
  nameWithType: TextModerationsInner.detectLanguageWithServiceResponseAsync(String textContentType, String textContent)
  fullName: Observable<ServiceResponse<DetectedLanguageInner>> com.microsoft.azure.cognitiveservices.contentmoderator.implementation.TextModerationsInner.detectLanguageWithServiceResponseAsync(String textContentType, String textContent)
  overload: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.detectLanguageWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/azure-contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/contentmoderator/implementation/TextModerationsInner.java
    startLine: 317
  package: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
  summary: >-
    <p>This operation will detect the language of given input content. Returns the &lt;a href="http://www-01.sil.org/iso639-3/codes.asp"&gt;ISO 639-3 code&lt;/a&gt; for the predominant language comprising the submitted text. Over 110 languages supported.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<DetectedLanguageInner>> detectLanguageWithServiceResponseAsync(String textContentType, String textContent)
    parameters:
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown' </p>"
    - id: textContent
      type: "26831127"
      description: <p>Content to screen. </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.contentmoderator.implementation._detected_language_innere7daa122
      description: <p>the observable to the <xref uid="com.microsoft.azure.cognitiveservices.contentmoderator.implementation._detected_language_inner" data-throw-if-not-resolved="false">DetectedLanguageInner</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenText(String,String,String)
  id: screenText(String,String,String)
  parent: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner
  href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.yml
  langs:
  - java
  name: screenText(String language, String textContentType, String textContent)
  nameWithType: TextModerationsInner.screenText(String language, String textContentType, String textContent)
  fullName: ScreenInner com.microsoft.azure.cognitiveservices.contentmoderator.implementation.TextModerationsInner.screenText(String language, String textContentType, String textContent)
  overload: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenText*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/azure-contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/contentmoderator/implementation/TextModerationsInner.java
    startLine: 74
  package: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
  summary: >-
    <p>Detect profanity and match against custom and shared blacklists. Detects profanity in more than 100 languages and match against custom and shared blacklists.</p>

    <p></p>
  syntax:
    content: public ScreenInner screenText(String language, String textContentType, String textContent)
    parameters:
    - id: language
      type: "26831127"
      description: <p>Language of the terms. </p>
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown' </p>"
    - id: textContent
      type: "26831127"
      description: <p>Content to screen. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_inner
      description: <p>the <xref uid="com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_inner" data-throw-if-not-resolved="false">ScreenInner</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: com.microsoft.azure.cognitiveservices.contentmoderator._a_p_i_error_exception
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenText(String,String,String,Boolean,Boolean,String,Boolean)
  id: screenText(String,String,String,Boolean,Boolean,String,Boolean)
  parent: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner
  href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.yml
  langs:
  - java
  name: screenText(String language, String textContentType, String textContent, Boolean autocorrect, Boolean pII, String listId, Boolean classify)
  nameWithType: TextModerationsInner.screenText(String language, String textContentType, String textContent, Boolean autocorrect, Boolean pII, String listId, Boolean classify)
  fullName: ScreenInner com.microsoft.azure.cognitiveservices.contentmoderator.implementation.TextModerationsInner.screenText(String language, String textContentType, String textContent, Boolean autocorrect, Boolean pII, String listId, Boolean classify)
  overload: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenText*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/azure-contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/contentmoderator/implementation/TextModerationsInner.java
    startLine: 170
  package: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
  summary: >-
    <p>Detect profanity and match against custom and shared blacklists. Detects profanity in more than 100 languages and match against custom and shared blacklists.</p>

    <p></p>
  syntax:
    content: public ScreenInner screenText(String language, String textContentType, String textContent, Boolean autocorrect, Boolean pII, String listId, Boolean classify)
    parameters:
    - id: language
      type: "26831127"
      description: <p>Language of the terms. </p>
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown' </p>"
    - id: textContent
      type: "26831127"
      description: <p>Content to screen. </p>
    - id: autocorrect
      type: 866c2227
      description: <p>Autocorrect text. </p>
    - id: pII
      type: 866c2227
      description: <p>Detect personal identifiable information. </p>
    - id: listId
      type: "26831127"
      description: <p>The list Id. </p>
    - id: classify
      type: 866c2227
      description: <p>Classify input. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_inner
      description: <p>the <xref uid="com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_inner" data-throw-if-not-resolved="false">ScreenInner</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: com.microsoft.azure.cognitiveservices.contentmoderator._a_p_i_error_exception
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenTextAsync(String,String,String)
  id: screenTextAsync(String,String,String)
  parent: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner
  href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.yml
  langs:
  - java
  name: screenTextAsync(String language, String textContentType, String textContent)
  nameWithType: TextModerationsInner.screenTextAsync(String language, String textContentType, String textContent)
  fullName: Observable<ScreenInner> com.microsoft.azure.cognitiveservices.contentmoderator.implementation.TextModerationsInner.screenTextAsync(String language, String textContentType, String textContent)
  overload: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenTextAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/azure-contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/contentmoderator/implementation/TextModerationsInner.java
    startLine: 103
  package: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
  summary: >-
    <p>Detect profanity and match against custom and shared blacklists. Detects profanity in more than 100 languages and match against custom and shared blacklists.</p>

    <p></p>
  syntax:
    content: public Observable<ScreenInner> screenTextAsync(String language, String textContentType, String textContent)
    parameters:
    - id: language
      type: "26831127"
      description: <p>Language of the terms. </p>
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown' </p>"
    - id: textContent
      type: "26831127"
      description: <p>Content to screen. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_innera08ddfce
      description: <p>the observable to the <xref uid="com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_inner" data-throw-if-not-resolved="false">ScreenInner</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenTextAsync(String,String,String,Boolean,Boolean,String,Boolean)
  id: screenTextAsync(String,String,String,Boolean,Boolean,String,Boolean)
  parent: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner
  href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.yml
  langs:
  - java
  name: screenTextAsync(String language, String textContentType, String textContent, Boolean autocorrect, Boolean pII, String listId, Boolean classify)
  nameWithType: TextModerationsInner.screenTextAsync(String language, String textContentType, String textContent, Boolean autocorrect, Boolean pII, String listId, Boolean classify)
  fullName: Observable<ScreenInner> com.microsoft.azure.cognitiveservices.contentmoderator.implementation.TextModerationsInner.screenTextAsync(String language, String textContentType, String textContent, Boolean autocorrect, Boolean pII, String listId, Boolean classify)
  overload: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenTextAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/azure-contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/contentmoderator/implementation/TextModerationsInner.java
    startLine: 207
  package: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
  summary: >-
    <p>Detect profanity and match against custom and shared blacklists. Detects profanity in more than 100 languages and match against custom and shared blacklists.</p>

    <p></p>
  syntax:
    content: public Observable<ScreenInner> screenTextAsync(String language, String textContentType, String textContent, Boolean autocorrect, Boolean pII, String listId, Boolean classify)
    parameters:
    - id: language
      type: "26831127"
      description: <p>Language of the terms. </p>
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown' </p>"
    - id: textContent
      type: "26831127"
      description: <p>Content to screen. </p>
    - id: autocorrect
      type: 866c2227
      description: <p>Autocorrect text. </p>
    - id: pII
      type: 866c2227
      description: <p>Detect personal identifiable information. </p>
    - id: listId
      type: "26831127"
      description: <p>The list Id. </p>
    - id: classify
      type: 866c2227
      description: <p>Classify input. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_innera08ddfce
      description: <p>the observable to the <xref uid="com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_inner" data-throw-if-not-resolved="false">ScreenInner</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenTextAsync(String,String,String,Boolean,Boolean,String,Boolean,final ServiceCallback<ScreenInner>)
  id: screenTextAsync(String,String,String,Boolean,Boolean,String,Boolean,final ServiceCallback<ScreenInner>)
  parent: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner
  href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.yml
  langs:
  - java
  name: screenTextAsync(String language, String textContentType, String textContent, Boolean autocorrect, Boolean pII, String listId, Boolean classify, final ServiceCallback<ScreenInner> serviceCallback)
  nameWithType: TextModerationsInner.screenTextAsync(String language, String textContentType, String textContent, Boolean autocorrect, Boolean pII, String listId, Boolean classify, final ServiceCallback<ScreenInner> serviceCallback)
  fullName: ServiceFuture<ScreenInner> com.microsoft.azure.cognitiveservices.contentmoderator.implementation.TextModerationsInner.screenTextAsync(String language, String textContentType, String textContent, Boolean autocorrect, Boolean pII, String listId, Boolean classify, final ServiceCallback<ScreenInner> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenTextAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/azure-contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/contentmoderator/implementation/TextModerationsInner.java
    startLine: 189
  package: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
  summary: >-
    <p>Detect profanity and match against custom and shared blacklists. Detects profanity in more than 100 languages and match against custom and shared blacklists.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<ScreenInner> screenTextAsync(String language, String textContentType, String textContent, Boolean autocorrect, Boolean pII, String listId, Boolean classify, final ServiceCallback<ScreenInner> serviceCallback)
    parameters:
    - id: language
      type: "26831127"
      description: <p>Language of the terms. </p>
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown' </p>"
    - id: textContent
      type: "26831127"
      description: <p>Content to screen. </p>
    - id: autocorrect
      type: 866c2227
      description: <p>Autocorrect text. </p>
    - id: pII
      type: 866c2227
      description: <p>Detect personal identifiable information. </p>
    - id: listId
      type: "26831127"
      description: <p>The list Id. </p>
    - id: classify
      type: 866c2227
      description: <p>Classify input. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_innera08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_innera08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenTextAsync(String,String,String,final ServiceCallback<ScreenInner>)
  id: screenTextAsync(String,String,String,final ServiceCallback<ScreenInner>)
  parent: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner
  href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.yml
  langs:
  - java
  name: screenTextAsync(String language, String textContentType, String textContent, final ServiceCallback<ScreenInner> serviceCallback)
  nameWithType: TextModerationsInner.screenTextAsync(String language, String textContentType, String textContent, final ServiceCallback<ScreenInner> serviceCallback)
  fullName: ServiceFuture<ScreenInner> com.microsoft.azure.cognitiveservices.contentmoderator.implementation.TextModerationsInner.screenTextAsync(String language, String textContentType, String textContent, final ServiceCallback<ScreenInner> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenTextAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/azure-contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/contentmoderator/implementation/TextModerationsInner.java
    startLine: 89
  package: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
  summary: >-
    <p>Detect profanity and match against custom and shared blacklists. Detects profanity in more than 100 languages and match against custom and shared blacklists.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<ScreenInner> screenTextAsync(String language, String textContentType, String textContent, final ServiceCallback<ScreenInner> serviceCallback)
    parameters:
    - id: language
      type: "26831127"
      description: <p>Language of the terms. </p>
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown' </p>"
    - id: textContent
      type: "26831127"
      description: <p>Content to screen. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_innera08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_innera08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenTextWithServiceResponseAsync(String,String,String)
  id: screenTextWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner
  href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.yml
  langs:
  - java
  name: screenTextWithServiceResponseAsync(String language, String textContentType, String textContent)
  nameWithType: TextModerationsInner.screenTextWithServiceResponseAsync(String language, String textContentType, String textContent)
  fullName: Observable<ServiceResponse<ScreenInner>> com.microsoft.azure.cognitiveservices.contentmoderator.implementation.TextModerationsInner.screenTextWithServiceResponseAsync(String language, String textContentType, String textContent)
  overload: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenTextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/azure-contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/contentmoderator/implementation/TextModerationsInner.java
    startLine: 122
  package: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
  summary: >-
    <p>Detect profanity and match against custom and shared blacklists. Detects profanity in more than 100 languages and match against custom and shared blacklists.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<ScreenInner>> screenTextWithServiceResponseAsync(String language, String textContentType, String textContent)
    parameters:
    - id: language
      type: "26831127"
      description: <p>Language of the terms. </p>
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown' </p>"
    - id: textContent
      type: "26831127"
      description: <p>Content to screen. </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_innere7daa122
      description: <p>the observable to the <xref uid="com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_inner" data-throw-if-not-resolved="false">ScreenInner</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenTextWithServiceResponseAsync(String,String,String,Boolean,Boolean,String,Boolean)
  id: screenTextWithServiceResponseAsync(String,String,String,Boolean,Boolean,String,Boolean)
  parent: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner
  href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.yml
  langs:
  - java
  name: screenTextWithServiceResponseAsync(String language, String textContentType, String textContent, Boolean autocorrect, Boolean pII, String listId, Boolean classify)
  nameWithType: TextModerationsInner.screenTextWithServiceResponseAsync(String language, String textContentType, String textContent, Boolean autocorrect, Boolean pII, String listId, Boolean classify)
  fullName: Observable<ServiceResponse<ScreenInner>> com.microsoft.azure.cognitiveservices.contentmoderator.implementation.TextModerationsInner.screenTextWithServiceResponseAsync(String language, String textContentType, String textContent, Boolean autocorrect, Boolean pII, String listId, Boolean classify)
  overload: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenTextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/azure-contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/contentmoderator/implementation/TextModerationsInner.java
    startLine: 230
  package: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
  summary: >-
    <p>Detect profanity and match against custom and shared blacklists. Detects profanity in more than 100 languages and match against custom and shared blacklists.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<ScreenInner>> screenTextWithServiceResponseAsync(String language, String textContentType, String textContent, Boolean autocorrect, Boolean pII, String listId, Boolean classify)
    parameters:
    - id: language
      type: "26831127"
      description: <p>Language of the terms. </p>
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown' </p>"
    - id: textContent
      type: "26831127"
      description: <p>Content to screen. </p>
    - id: autocorrect
      type: 866c2227
      description: <p>Autocorrect text. </p>
    - id: pII
      type: 866c2227
      description: <p>Detect personal identifiable information. </p>
    - id: listId
      type: "26831127"
      description: <p>The list Id. </p>
    - id: classify
      type: 866c2227
      description: <p>Classify input. </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_innere7daa122
      description: <p>the observable to the <xref uid="com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_inner" data-throw-if-not-resolved="false">ScreenInner</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.TextModerationsInner(Retrofit,ContentModeratorClientImpl)
  id: TextModerationsInner(Retrofit,ContentModeratorClientImpl)
  parent: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner
  href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.yml
  langs:
  - java
  name: TextModerationsInner(Retrofit retrofit, ContentModeratorClientImpl client)
  nameWithType: TextModerationsInner.TextModerationsInner(Retrofit retrofit, ContentModeratorClientImpl client)
  fullName: com.microsoft.azure.cognitiveservices.contentmoderator.implementation.TextModerationsInner.TextModerationsInner(Retrofit retrofit, ContentModeratorClientImpl client)
  overload: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.TextModerationsInner*
  type: Constructor
  source:
    remote: *o0
    path: cognitiveservices/azure-contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/contentmoderator/implementation/TextModerationsInner.java
    startLine: 42
  package: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
  summary: >-
    <p>Initializes an instance of <xref uid="com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner" data-throw-if-not-resolved="false">TextModerationsInner</xref>.</p>

    <p></p>
  syntax:
    content: public TextModerationsInner(Retrofit retrofit, ContentModeratorClientImpl client)
    parameters:
    - id: retrofit
      type: 964879b9
      description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    - id: client
      type: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._content_moderator_client_impl
      description: <p>the instance of the service client containing this operation class. </p>
references:
- uid: 964879b9
  spec.java:
  - name: Retrofit
    fullName: Retrofit
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.TextModerationsInner*
  name: TextModerationsInner
  nameWithType: TextModerationsInner.TextModerationsInner
  fullName: com.microsoft.azure.cognitiveservices.contentmoderator.implementation.TextModerationsInner.TextModerationsInner
  package: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: 9b2a4515
  spec.java:
  - name: RuntimeException
    fullName: RuntimeException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenText*
  name: screenText
  nameWithType: TextModerationsInner.screenText
  fullName: ScreenInner com.microsoft.azure.cognitiveservices.contentmoderator.implementation.TextModerationsInner.screenText
  package: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_innera08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_inner
    name: ScreenInner
    fullName: com.microsoft.azure.cognitiveservices.contentmoderator.implementation.ScreenInner
    href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_inner.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_innera08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_inner
    name: ScreenInner
    fullName: com.microsoft.azure.cognitiveservices.contentmoderator.implementation.ScreenInner
    href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_inner.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenTextAsync*
  name: screenTextAsync
  nameWithType: TextModerationsInner.screenTextAsync
  fullName: ServiceFuture<ScreenInner> com.microsoft.azure.cognitiveservices.contentmoderator.implementation.TextModerationsInner.screenTextAsync
  package: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_innera08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_inner
    name: ScreenInner
    fullName: com.microsoft.azure.cognitiveservices.contentmoderator.implementation.ScreenInner
    href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_inner.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_innere7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_inner
    name: ScreenInner
    fullName: com.microsoft.azure.cognitiveservices.contentmoderator.implementation.ScreenInner
    href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_inner.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.screenTextWithServiceResponseAsync*
  name: screenTextWithServiceResponseAsync
  nameWithType: TextModerationsInner.screenTextWithServiceResponseAsync
  fullName: Observable<ServiceResponse<ScreenInner>> com.microsoft.azure.cognitiveservices.contentmoderator.implementation.TextModerationsInner.screenTextWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.detectLanguage*
  name: detectLanguage
  nameWithType: TextModerationsInner.detectLanguage
  fullName: DetectedLanguageInner com.microsoft.azure.cognitiveservices.contentmoderator.implementation.TextModerationsInner.detectLanguage
  package: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.contentmoderator.implementation._detected_language_innera08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._detected_language_inner
    name: DetectedLanguageInner
    fullName: com.microsoft.azure.cognitiveservices.contentmoderator.implementation.DetectedLanguageInner
    href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._detected_language_inner.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.contentmoderator.implementation._detected_language_innera08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._detected_language_inner
    name: DetectedLanguageInner
    fullName: com.microsoft.azure.cognitiveservices.contentmoderator.implementation.DetectedLanguageInner
    href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._detected_language_inner.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.detectLanguageAsync*
  name: detectLanguageAsync
  nameWithType: TextModerationsInner.detectLanguageAsync
  fullName: ServiceFuture<DetectedLanguageInner> com.microsoft.azure.cognitiveservices.contentmoderator.implementation.TextModerationsInner.detectLanguageAsync
  package: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.contentmoderator.implementation._detected_language_innera08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._detected_language_inner
    name: DetectedLanguageInner
    fullName: com.microsoft.azure.cognitiveservices.contentmoderator.implementation.DetectedLanguageInner
    href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._detected_language_inner.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.contentmoderator.implementation._detected_language_innere7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._detected_language_inner
    name: DetectedLanguageInner
    fullName: com.microsoft.azure.cognitiveservices.contentmoderator.implementation.DetectedLanguageInner
    href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._detected_language_inner.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.detectLanguageWithServiceResponseAsync*
  name: detectLanguageWithServiceResponseAsync
  nameWithType: TextModerationsInner.detectLanguageWithServiceResponseAsync
  fullName: Observable<ServiceResponse<DetectedLanguageInner>> com.microsoft.azure.cognitiveservices.contentmoderator.implementation.TextModerationsInner.detectLanguageWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._content_moderator_client_impl
  parent: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
  href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._content_moderator_client_impl.yml
  name: ContentModeratorClientImpl
  nameWithType: ContentModeratorClientImpl
  fullName: com.microsoft.azure.cognitiveservices.contentmoderator.implementation.ContentModeratorClientImpl
  type: Class
  summary: <p>Initializes a new instance of the <xref uid="com.microsoft.azure.cognitiveservices.contentmoderator.implementation._content_moderator_client_impl" data-throw-if-not-resolved="false">ContentModeratorClientImpl</xref> class. </p>
  syntax:
    content: public class ContentModeratorClientImpl
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner
  parent: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
  href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._text_moderations_inner.yml
  name: TextModerationsInner
  nameWithType: TextModerationsInner
  fullName: com.microsoft.azure.cognitiveservices.contentmoderator.implementation.TextModerationsInner
  type: Class
  summary: <p>An instance of this class provides access to all the operations defined in TextModerations. </p>
  syntax: *o1
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_inner
  parent: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
  href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._screen_inner.yml
  name: ScreenInner
  nameWithType: ScreenInner
  fullName: com.microsoft.azure.cognitiveservices.contentmoderator.implementation.ScreenInner
  type: Class
  summary: <p>The response for a Screen text request. </p>
  syntax:
    content: public class ScreenInner
- uid: com.microsoft.azure.cognitiveservices.contentmoderator._a_p_i_error_exception
  parent: com.microsoft.azure.cognitiveservices.contentmoderator
  href: com.microsoft.azure.cognitiveservices.contentmoderator._a_p_i_error_exception.yml
  name: APIErrorException
  nameWithType: APIErrorException
  fullName: com.microsoft.azure.cognitiveservices.contentmoderator.APIErrorException
  type: Class
  summary: <p>Exception thrown for an invalid response with <xref uid="com.microsoft.azure.cognitiveservices.contentmoderator._a_p_i_error" data-throw-if-not-resolved="false">APIError</xref> information. </p>
  syntax:
    content: public class APIErrorException
- uid: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._detected_language_inner
  parent: com.microsoft.azure.cognitiveservices.contentmoderator.implementation
  href: com.microsoft.azure.cognitiveservices.contentmoderator.implementation._detected_language_inner.yml
  name: DetectedLanguageInner
  nameWithType: DetectedLanguageInner
  fullName: com.microsoft.azure.cognitiveservices.contentmoderator.implementation.DetectedLanguageInner
  type: Class
  summary: <p>Detect language result. </p>
  syntax:
    content: public class DetectedLanguageInner
