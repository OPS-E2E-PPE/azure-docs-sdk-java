### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl
  id: TextModerationsImpl
  parent: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation
  children:
  - com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.detectLanguage(String,byte [])
  - com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.detectLanguageAsync(String,byte [])
  - com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.detectLanguageAsync(String,byte [],final ServiceCallback<DetectedLanguage>)
  - com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.detectLanguageWithServiceResponseAsync(String,byte [])
  - com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenText()
  - com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenText(String,byte [],ScreenTextOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenTextAsync(String,byte [],ScreenTextOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenTextAsync(String,byte [],ScreenTextOptionalParameter,final ServiceCallback<Screen>)
  - com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenTextWithServiceResponseAsync(String,byte [],ScreenTextOptionalParameter)
  - com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenTextWithServiceResponseAsync(String,byte [],String,Boolean,Boolean,String,Boolean)
  - com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.TextModerationsImpl(Retrofit,ContentModeratorClientImpl)
  href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.yml
  langs:
  - java
  name: TextModerationsImpl
  nameWithType: TextModerationsImpl
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl
  type: Class
  source:
    remote: &o0
      path: cognitiveservices/data-plane/vision/contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/vision/contentmoderator/implementation/TextModerationsImpl.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: cognitiveservices/data-plane/vision/contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/vision/contentmoderator/implementation/TextModerationsImpl.java
    startLine: 38
  package: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation
  summary: "<p>An instance of this class provides access to all the operations defined in TextModerations. </p>"
  syntax:
    content: public class TextModerationsImpl implements TextModerations
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.detectLanguage(String,byte [])
  id: detectLanguage(String,byte [])
  parent: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl
  href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.yml
  langs:
  - java
  name: detectLanguage(String textContentType, byte[] textContent)
  nameWithType: TextModerationsImpl.detectLanguage(String textContentType, byte[] textContent)
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.detectLanguage(String textContentType, byte[] textContent)
  overload: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.detectLanguage*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/vision/contentmoderator/implementation/TextModerationsImpl.java
    startLine: 291
  package: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation
  summary: "<p>This operation will detect the language of given input content. Returns the &lt;a href=\"http://www-01.sil.org/iso639-3/codes.asp\"&gt;ISO 639-3 code&lt;/a&gt; for the predominant language comprising the submitted text. Over 110 languages supported.</p>\r\n<p></p>"
  syntax:
    content: public DetectedLanguage detectLanguage(String textContentType, byte[] textContent)
    parameters:
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown' </p>"
    - id: textContent
      type: ccd9418d
      description: <p>Content to screen. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguage
      description: <p>the DetectedLanguage object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.detectLanguage(String,byte [])
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 3690e14b
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.detectLanguageAsync(String,byte [])
  id: detectLanguageAsync(String,byte [])
  parent: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl
  href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.yml
  langs:
  - java
  name: detectLanguageAsync(String textContentType, byte[] textContent)
  nameWithType: TextModerationsImpl.detectLanguageAsync(String textContentType, byte[] textContent)
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.detectLanguageAsync(String textContentType, byte[] textContent)
  overload: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.detectLanguageAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/vision/contentmoderator/implementation/TextModerationsImpl.java
    startLine: 316
  package: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation
  summary: "<p>This operation will detect the language of given input content. Returns the &lt;a href=\"http://www-01.sil.org/iso639-3/codes.asp\"&gt;ISO 639-3 code&lt;/a&gt; for the predominant language comprising the submitted text. Over 110 languages supported.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DetectedLanguage> detectLanguageAsync(String textContentType, byte[] textContent)
    parameters:
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown' </p>"
    - id: textContent
      type: ccd9418d
      description: <p>Content to screen. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguagea08ddfce
      description: <p>the observable to the DetectedLanguage object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.detectLanguageAsync(String,byte [])
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.detectLanguageAsync(String,byte [],final ServiceCallback<DetectedLanguage>)
  id: detectLanguageAsync(String,byte [],final ServiceCallback<DetectedLanguage>)
  parent: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl
  href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.yml
  langs:
  - java
  name: detectLanguageAsync(String textContentType, byte[] textContent, final ServiceCallback<DetectedLanguage> serviceCallback)
  nameWithType: TextModerationsImpl.detectLanguageAsync(String textContentType, byte[] textContent, final ServiceCallback<DetectedLanguage> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.detectLanguageAsync(String textContentType, byte[] textContent, final ServiceCallback<DetectedLanguage> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.detectLanguageAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/vision/contentmoderator/implementation/TextModerationsImpl.java
    startLine: 304
  package: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation
  summary: "<p>This operation will detect the language of given input content. Returns the &lt;a href=\"http://www-01.sil.org/iso639-3/codes.asp\"&gt;ISO 639-3 code&lt;/a&gt; for the predominant language comprising the submitted text. Over 110 languages supported.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<DetectedLanguage> detectLanguageAsync(String textContentType, byte[] textContent, final ServiceCallback<DetectedLanguage> serviceCallback)
    parameters:
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown' </p>"
    - id: textContent
      type: ccd9418d
      description: <p>Content to screen. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguagea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguagea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.detectLanguageWithServiceResponseAsync(String,byte [])
  id: detectLanguageWithServiceResponseAsync(String,byte [])
  parent: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl
  href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.yml
  langs:
  - java
  name: detectLanguageWithServiceResponseAsync(String textContentType, byte[] textContent)
  nameWithType: TextModerationsImpl.detectLanguageWithServiceResponseAsync(String textContentType, byte[] textContent)
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.detectLanguageWithServiceResponseAsync(String textContentType, byte[] textContent)
  overload: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.detectLanguageWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/vision/contentmoderator/implementation/TextModerationsImpl.java
    startLine: 333
  package: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation
  summary: "<p>This operation will detect the language of given input content. Returns the &lt;a href=\"http://www-01.sil.org/iso639-3/codes.asp\"&gt;ISO 639-3 code&lt;/a&gt; for the predominant language comprising the submitted text. Over 110 languages supported.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DetectedLanguage>> detectLanguageWithServiceResponseAsync(String textContentType, byte[] textContent)
    parameters:
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown' </p>"
    - id: textContent
      type: ccd9418d
      description: <p>Content to screen. </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguagee7daa122
      description: <p>the observable to the DetectedLanguage object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenText()
  id: screenText()
  parent: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl
  href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.yml
  langs:
  - java
  name: screenText()
  nameWithType: TextModerationsImpl.screenText()
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenText()
  overload: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenText*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/vision/contentmoderator/implementation/TextModerationsImpl.java
    startLine: 198
  package: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation
  summary: "<p>Detect profanity and match against custom and shared blacklists. Detects profanity in more than 100 languages and match against custom and shared blacklists.</p>\r\n<p></p>"
  syntax:
    content: public TextModerationsScreenTextParameters screenText()
    return:
      type: d7a74ddb
      description: <p>the first stage of the screenText call </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.screenText()
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenText(String,byte [],ScreenTextOptionalParameter)
  id: screenText(String,byte [],ScreenTextOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl
  href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.yml
  langs:
  - java
  name: screenText(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
  nameWithType: TextModerationsImpl.screenText(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenText(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenText*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/vision/contentmoderator/implementation/TextModerationsImpl.java
    startLine: 83
  package: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation
  summary: "<p>Detect profanity and match against custom and shared blacklists. Detects profanity in more than 100 languages and match against custom and shared blacklists.</p>\r\n<p></p>"
  syntax:
    content: public Screen screenText(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
    parameters:
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown' </p>"
    - id: textContent
      type: ccd9418d
      description: <p>Content to screen. </p>
    - id: screenTextOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.ScreenTextOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen
      description: <p>the Screen object if successful. </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.screenText(String,byte [],ScreenTextOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: 3690e14b
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenTextAsync(String,byte [],ScreenTextOptionalParameter)
  id: screenTextAsync(String,byte [],ScreenTextOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl
  href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.yml
  langs:
  - java
  name: screenTextAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
  nameWithType: TextModerationsImpl.screenTextAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenTextAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenTextAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/vision/contentmoderator/implementation/TextModerationsImpl.java
    startLine: 112
  package: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation
  summary: "<p>Detect profanity and match against custom and shared blacklists. Detects profanity in more than 100 languages and match against custom and shared blacklists.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Screen> screenTextAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
    parameters:
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown' </p>"
    - id: textContent
      type: ccd9418d
      description: <p>Content to screen. </p>
    - id: screenTextOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.ScreenTextOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screena08ddfce
      description: <p>the observable to the Screen object </p>
  overridden: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.screenTextAsync(String,byte [],ScreenTextOptionalParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenTextAsync(String,byte [],ScreenTextOptionalParameter,final ServiceCallback<Screen>)
  id: screenTextAsync(String,byte [],ScreenTextOptionalParameter,final ServiceCallback<Screen>)
  parent: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl
  href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.yml
  langs:
  - java
  name: screenTextAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter, final ServiceCallback<Screen> serviceCallback)
  nameWithType: TextModerationsImpl.screenTextAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter, final ServiceCallback<Screen> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenTextAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter, final ServiceCallback<Screen> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenTextAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/vision/contentmoderator/implementation/TextModerationsImpl.java
    startLine: 98
  package: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation
  summary: "<p>Detect profanity and match against custom and shared blacklists. Detects profanity in more than 100 languages and match against custom and shared blacklists.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Screen> screenTextAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter, final ServiceCallback<Screen> serviceCallback)
    parameters:
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown' </p>"
    - id: textContent
      type: ccd9418d
      description: <p>Content to screen. </p>
    - id: screenTextOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.ScreenTextOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screena08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screena08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenTextWithServiceResponseAsync(String,byte [],ScreenTextOptionalParameter)
  id: screenTextWithServiceResponseAsync(String,byte [],ScreenTextOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl
  href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.yml
  langs:
  - java
  name: screenTextWithServiceResponseAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
  nameWithType: TextModerationsImpl.screenTextWithServiceResponseAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenTextWithServiceResponseAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenTextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/vision/contentmoderator/implementation/TextModerationsImpl.java
    startLine: 131
  package: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation
  summary: "<p>Detect profanity and match against custom and shared blacklists. Detects profanity in more than 100 languages and match against custom and shared blacklists.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Screen>> screenTextWithServiceResponseAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
    parameters:
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown' </p>"
    - id: textContent
      type: ccd9418d
      description: <p>Content to screen. </p>
    - id: screenTextOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.ScreenTextOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screene7daa122
      description: <p>the observable to the Screen object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenTextWithServiceResponseAsync(String,byte [],String,Boolean,Boolean,String,Boolean)
  id: screenTextWithServiceResponseAsync(String,byte [],String,Boolean,Boolean,String,Boolean)
  parent: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl
  href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.yml
  langs:
  - java
  name: screenTextWithServiceResponseAsync(String textContentType, byte[] textContent, String language, Boolean autocorrect, Boolean pII, String listId, Boolean classify)
  nameWithType: TextModerationsImpl.screenTextWithServiceResponseAsync(String textContentType, byte[] textContent, String language, Boolean autocorrect, Boolean pII, String listId, Boolean classify)
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenTextWithServiceResponseAsync(String textContentType, byte[] textContent, String language, Boolean autocorrect, Boolean pII, String listId, Boolean classify)
  overload: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenTextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/vision/contentmoderator/implementation/TextModerationsImpl.java
    startLine: 164
  package: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation
  summary: "<p>Detect profanity and match against custom and shared blacklists. Detects profanity in more than 100 languages and match against custom and shared blacklists.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Screen>> screenTextWithServiceResponseAsync(String textContentType, byte[] textContent, String language, Boolean autocorrect, Boolean pII, String listId, Boolean classify)
    parameters:
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown' </p>"
    - id: textContent
      type: ccd9418d
      description: <p>Content to screen. </p>
    - id: language
      type: "26831127"
      description: <p>Language of the text. </p>
    - id: autocorrect
      type: 866c2227
      description: <p>Autocorrect text. </p>
    - id: pII
      type: 866c2227
      description: <p>Detect personal identifiable information. </p>
    - id: listId
      type: "26831127"
      description: <p>The list Id. </p>
    - id: classify
      type: 866c2227
      description: <p>Classify input. </p>
    return:
      type: fc480ba2com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screene7daa122
      description: <p>the observable to the Screen object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.TextModerationsImpl(Retrofit,ContentModeratorClientImpl)
  id: TextModerationsImpl(Retrofit,ContentModeratorClientImpl)
  parent: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl
  href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.yml
  langs:
  - java
  name: TextModerationsImpl(Retrofit retrofit, ContentModeratorClientImpl client)
  nameWithType: TextModerationsImpl.TextModerationsImpl(Retrofit retrofit, ContentModeratorClientImpl client)
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.TextModerationsImpl(Retrofit retrofit, ContentModeratorClientImpl client)
  overload: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.TextModerationsImpl*
  type: Constructor
  source:
    remote: *o0
    path: cognitiveservices/data-plane/vision/contentmoderator/src/main/java/com/microsoft/azure/cognitiveservices/vision/contentmoderator/implementation/TextModerationsImpl.java
    startLine: 50
  package: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation
  summary: "<p>Initializes an instance of TextModerationsImpl.</p>\r\n<p></p>"
  syntax:
    content: public TextModerationsImpl(Retrofit retrofit, ContentModeratorClientImpl client)
    parameters:
    - id: retrofit
      type: 964879b9
      description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    - id: client
      type: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.ContentModeratorClientImpl
      description: <p>the instance of the service client containing this operation class. </p>
references:
- uid: 964879b9
  spec.java:
  - name: Retrofit
    fullName: Retrofit
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.TextModerationsImpl*
  name: TextModerationsImpl
  nameWithType: TextModerationsImpl.TextModerationsImpl
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.TextModerationsImpl
  package: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: 3690e14b
  spec.java:
  - name: APIErrorException
    fullName: APIErrorException
- uid: 9b2a4515
  spec.java:
  - name: RuntimeException
    fullName: RuntimeException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenText*
  name: screenText
  nameWithType: TextModerationsImpl.screenText
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenText
  package: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screena08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen
    name: Screen
    fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen
    href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screena08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen
    name: Screen
    fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen
    href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenTextAsync*
  name: screenTextAsync
  nameWithType: TextModerationsImpl.screenTextAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenTextAsync
  package: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screena08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen
    name: Screen
    fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen
    href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screene7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen
    name: Screen
    fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen
    href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenTextWithServiceResponseAsync*
  name: screenTextWithServiceResponseAsync
  nameWithType: TextModerationsImpl.screenTextWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.screenTextWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: d7a74ddb
  spec.java:
  - name: TextModerationsScreenTextParameters
    fullName: TextModerationsScreenTextParameters
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.detectLanguage*
  name: detectLanguage
  nameWithType: TextModerationsImpl.detectLanguage
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.detectLanguage
  package: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation
- uid: 897eb10acom.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguagea08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguage
    name: DetectedLanguage
    fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguage
    href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguage.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguagea08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguage
    name: DetectedLanguage
    fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguage
    href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguage.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.detectLanguageAsync*
  name: detectLanguageAsync
  nameWithType: TextModerationsImpl.detectLanguageAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.detectLanguageAsync
  package: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation
- uid: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguagea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguage
    name: DetectedLanguage
    fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguage
    href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguage.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguagee7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguage
    name: DetectedLanguage
    fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguage
    href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguage.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.detectLanguageWithServiceResponseAsync*
  name: detectLanguageWithServiceResponseAsync
  nameWithType: TextModerationsImpl.detectLanguageWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.TextModerationsImpl.detectLanguageWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations
  parent: com.microsoft.azure.cognitiveservices.vision.contentmoderator
  href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.yml
  name: TextModerations
  nameWithType: TextModerations
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations
  type: Interface
  summary: <p>An instance of this class provides access to all the operations defined in TextModerations. </p>
  syntax:
    content: public interface TextModerations
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.ContentModeratorClientImpl
  parent: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation
  href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.ContentModeratorClientImpl.yml
  name: ContentModeratorClientImpl
  nameWithType: ContentModeratorClientImpl
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation.ContentModeratorClientImpl
  type: Class
  summary: <p>Initializes a new instance of the ContentModeratorClientImpl class. </p>
  syntax:
    content: public class ContentModeratorClientImpl implements ContentModeratorClient
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen
  parent: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models
  href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen.yml
  name: Screen
  nameWithType: Screen
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen
  type: Class
  summary: <p>The response for a Screen text request. </p>
  syntax:
    content: public class Screen
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.screenText(String,byte [],ScreenTextOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations
  href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.yml
  name: screenText(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
  nameWithType: TextModerations.screenText(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.screenText(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
  type: Method
  summary: >-
    <p>Detect profanity and match against custom and shared blacklists. Detects profanity in more than 100 languages and match against custom and shared blacklists.</p>

    <p></p>
  syntax:
    content: public Screen screenText(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
    parameters:
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown'. </p>"
    - id: textContent
      type: ccd9418d
      description: <p>Content to screen. </p>
    - id: screenTextOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.ScreenTextOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screen
      description: <p>the Screen object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.ScreenTextOptionalParameter
  parent: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models
  href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.ScreenTextOptionalParameter.yml
  name: ScreenTextOptionalParameter
  nameWithType: ScreenTextOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.ScreenTextOptionalParameter
  type: Class
  summary: <p>The ScreenTextOptionalParameter model. </p>
  syntax:
    content: public class ScreenTextOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.screenTextAsync(String,byte [],ScreenTextOptionalParameter)
  parent: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations
  href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.yml
  name: screenTextAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
  nameWithType: TextModerations.screenTextAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.screenTextAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
  type: Method
  summary: >-
    <p>Detect profanity and match against custom and shared blacklists. Detects profanity in more than 100 languages and match against custom and shared blacklists.</p>

    <p></p>
  syntax:
    content: public Observable<Screen> screenTextAsync(String textContentType, byte[] textContent, ScreenTextOptionalParameter screenTextOptionalParameter)
    parameters:
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown'. </p>"
    - id: textContent
      type: ccd9418d
      description: <p>Content to screen. </p>
    - id: screenTextOptionalParameter
      type: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.ScreenTextOptionalParameter
      description: <p>the object representing the optional parameters to be set before calling this API </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Screena08ddfce
      description: <p>the observable to the Screen object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.screenText()
  parent: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations
  href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.yml
  name: screenText()
  nameWithType: TextModerations.screenText()
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.screenText()
  type: Method
  summary: >-
    <p>Detect profanity and match against custom and shared blacklists. Detects profanity in more than 100 languages and match against custom and shared blacklists.</p>

    <p></p>
  syntax:
    content: public TextModerationsScreenTextDefinitionStages.WithTextContentType screenText()
    return:
      type: 34d7a07f
      description: <p>the first stage of the screenText call </p>
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguage
  parent: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models
  href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguage.yml
  name: DetectedLanguage
  nameWithType: DetectedLanguage
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguage
  type: Class
  summary: <p>Detect language result. </p>
  syntax:
    content: public class DetectedLanguage
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.detectLanguage(String,byte [])
  parent: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations
  href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.yml
  name: detectLanguage(String textContentType, byte[] textContent)
  nameWithType: TextModerations.detectLanguage(String textContentType, byte[] textContent)
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.detectLanguage(String textContentType, byte[] textContent)
  type: Method
  summary: >-
    <p>This operation will detect the language of given input content. Returns the &lt;a href="http://www-01.sil.org/iso639-3/codes.asp"&gt;ISO 639-3 code&lt;/a&gt; for the predominant language comprising the submitted text. Over 110 languages supported.</p>

    <p></p>
  syntax:
    content: public DetectedLanguage detectLanguage(String textContentType, byte[] textContent)
    parameters:
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown'. </p>"
    - id: textContent
      type: ccd9418d
      description: <p>Content to screen. </p>
    return:
      type: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguage
      description: <p>the DetectedLanguage object if successful. </p>
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.detectLanguageAsync(String,byte [])
  parent: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations
  href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.yml
  name: detectLanguageAsync(String textContentType, byte[] textContent)
  nameWithType: TextModerations.detectLanguageAsync(String textContentType, byte[] textContent)
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations.detectLanguageAsync(String textContentType, byte[] textContent)
  type: Method
  summary: >-
    <p>This operation will detect the language of given input content. Returns the &lt;a href="http://www-01.sil.org/iso639-3/codes.asp"&gt;ISO 639-3 code&lt;/a&gt; for the predominant language comprising the submitted text. Over 110 languages supported.</p>

    <p></p>
  syntax:
    content: public Observable<DetectedLanguage> detectLanguageAsync(String textContentType, byte[] textContent)
    parameters:
    - id: textContentType
      type: "26831127"
      description: "<p>The content type. Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown'. </p>"
    - id: textContent
      type: ccd9418d
      description: <p>Content to screen. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguagea08ddfce
      description: <p>the observable to the DetectedLanguage object </p>
- uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
  parent: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models
  href: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.APIErrorException.yml
  name: APIErrorException
  nameWithType: APIErrorException
  fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
  type: Class
  summary: <p>Exception thrown for an invalid response with APIError information. </p>
  syntax:
    content: public class APIErrorException
