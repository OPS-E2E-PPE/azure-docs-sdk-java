### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  id: AsyncDocumentClient
  parent: com.microsoft.azure.cosmosdb.rx
  children:
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.close()
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createAttachment(String,Attachment,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createAttachment(String,InputStream,MediaOptions,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createCollection(String,DocumentCollection,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDatabase(Database,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDocument(String,Object,RequestOptions,boolean)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createPermission(String,Permission,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createStoredProcedure(String,StoredProcedure,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createTrigger(String,Trigger,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUser(String,User,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUserDefinedFunction(String,UserDefinedFunction,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteAttachment(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteCollection(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteConflict(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDatabase(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDocument(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deletePermission(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteStoredProcedure(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteTrigger(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUser(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUserDefinedFunction(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.executeStoredProcedure(String,Object [])
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.executeStoredProcedure(String,RequestOptions,Object [])
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getConnectionPolicy()
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getDatabaseAccount()
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getReadEndpoint()
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getServiceEndpoint()
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getWriteEndpoint()
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryAttachments(String,SqlQuerySpec,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryAttachments(String,String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryCollections(String,SqlQuerySpec,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryCollections(String,String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryConflicts(String,SqlQuerySpec,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryConflicts(String,String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDatabases(SqlQuerySpec,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDatabases(String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocumentChangeFeed(String,ChangeFeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocuments(String,SqlQuerySpec,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocuments(String,String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryOffers(SqlQuerySpec,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryOffers(String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryPermissions(String,SqlQuerySpec,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryPermissions(String,String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryStoredProcedures(String,SqlQuerySpec,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryStoredProcedures(String,String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryTriggers(String,SqlQuerySpec,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryTriggers(String,String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUserDefinedFunctions(String,SqlQuerySpec,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUserDefinedFunctions(String,String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUsers(String,SqlQuerySpec,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUsers(String,String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachment(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachments(String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollection(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollections(String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflict(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflicts(String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabase(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabases(FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocument(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocuments(String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readMedia(String)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffer(String)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffers(FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPartitionKeyRanges(String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermission(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermissions(String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedure(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedures(String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTrigger(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTriggers(String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUser(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunction(String,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunctions(String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUsers(String,FeedOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceAttachment(Attachment,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceCollection(DocumentCollection,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceDocument(Document,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceDocument(String,Object,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceOffer(Offer)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replacePermission(Permission,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceStoredProcedure(StoredProcedure,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceTrigger(Trigger,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUser(User,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUserDefinedFunction(UserDefinedFunction,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.updateMedia(String,InputStream,MediaOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertAttachment(String,Attachment,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertAttachment(String,InputStream,MediaOptions,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertDocument(String,Object,RequestOptions,boolean)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertPermission(String,Permission,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertStoredProcedure(String,StoredProcedure,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertTrigger(String,Trigger,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUser(String,User,RequestOptions)
  - com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUserDefinedFunction(String,UserDefinedFunction,RequestOptions)
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: AsyncDocumentClient
  nameWithType: AsyncDocumentClient
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  type: Interface
  source:
    remote: &o0
      path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
      branch: master
      repo: https://github.com/Azure/azure-cosmosdb-java
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 85
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Provides a client-side logical representation of the Azure Cosmos DB database service. This async client is used to configure and execute requests against the service.</p>\r\n<p>\r\n  <xref uid=\"com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient\" data-throw-if-not-resolved=\"false\">AsyncDocumentClient</xref> async APIs return <a href=\"https://github.com/ReactiveX/RxJava\">rxJava</a>'s<code>Observable \r\n    </code> , and so you can use rxJava <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> functionalities. <b>The async <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> based APIs perform the requested operation only after subscription.</b></p>\r\n<p>The service client encapsulates the endpoint and credentials used to access the Cosmos DB service.</p>\r\n<p>To instantiate you can use the <xref uid=\"com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.Builder\" data-throw-if-not-resolved=\"false\">Builder</xref><pre><code>AsyncDocumentClient client = new AsyncDocumentClient.Builder()\r\n            .withServiceEndpoint(serviceEndpoint)\r\n            .withMasterKey(masterKey)\r\n            .withConnectionPolicy(ConnectionPolicy.GetDefault())\r\n            .withConsistencyLevel(ConsistencyLevel.Session)\r\n            .build();\r\n    </code></pre></p>"
  syntax: &o1
    content: public interface AsyncDocumentClient
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.close()
  id: close()
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: close()
  nameWithType: AsyncDocumentClient.close()
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.close()
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.close*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1449
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Close this <xref uid=\"com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient\" data-throw-if-not-resolved=\"false\">AsyncDocumentClient</xref> instance and cleans up the resources. </p>"
  syntax:
    content: public void close()
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createAttachment(String,Attachment,RequestOptions)
  id: createAttachment(String,Attachment,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: createAttachment(String documentLink, Attachment attachment, RequestOptions options)
  nameWithType: AsyncDocumentClient.createAttachment(String documentLink, Attachment attachment, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createAttachment(String documentLink, Attachment attachment, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createAttachment*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 945
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Creates an attachment.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the created attachment. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Attachment>> createAttachment(String documentLink, Attachment attachment, RequestOptions options)
    parameters:
    - id: documentLink
      type: "26831127"
      description: <p>the document link. </p>
    - id: attachment
      type: 7621cbe9
      description: <p>the attachment to create. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 07f7fb21
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the created attachment or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createAttachment(String,InputStream,MediaOptions,RequestOptions)
  id: createAttachment(String,InputStream,MediaOptions,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: createAttachment(String documentLink, InputStream mediaStream, MediaOptions options, RequestOptions requestOptions)
  nameWithType: AsyncDocumentClient.createAttachment(String documentLink, InputStream mediaStream, MediaOptions options, RequestOptions requestOptions)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createAttachment(String documentLink, InputStream mediaStream, MediaOptions options, RequestOptions requestOptions)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createAttachment*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1073
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Creates an attachment.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the created attachment. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Attachment>> createAttachment(String documentLink, InputStream mediaStream, MediaOptions options, RequestOptions requestOptions)
    parameters:
    - id: documentLink
      type: "26831127"
      description: <p>the document link. </p>
    - id: mediaStream
      type: 76fcb9b7
      description: <p>the media stream for creating the attachment. </p>
    - id: options
      type: ca2971d4
      description: <p>the media options. </p>
    - id: requestOptions
      type: e3133905
      description: <p>the request options </p>
    return:
      type: 07f7fb21
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the created attachment or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createCollection(String,DocumentCollection,RequestOptions)
  id: createCollection(String,DocumentCollection,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: createCollection(String databaseLink, DocumentCollection collection, RequestOptions options)
  nameWithType: AsyncDocumentClient.createCollection(String databaseLink, DocumentCollection collection, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createCollection(String databaseLink, DocumentCollection collection, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createCollection*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 336
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Creates a document collection.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the created collection. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<DocumentCollection>> createCollection(String databaseLink, DocumentCollection collection, RequestOptions options)
    parameters:
    - id: databaseLink
      type: "26831127"
      description: <p>the database link. </p>
    - id: collection
      type: ee50540d
      description: <p>the collection. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 537a7767
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the created collection or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDatabase(Database,RequestOptions)
  id: createDatabase(Database,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: createDatabase(Database database, RequestOptions options)
  nameWithType: AsyncDocumentClient.createDatabase(Database database, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDatabase(Database database, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDatabase*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 258
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Creates a database.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the created database. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Database>> createDatabase(Database database, RequestOptions options)
    parameters:
    - id: database
      type: 07db07e3
      description: <p>the database. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 90e964d0
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the created database or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDocument(String,Object,RequestOptions,boolean)
  id: createDocument(String,Object,RequestOptions,boolean)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: createDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)
  nameWithType: AsyncDocumentClient.createDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDocument*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 435
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Creates a document.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the created document. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Document>> createDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the link to the parent document collection. </p>
    - id: document
      type: "79317049"
      description: <p>the document represented as a POJO or Document object. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    - id: disableAutomaticIdGeneration
      type: 4fc6e284
      description: <p>the flag for disabling automatic id generation. </p>
    return:
      type: f538a224
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the created document or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createPermission(String,Permission,RequestOptions)
  id: createPermission(String,Permission,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: createPermission(String userLink, Permission permission, RequestOptions options)
  nameWithType: AsyncDocumentClient.createPermission(String userLink, Permission permission, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createPermission(String userLink, Permission permission, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createPermission*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1277
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Creates a permission.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the created permission. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Permission>> createPermission(String userLink, Permission permission, RequestOptions options)
    parameters:
    - id: userLink
      type: "26831127"
      description: <p>the user link. </p>
    - id: permission
      type: 09ea5ded
      description: <p>the permission to create. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 1053ba8a
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the created permission or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createStoredProcedure(String,StoredProcedure,RequestOptions)
  id: createStoredProcedure(String,StoredProcedure,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: createStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)
  nameWithType: AsyncDocumentClient.createStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createStoredProcedure*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 586
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Creates a stored procedure.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the created stored procedure. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<StoredProcedure>> createStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: storedProcedure
      type: 03c0fdf4
      description: <p>the stored procedure to create. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 19e242f9
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the created stored procedure or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createTrigger(String,Trigger,RequestOptions)
  id: createTrigger(String,Trigger,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: createTrigger(String collectionLink, Trigger trigger, RequestOptions options)
  nameWithType: AsyncDocumentClient.createTrigger(String collectionLink, Trigger trigger, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createTrigger(String collectionLink, Trigger trigger, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createTrigger*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 725
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Creates a trigger.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the created trigger. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Trigger>> createTrigger(String collectionLink, Trigger trigger, RequestOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: trigger
      type: 7ff698f6
      description: <p>the trigger. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 717a2200
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the created trigger or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUser(String,User,RequestOptions)
  id: createUser(String,User,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: createUser(String databaseLink, User user, RequestOptions options)
  nameWithType: AsyncDocumentClient.createUser(String databaseLink, User user, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUser(String databaseLink, User user, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUser*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1169
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Creates a user.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the created user. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<User>> createUser(String databaseLink, User user, RequestOptions options)
    parameters:
    - id: databaseLink
      type: "26831127"
      description: <p>the database link. </p>
    - id: user
      type: 9dfe9b8f
      description: <p>the user to create. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: b4795bb5
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the created user or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUserDefinedFunction(String,UserDefinedFunction,RequestOptions)
  id: createUserDefinedFunction(String,UserDefinedFunction,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: createUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)
  nameWithType: AsyncDocumentClient.createUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUserDefinedFunction*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 833
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Creates a user defined function.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the created user defined function. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<UserDefinedFunction>> createUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: udf
      type: d57c48c8
      description: <p>the user defined function. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: ab32710e
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the created user defined function or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteAttachment(String,RequestOptions)
  id: deleteAttachment(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: deleteAttachment(String attachmentLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteAttachment(String attachmentLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteAttachment(String attachmentLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteAttachment*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 985
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Deletes an attachment.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response for the deleted attachment. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Attachment>> deleteAttachment(String attachmentLink, RequestOptions options)
    parameters:
    - id: attachmentLink
      type: "26831127"
      description: <p>the attachment link. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 07f7fb21
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response for the deleted attachment or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteCollection(String,RequestOptions)
  id: deleteCollection(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: deleteCollection(String collectionLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteCollection(String collectionLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteCollection(String collectionLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteCollection*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 364
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Deletes a document collection by the collection link.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response for the deleted database. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<DocumentCollection>> deleteCollection(String collectionLink, RequestOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 537a7767
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response for the deleted database or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteConflict(String,RequestOptions)
  id: deleteConflict(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: deleteConflict(String conflictLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteConflict(String conflictLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteConflict(String conflictLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteConflict*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1155
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Deletes a conflict.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response for the deleted conflict. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Conflict>> deleteConflict(String conflictLink, RequestOptions options)
    parameters:
    - id: conflictLink
      type: "26831127"
      description: <p>the conflict link. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 9782301e
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response for the deleted conflict or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDatabase(String,RequestOptions)
  id: deleteDatabase(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: deleteDatabase(String databaseLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteDatabase(String databaseLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDatabase(String databaseLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDatabase*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 271
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Deletes a database.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the deleted database. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Database>> deleteDatabase(String databaseLink, RequestOptions options)
    parameters:
    - id: databaseLink
      type: "26831127"
      description: <p>the database link. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 90e964d0
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the deleted database or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDocument(String,RequestOptions)
  id: deleteDocument(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: deleteDocument(String documentLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteDocument(String documentLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDocument(String documentLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDocument*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 492
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Deletes a document by the document link.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response for the deleted document. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Document>> deleteDocument(String documentLink, RequestOptions options)
    parameters:
    - id: documentLink
      type: "26831127"
      description: <p>the document link. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: f538a224
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response for the deleted document or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deletePermission(String,RequestOptions)
  id: deletePermission(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: deletePermission(String permissionLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deletePermission(String permissionLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deletePermission(String permissionLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deletePermission*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1317
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Deletes a permission.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response for the deleted permission. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Permission>> deletePermission(String permissionLink, RequestOptions options)
    parameters:
    - id: permissionLink
      type: "26831127"
      description: <p>the permission link. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 1053ba8a
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response for the deleted permission or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteStoredProcedure(String,RequestOptions)
  id: deleteStoredProcedure(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: deleteStoredProcedure(String storedProcedureLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteStoredProcedure(String storedProcedureLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteStoredProcedure(String storedProcedureLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteStoredProcedure*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 628
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Deletes a stored procedure by the stored procedure link.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response for the deleted stored procedure. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<StoredProcedure>> deleteStoredProcedure(String storedProcedureLink, RequestOptions options)
    parameters:
    - id: storedProcedureLink
      type: "26831127"
      description: <p>the stored procedure link. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 19e242f9
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response for the deleted stored procedure or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteTrigger(String,RequestOptions)
  id: deleteTrigger(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: deleteTrigger(String triggerLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteTrigger(String triggerLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteTrigger(String triggerLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteTrigger*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 765
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Deletes a trigger.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response for the deleted trigger. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Trigger>> deleteTrigger(String triggerLink, RequestOptions options)
    parameters:
    - id: triggerLink
      type: "26831127"
      description: <p>the trigger link. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 717a2200
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response for the deleted trigger or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUser(String,RequestOptions)
  id: deleteUser(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: deleteUser(String userLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteUser(String userLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUser(String userLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUser*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1209
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Deletes a user.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response for the deleted user. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<User>> deleteUser(String userLink, RequestOptions options)
    parameters:
    - id: userLink
      type: "26831127"
      description: <p>the user link. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: b4795bb5
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response for the deleted user or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUserDefinedFunction(String,RequestOptions)
  id: deleteUserDefinedFunction(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: deleteUserDefinedFunction(String udfLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteUserDefinedFunction(String udfLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUserDefinedFunction(String udfLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUserDefinedFunction*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 875
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Deletes a user defined function.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response for the deleted user defined function. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<UserDefinedFunction>> deleteUserDefinedFunction(String udfLink, RequestOptions options)
    parameters:
    - id: udfLink
      type: "26831127"
      description: <p>the user defined function link. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: ab32710e
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response for the deleted user defined function or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.executeStoredProcedure(String,Object [])
  id: executeStoredProcedure(String,Object [])
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: executeStoredProcedure(String storedProcedureLink, Object[] procedureParams)
  nameWithType: AsyncDocumentClient.executeStoredProcedure(String storedProcedureLink, Object[] procedureParams)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.executeStoredProcedure(String storedProcedureLink, Object[] procedureParams)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.executeStoredProcedure*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 696
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Executes a stored procedure by the stored procedure link.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the stored procedure response. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<StoredProcedureResponse> executeStoredProcedure(String storedProcedureLink, Object[] procedureParams)
    parameters:
    - id: storedProcedureLink
      type: "26831127"
      description: <p>the stored procedure link. </p>
    - id: procedureParams
      type: 055b929b
      description: <p>the array of procedure parameter values. </p>
    return:
      type: ba759107
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the stored procedure response or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.executeStoredProcedure(String,RequestOptions,Object [])
  id: executeStoredProcedure(String,RequestOptions,Object [])
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: executeStoredProcedure(String storedProcedureLink, RequestOptions options, Object[] procedureParams)
  nameWithType: AsyncDocumentClient.executeStoredProcedure(String storedProcedureLink, RequestOptions options, Object[] procedureParams)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.executeStoredProcedure(String storedProcedureLink, RequestOptions options, Object[] procedureParams)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.executeStoredProcedure*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 710
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Executes a stored procedure by the stored procedure link.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the stored procedure response. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<StoredProcedureResponse> executeStoredProcedure(String storedProcedureLink, RequestOptions options, Object[] procedureParams)
    parameters:
    - id: storedProcedureLink
      type: "26831127"
      description: <p>the stored procedure link. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    - id: procedureParams
      type: 055b929b
      description: <p>the array of procedure parameter values. </p>
    return:
      type: ba759107
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the stored procedure response or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getConnectionPolicy()
  id: getConnectionPolicy()
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: getConnectionPolicy()
  nameWithType: AsyncDocumentClient.getConnectionPolicy()
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getConnectionPolicy()
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getConnectionPolicy*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 245
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Gets the connection policy</p>\r\n<p></p>"
  syntax:
    content: public ConnectionPolicy getConnectionPolicy()
    return:
      type: e6a1716d
      description: <p>the connection policy </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getDatabaseAccount()
  id: getDatabaseAccount()
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: getDatabaseAccount()
  nameWithType: AsyncDocumentClient.getDatabaseAccount()
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getDatabaseAccount()
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getDatabaseAccount*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1444
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Gets database account information.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the database account. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DatabaseAccount> getDatabaseAccount()
    return:
      type: 1b53a197
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the database account or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getReadEndpoint()
  id: getReadEndpoint()
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: getReadEndpoint()
  nameWithType: AsyncDocumentClient.getReadEndpoint()
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getReadEndpoint()
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getReadEndpoint*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 238
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Gets the current read endpoint chosen based on availability and preference.</p>\r\n<p></p>"
  syntax:
    content: public URI getReadEndpoint()
    return:
      type: "62304784"
      description: <p>the read endpoint URI </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getServiceEndpoint()
  id: getServiceEndpoint()
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: getServiceEndpoint()
  nameWithType: AsyncDocumentClient.getServiceEndpoint()
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getServiceEndpoint()
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getServiceEndpoint*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 224
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Gets the default service endpoint as passed in by the user during construction.</p>\r\n<p></p>"
  syntax:
    content: public URI getServiceEndpoint()
    return:
      type: "62304784"
      description: <p>the service endpoint URI </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getWriteEndpoint()
  id: getWriteEndpoint()
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: getWriteEndpoint()
  nameWithType: AsyncDocumentClient.getWriteEndpoint()
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getWriteEndpoint()
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getWriteEndpoint*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 231
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Gets the current write endpoint chosen based on availability and preference.</p>\r\n<p></p>"
  syntax:
    content: public URI getWriteEndpoint()
    return:
      type: "62304784"
      description: <p>the write endpoint URI </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryAttachments(String,SqlQuerySpec,FeedOptions)
  id: queryAttachments(String,SqlQuerySpec,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryAttachments(String documentLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryAttachments(String documentLink, SqlQuerySpec querySpec, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryAttachments(String documentLink, SqlQuerySpec querySpec, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryAttachments*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1058
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for attachments.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of the obtained attachments. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Attachment>> queryAttachments(String documentLink, SqlQuerySpec querySpec, FeedOptions options)
    parameters:
    - id: documentLink
      type: "26831127"
      description: <p>the document link. </p>
    - id: querySpec
      type: eb578c0f
      description: <p>the SQL query specification. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: 514bb0fd
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the obtained attachments or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryAttachments(String,String,FeedOptions)
  id: queryAttachments(String,String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryAttachments(String documentLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryAttachments(String documentLink, String query, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryAttachments(String documentLink, String query, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryAttachments*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1044
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for attachments.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of the obtained attachments. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Attachment>> queryAttachments(String documentLink, String query, FeedOptions options)
    parameters:
    - id: documentLink
      type: "26831127"
      description: <p>the document link. </p>
    - id: query
      type: "26831127"
      description: <p>the query. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: 514bb0fd
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the obtained attachments or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryCollections(String,SqlQuerySpec,FeedOptions)
  id: queryCollections(String,SqlQuerySpec,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryCollections(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryCollections(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryCollections(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryCollections*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 419
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for document collections in a database.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response of the obtained collections. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<DocumentCollection>> queryCollections(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)
    parameters:
    - id: databaseLink
      type: "26831127"
      description: <p>the database link. </p>
    - id: querySpec
      type: eb578c0f
      description: <p>the SQL query specification. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: d2762b8c
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the obtained collections or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryCollections(String,String,FeedOptions)
  id: queryCollections(String,String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryCollections(String databaseLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryCollections(String databaseLink, String query, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryCollections(String databaseLink, String query, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryCollections*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 405
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for document collections in a database.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response of the obtained collections. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<DocumentCollection>> queryCollections(String databaseLink, String query, FeedOptions options)
    parameters:
    - id: databaseLink
      type: "26831127"
      description: <p>the database link. </p>
    - id: query
      type: "26831127"
      description: <p>the query. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: d2762b8c
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the obtained collections or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryConflicts(String,SqlQuerySpec,FeedOptions)
  id: queryConflicts(String,SqlQuerySpec,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryConflicts(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryConflicts(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryConflicts(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryConflicts*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1142
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for conflicts.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of the obtained conflicts. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Conflict>> queryConflicts(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: querySpec
      type: eb578c0f
      description: <p>the SQL query specification. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: e8cd0adb
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the obtained conflicts or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryConflicts(String,String,FeedOptions)
  id: queryConflicts(String,String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryConflicts(String collectionLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryConflicts(String collectionLink, String query, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryConflicts(String collectionLink, String query, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryConflicts*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1128
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for conflicts.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of the obtained conflicts. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Conflict>> queryConflicts(String collectionLink, String query, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: query
      type: "26831127"
      description: <p>the query. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: e8cd0adb
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the obtained conflicts or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDatabases(SqlQuerySpec,FeedOptions)
  id: queryDatabases(SqlQuerySpec,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryDatabases(SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryDatabases(SqlQuerySpec querySpec, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDatabases(SqlQuerySpec querySpec, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDatabases*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 322
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for databases.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response of the obtained databases. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Database>> queryDatabases(SqlQuerySpec querySpec, FeedOptions options)
    parameters:
    - id: querySpec
      type: eb578c0f
      description: <p>the SQL query specification. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: 3b306b08
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the obtained databases or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDatabases(String,FeedOptions)
  id: queryDatabases(String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryDatabases(String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryDatabases(String query, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDatabases(String query, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDatabases*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 309
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for databases.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response of the read databases. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Database>> queryDatabases(String query, FeedOptions options)
    parameters:
    - id: query
      type: "26831127"
      description: <p>the query. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: 3b306b08
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of read databases or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocumentChangeFeed(String,ChangeFeedOptions)
  id: queryDocumentChangeFeed(String,ChangeFeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryDocumentChangeFeed(String collectionLink, ChangeFeedOptions changeFeedOptions)
  nameWithType: AsyncDocumentClient.queryDocumentChangeFeed(String collectionLink, ChangeFeedOptions changeFeedOptions)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocumentChangeFeed(String collectionLink, ChangeFeedOptions changeFeedOptions)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocumentChangeFeed*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 559
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for documents change feed in a document collection. After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of the obtained documents. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Document>> queryDocumentChangeFeed(String collectionLink, ChangeFeedOptions changeFeedOptions)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the link to the parent document collection. </p>
    - id: changeFeedOptions
      type: 05d71631
      description: <p>the change feed options. </p>
    return:
      type: a6c6ea32
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the obtained documents or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocuments(String,SqlQuerySpec,FeedOptions)
  id: queryDocuments(String,SqlQuerySpec,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryDocuments(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryDocuments(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocuments(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocuments*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 547
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for documents in a document collection.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response of the obtained documents. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Document>> queryDocuments(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the link to the parent document collection. </p>
    - id: querySpec
      type: eb578c0f
      description: <p>the SQL query specification. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: a6c6ea32
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the obtained documents or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocuments(String,String,FeedOptions)
  id: queryDocuments(String,String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryDocuments(String collectionLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryDocuments(String collectionLink, String query, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocuments(String collectionLink, String query, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocuments*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 533
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for documents in a document collection.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response of the obtained documents. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Document>> queryDocuments(String collectionLink, String query, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the link to the parent document collection. </p>
    - id: query
      type: "26831127"
      description: <p>the query. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: a6c6ea32
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the obtained document or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryOffers(SqlQuerySpec,FeedOptions)
  id: queryOffers(SqlQuerySpec,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryOffers(SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryOffers(SqlQuerySpec querySpec, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryOffers(SqlQuerySpec querySpec, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryOffers*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1433
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for offers in a database.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of obtained obtained offers. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Offer>> queryOffers(SqlQuerySpec querySpec, FeedOptions options)
    parameters:
    - id: querySpec
      type: eb578c0f
      description: <p>the query specification. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: b319b15a
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the obtained offers or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryOffers(String,FeedOptions)
  id: queryOffers(String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryOffers(String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryOffers(String query, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryOffers(String query, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryOffers*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1420
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for offers in a database.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of obtained obtained offers. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Offer>> queryOffers(String query, FeedOptions options)
    parameters:
    - id: query
      type: "26831127"
      description: <p>the query. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: b319b15a
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the obtained offers or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryPermissions(String,SqlQuerySpec,FeedOptions)
  id: queryPermissions(String,SqlQuerySpec,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryPermissions(String permissionLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryPermissions(String permissionLink, SqlQuerySpec querySpec, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryPermissions(String permissionLink, SqlQuerySpec querySpec, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryPermissions*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1371
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for permissions.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of the obtained permissions. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Permission>> queryPermissions(String permissionLink, SqlQuerySpec querySpec, FeedOptions options)
    parameters:
    - id: permissionLink
      type: "26831127"
      description: <p>the permission link. </p>
    - id: querySpec
      type: eb578c0f
      description: <p>the SQL query specification. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: 0dcb6daf
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the obtained permissions or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryPermissions(String,String,FeedOptions)
  id: queryPermissions(String,String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryPermissions(String permissionLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryPermissions(String permissionLink, String query, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryPermissions(String permissionLink, String query, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryPermissions*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1357
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for permissions.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of the obtained permissions. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Permission>> queryPermissions(String permissionLink, String query, FeedOptions options)
    parameters:
    - id: permissionLink
      type: "26831127"
      description: <p>the permission link. </p>
    - id: query
      type: "26831127"
      description: <p>the query. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: 0dcb6daf
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the obtained permissions or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryStoredProcedures(String,SqlQuerySpec,FeedOptions)
  id: queryStoredProcedures(String,SqlQuerySpec,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryStoredProcedures(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryStoredProcedures(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryStoredProcedures(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryStoredProcedures*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 682
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for stored procedures in a document collection.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of the obtained stored procedures. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<StoredProcedure>> queryStoredProcedures(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: querySpec
      type: eb578c0f
      description: <p>the SQL query specification. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: 43dfac2d
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the obtained stored procedures or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryStoredProcedures(String,String,FeedOptions)
  id: queryStoredProcedures(String,String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryStoredProcedures(String collectionLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryStoredProcedures(String collectionLink, String query, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryStoredProcedures(String collectionLink, String query, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryStoredProcedures*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 668
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for stored procedures in a document collection.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of the obtained stored procedures. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<StoredProcedure>> queryStoredProcedures(String collectionLink, String query, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: query
      type: "26831127"
      description: <p>the query. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: 43dfac2d
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the obtained stored procedures or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryTriggers(String,SqlQuerySpec,FeedOptions)
  id: queryTriggers(String,SqlQuerySpec,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryTriggers(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryTriggers(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryTriggers(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryTriggers*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 819
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for triggers.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of the obtained triggers. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Trigger>> queryTriggers(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: querySpec
      type: eb578c0f
      description: <p>the SQL query specification. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: 510eb0aa
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the obtained triggers or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryTriggers(String,String,FeedOptions)
  id: queryTriggers(String,String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryTriggers(String collectionLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryTriggers(String collectionLink, String query, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryTriggers(String collectionLink, String query, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryTriggers*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 805
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for triggers.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of the obtained triggers. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Trigger>> queryTriggers(String collectionLink, String query, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: query
      type: "26831127"
      description: <p>the query. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: 510eb0aa
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the obtained triggers or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUserDefinedFunctions(String,SqlQuerySpec,FeedOptions)
  id: queryUserDefinedFunctions(String,SqlQuerySpec,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryUserDefinedFunctions(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryUserDefinedFunctions(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUserDefinedFunctions(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUserDefinedFunctions*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 930
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for user defined functions.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of the obtained user defined functions. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<UserDefinedFunction>> queryUserDefinedFunctions(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: querySpec
      type: eb578c0f
      description: <p>the SQL query specification. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: 6e70d20d
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the obtained user defined functions or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUserDefinedFunctions(String,String,FeedOptions)
  id: queryUserDefinedFunctions(String,String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryUserDefinedFunctions(String collectionLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryUserDefinedFunctions(String collectionLink, String query, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUserDefinedFunctions(String collectionLink, String query, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUserDefinedFunctions*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 915
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for user defined functions.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of the obtained user defined functions. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<UserDefinedFunction>> queryUserDefinedFunctions(String collectionLink, String query, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: query
      type: "26831127"
      description: <p>the query. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: 6e70d20d
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the obtained user defined functions or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUsers(String,SqlQuerySpec,FeedOptions)
  id: queryUsers(String,SqlQuerySpec,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryUsers(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryUsers(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUsers(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUsers*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1263
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for users.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of the obtained users. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<User>> queryUsers(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)
    parameters:
    - id: databaseLink
      type: "26831127"
      description: <p>the database link. </p>
    - id: querySpec
      type: eb578c0f
      description: <p>the SQL query specification. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: 3fe117c7
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the obtained users or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUsers(String,String,FeedOptions)
  id: queryUsers(String,String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: queryUsers(String databaseLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryUsers(String databaseLink, String query, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUsers(String databaseLink, String query, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUsers*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1249
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Query for users.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of the obtained users. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<User>> queryUsers(String databaseLink, String query, FeedOptions options)
    parameters:
    - id: databaseLink
      type: "26831127"
      description: <p>the database link. </p>
    - id: query
      type: "26831127"
      description: <p>the query. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: 3fe117c7
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the obtained users or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachment(String,RequestOptions)
  id: readAttachment(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readAttachment(String attachmentLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readAttachment(String attachmentLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachment(String attachmentLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachment*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 998
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads an attachment.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the read attachment. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Attachment>> readAttachment(String attachmentLink, RequestOptions options)
    parameters:
    - id: attachmentLink
      type: "26831127"
      description: <p>the attachment link. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 07f7fb21
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the read attachment or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachments(String,FeedOptions)
  id: readAttachments(String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readAttachments(String documentLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readAttachments(String documentLink, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachments(String documentLink, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachments*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1011
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads all attachments in a document.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of the read attachments. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Attachment>> readAttachments(String documentLink, FeedOptions options)
    parameters:
    - id: documentLink
      type: "26831127"
      description: <p>the document link. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: 514bb0fd
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the read attachments or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollection(String,RequestOptions)
  id: readCollection(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readCollection(String collectionLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readCollection(String collectionLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollection(String collectionLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollection*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 377
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads a document collection by the collection link.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the read collection. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<DocumentCollection>> readCollection(String collectionLink, RequestOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 537a7767
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the read collection or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollections(String,FeedOptions)
  id: readCollections(String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readCollections(String databaseLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readCollections(String databaseLink, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollections(String databaseLink, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollections*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 391
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads all document collections in a database.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response of the read collections. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<DocumentCollection>> readCollections(String databaseLink, FeedOptions options)
    parameters:
    - id: databaseLink
      type: "26831127"
      description: <p>the database link. </p>
    - id: options
      type: 0cde5789
      description: <p>the fee options. </p>
    return:
      type: d2762b8c
      description: <p>the feed response with the read collections. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflict(String,RequestOptions)
  id: readConflict(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readConflict(String conflictLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readConflict(String conflictLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflict(String conflictLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflict*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1101
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads a conflict.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the read conflict. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Conflict>> readConflict(String conflictLink, RequestOptions options)
    parameters:
    - id: conflictLink
      type: "26831127"
      description: <p>the conflict link. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 9782301e
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the read conflict or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflicts(String,FeedOptions)
  id: readConflicts(String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readConflicts(String collectionLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readConflicts(String collectionLink, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflicts(String collectionLink, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflicts*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1114
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads all conflicts in a document collection.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of the read conflicts. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Conflict>> readConflicts(String collectionLink, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: e8cd0adb
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the read conflicts or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabase(String,RequestOptions)
  id: readDatabase(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readDatabase(String databaseLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readDatabase(String databaseLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabase(String databaseLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabase*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 284
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads a database.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the read database. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Database>> readDatabase(String databaseLink, RequestOptions options)
    parameters:
    - id: databaseLink
      type: "26831127"
      description: <p>the database link. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 90e964d0
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the read database or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabases(FeedOptions)
  id: readDatabases(FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readDatabases(FeedOptions options)
  nameWithType: AsyncDocumentClient.readDatabases(FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabases(FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabases*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 296
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads all databases.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response of the read databases. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Database>> readDatabases(FeedOptions options)
    parameters:
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: 3b306b08
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of read databases or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocument(String,RequestOptions)
  id: readDocument(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readDocument(String documentLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readDocument(String documentLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocument(String documentLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocument*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 505
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads a document by the document link.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the read document. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Document>> readDocument(String documentLink, RequestOptions options)
    parameters:
    - id: documentLink
      type: "26831127"
      description: <p>the document link. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: f538a224
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the read document or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocuments(String,FeedOptions)
  id: readDocuments(String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readDocuments(String collectionLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readDocuments(String collectionLink, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocuments(String collectionLink, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocuments*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 518
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads all documents in a document collection.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response of the read documents. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Document>> readDocuments(String collectionLink, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: a6c6ea32
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the read documents or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readMedia(String)
  id: readMedia(String)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readMedia(String mediaLink)
  nameWithType: AsyncDocumentClient.readMedia(String mediaLink)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readMedia(String mediaLink)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readMedia*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1020
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads a media by the media link.</p>\r\n<p></p>"
  syntax:
    content: public Observable<MediaResponse> readMedia(String mediaLink)
    parameters:
    - id: mediaLink
      type: "26831127"
      description: <p>the media link. </p>
    return:
      type: 56cf705e
      description: <p>the media response. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffer(String)
  id: readOffer(String)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readOffer(String offerLink)
  nameWithType: AsyncDocumentClient.readOffer(String offerLink)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffer(String offerLink)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffer*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1395
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads an offer.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the read offer. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Offer>> readOffer(String offerLink)
    parameters:
    - id: offerLink
      type: "26831127"
      description: <p>the offer link. </p>
    return:
      type: 2ab17c12
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the read offer or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffers(FeedOptions)
  id: readOffers(FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readOffers(FeedOptions options)
  nameWithType: AsyncDocumentClient.readOffers(FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffers(FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffers*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1407
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads offers.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of the read offers. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Offer>> readOffers(FeedOptions options)
    parameters:
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: b319b15a
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the read offers or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPartitionKeyRanges(String,FeedOptions)
  id: readPartitionKeyRanges(String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readPartitionKeyRanges(String collectionLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readPartitionKeyRanges(String collectionLink, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPartitionKeyRanges(String collectionLink, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPartitionKeyRanges*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 572
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads all partition key ranges in a document collection. After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of the obtained partition key ranges. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<PartitionKeyRange>> readPartitionKeyRanges(String collectionLink, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the link to the parent document collection. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: 1f7e366b
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the obtained partition key ranges or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermission(String,RequestOptions)
  id: readPermission(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readPermission(String permissionLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readPermission(String permissionLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermission(String permissionLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermission*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1330
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads a permission.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the read permission. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Permission>> readPermission(String permissionLink, RequestOptions options)
    parameters:
    - id: permissionLink
      type: "26831127"
      description: <p>the permission link. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 1053ba8a
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the read permission or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermissions(String,FeedOptions)
  id: readPermissions(String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readPermissions(String permissionLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readPermissions(String permissionLink, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermissions(String permissionLink, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermissions*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1343
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads all permissions.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of the read permissions. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Permission>> readPermissions(String permissionLink, FeedOptions options)
    parameters:
    - id: permissionLink
      type: "26831127"
      description: <p>the permission link. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: 0dcb6daf
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the read permissions or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedure(String,RequestOptions)
  id: readStoredProcedure(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readStoredProcedure(String storedProcedureLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readStoredProcedure(String storedProcedureLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedure(String storedProcedureLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedure*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 641
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Read a stored procedure by the stored procedure link.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the read stored procedure. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<StoredProcedure>> readStoredProcedure(String storedProcedureLink, RequestOptions options)
    parameters:
    - id: storedProcedureLink
      type: "26831127"
      description: <p>the stored procedure link. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 19e242f9
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the read stored procedure or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedures(String,FeedOptions)
  id: readStoredProcedures(String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readStoredProcedures(String collectionLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readStoredProcedures(String collectionLink, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedures(String collectionLink, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedures*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 654
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads all stored procedures in a document collection link.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of the read stored procedures. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<StoredProcedure>> readStoredProcedures(String collectionLink, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: 43dfac2d
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the read stored procedures or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTrigger(String,RequestOptions)
  id: readTrigger(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readTrigger(String triggerLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readTrigger(String triggerLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTrigger(String triggerLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTrigger*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 778
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads a trigger by the trigger link.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response for the read trigger. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Trigger>> readTrigger(String triggerLink, RequestOptions options)
    parameters:
    - id: triggerLink
      type: "26831127"
      description: <p>the trigger link. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 717a2200
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response for the read trigger or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTriggers(String,FeedOptions)
  id: readTriggers(String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readTriggers(String collectionLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readTriggers(String collectionLink, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTriggers(String collectionLink, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTriggers*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 791
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads all triggers in a document collection.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of the read triggers. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<Trigger>> readTriggers(String collectionLink, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: 510eb0aa
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the read triggers or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUser(String,RequestOptions)
  id: readUser(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readUser(String userLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readUser(String userLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUser(String userLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUser*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1222
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads a user.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the read user. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<User>> readUser(String userLink, RequestOptions options)
    parameters:
    - id: userLink
      type: "26831127"
      description: <p>the user link. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: b4795bb5
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the read user or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunction(String,RequestOptions)
  id: readUserDefinedFunction(String,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readUserDefinedFunction(String udfLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readUserDefinedFunction(String udfLink, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunction(String udfLink, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunction*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 888
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Read a user defined function.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response for the read user defined function. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<UserDefinedFunction>> readUserDefinedFunction(String udfLink, RequestOptions options)
    parameters:
    - id: udfLink
      type: "26831127"
      description: <p>the user defined function link. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: ab32710e
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response for the read user defined function or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunctions(String,FeedOptions)
  id: readUserDefinedFunctions(String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readUserDefinedFunctions(String collectionLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readUserDefinedFunctions(String collectionLink, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunctions(String collectionLink, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunctions*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 901
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads all user defined functions in a document collection.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of the read user defined functions. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<UserDefinedFunction>> readUserDefinedFunctions(String collectionLink, FeedOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: 6e70d20d
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the read user defined functions or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUsers(String,FeedOptions)
  id: readUsers(String,FeedOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: readUsers(String databaseLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readUsers(String databaseLink, FeedOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUsers(String databaseLink, FeedOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUsers*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1235
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Reads all users in a database.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will contain one or several feed response pages of the read users. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<FeedResponse<User>> readUsers(String databaseLink, FeedOptions options)
    parameters:
    - id: databaseLink
      type: "26831127"
      description: <p>the database link. </p>
    - id: options
      type: 0cde5789
      description: <p>the feed options. </p>
    return:
      type: 3fe117c7
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing one or several feed response pages of the read users or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceAttachment(Attachment,RequestOptions)
  id: replaceAttachment(Attachment,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: replaceAttachment(Attachment attachment, RequestOptions options)
  nameWithType: AsyncDocumentClient.replaceAttachment(Attachment attachment, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceAttachment(Attachment attachment, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceAttachment*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 972
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Replaces an attachment.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the replaced attachment. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Attachment>> replaceAttachment(Attachment attachment, RequestOptions options)
    parameters:
    - id: attachment
      type: 7621cbe9
      description: <p>the attachment to use. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 07f7fb21
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the replaced attachment or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceCollection(DocumentCollection,RequestOptions)
  id: replaceCollection(DocumentCollection,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: replaceCollection(DocumentCollection collection, RequestOptions options)
  nameWithType: AsyncDocumentClient.replaceCollection(DocumentCollection collection, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceCollection(DocumentCollection collection, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceCollection*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 350
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Replaces a document collection.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the replaced document collection. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<DocumentCollection>> replaceCollection(DocumentCollection collection, RequestOptions options)
    parameters:
    - id: collection
      type: ee50540d
      description: <p>the document collection to use. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 537a7767
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the replaced document collection or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceDocument(Document,RequestOptions)
  id: replaceDocument(Document,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: replaceDocument(Document document, RequestOptions options)
  nameWithType: AsyncDocumentClient.replaceDocument(Document document, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceDocument(Document document, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceDocument*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 479
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Replaces a document with the passed in document.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the replaced document. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Document>> replaceDocument(Document document, RequestOptions options)
    parameters:
    - id: document
      type: "98354509"
      description: <p>the document to replace (containing the document id). </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: f538a224
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the replaced document or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceDocument(String,Object,RequestOptions)
  id: replaceDocument(String,Object,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: replaceDocument(String documentLink, Object document, RequestOptions options)
  nameWithType: AsyncDocumentClient.replaceDocument(String documentLink, Object document, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceDocument(String documentLink, Object document, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceDocument*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 466
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Replaces a document using a POJO object.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the replaced document. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Document>> replaceDocument(String documentLink, Object document, RequestOptions options)
    parameters:
    - id: documentLink
      type: "26831127"
      description: <p>the document link. </p>
    - id: document
      type: "79317049"
      description: <p>the document represented as a POJO or Document object. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: f538a224
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the replaced document or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceOffer(Offer)
  id: replaceOffer(Offer)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: replaceOffer(Offer offer)
  nameWithType: AsyncDocumentClient.replaceOffer(Offer offer)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceOffer(Offer offer)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceOffer*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1383
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Replaces an offer.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the replaced offer. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Offer>> replaceOffer(Offer offer)
    parameters:
    - id: offer
      type: 6844b26b
      description: <p>the offer to use. </p>
    return:
      type: 2ab17c12
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the replaced offer or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replacePermission(Permission,RequestOptions)
  id: replacePermission(Permission,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: replacePermission(Permission permission, RequestOptions options)
  nameWithType: AsyncDocumentClient.replacePermission(Permission permission, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replacePermission(Permission permission, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replacePermission*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1304
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Replaces a permission.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the replaced permission. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Permission>> replacePermission(Permission permission, RequestOptions options)
    parameters:
    - id: permission
      type: 09ea5ded
      description: <p>the permission to use. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 1053ba8a
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the replaced permission or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceStoredProcedure(StoredProcedure,RequestOptions)
  id: replaceStoredProcedure(StoredProcedure,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: replaceStoredProcedure(StoredProcedure storedProcedure, RequestOptions options)
  nameWithType: AsyncDocumentClient.replaceStoredProcedure(StoredProcedure storedProcedure, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceStoredProcedure(StoredProcedure storedProcedure, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceStoredProcedure*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 615
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Replaces a stored procedure.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the replaced stored procedure. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<StoredProcedure>> replaceStoredProcedure(StoredProcedure storedProcedure, RequestOptions options)
    parameters:
    - id: storedProcedure
      type: 03c0fdf4
      description: <p>the stored procedure to use. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 19e242f9
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the replaced stored procedure or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceTrigger(Trigger,RequestOptions)
  id: replaceTrigger(Trigger,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: replaceTrigger(Trigger trigger, RequestOptions options)
  nameWithType: AsyncDocumentClient.replaceTrigger(Trigger trigger, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceTrigger(Trigger trigger, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceTrigger*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 752
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Replaces a trigger.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the replaced trigger. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Trigger>> replaceTrigger(Trigger trigger, RequestOptions options)
    parameters:
    - id: trigger
      type: 7ff698f6
      description: <p>the trigger to use. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 717a2200
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the replaced trigger or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUser(User,RequestOptions)
  id: replaceUser(User,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: replaceUser(User user, RequestOptions options)
  nameWithType: AsyncDocumentClient.replaceUser(User user, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUser(User user, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUser*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1196
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Replaces a user.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the replaced user. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<User>> replaceUser(User user, RequestOptions options)
    parameters:
    - id: user
      type: 9dfe9b8f
      description: <p>the user to use. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: b4795bb5
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the replaced user or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUserDefinedFunction(UserDefinedFunction,RequestOptions)
  id: replaceUserDefinedFunction(UserDefinedFunction,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: replaceUserDefinedFunction(UserDefinedFunction udf, RequestOptions options)
  nameWithType: AsyncDocumentClient.replaceUserDefinedFunction(UserDefinedFunction udf, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUserDefinedFunction(UserDefinedFunction udf, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUserDefinedFunction*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 862
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Replaces a user defined function.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the replaced user defined function. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<UserDefinedFunction>> replaceUserDefinedFunction(UserDefinedFunction udf, RequestOptions options)
    parameters:
    - id: udf
      type: d57c48c8
      description: <p>the user defined function. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: ab32710e
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the replaced user defined function or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.updateMedia(String,InputStream,MediaOptions)
  id: updateMedia(String,InputStream,MediaOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: updateMedia(String mediaLink, InputStream mediaStream, MediaOptions options)
  nameWithType: AsyncDocumentClient.updateMedia(String mediaLink, InputStream mediaStream, MediaOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.updateMedia(String mediaLink, InputStream mediaStream, MediaOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.updateMedia*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1030
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Updates a media by the media link.</p>\r\n<p></p>"
  syntax:
    content: public Observable<MediaResponse> updateMedia(String mediaLink, InputStream mediaStream, MediaOptions options)
    parameters:
    - id: mediaLink
      type: "26831127"
      description: <p>the media link. </p>
    - id: mediaStream
      type: 76fcb9b7
      description: <p>the media stream to upload. </p>
    - id: options
      type: ca2971d4
      description: <p>the media options. </p>
    return:
      type: 56cf705e
      description: <p>the media response. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertAttachment(String,Attachment,RequestOptions)
  id: upsertAttachment(String,Attachment,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: upsertAttachment(String documentLink, Attachment attachment, RequestOptions options)
  nameWithType: AsyncDocumentClient.upsertAttachment(String documentLink, Attachment attachment, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertAttachment(String documentLink, Attachment attachment, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertAttachment*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 959
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Upserts an attachment.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the upserted attachment. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Attachment>> upsertAttachment(String documentLink, Attachment attachment, RequestOptions options)
    parameters:
    - id: documentLink
      type: "26831127"
      description: <p>the document link. </p>
    - id: attachment
      type: 7621cbe9
      description: <p>the attachment to upsert. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 07f7fb21
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the upserted attachment or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertAttachment(String,InputStream,MediaOptions,RequestOptions)
  id: upsertAttachment(String,InputStream,MediaOptions,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: upsertAttachment(String documentLink, InputStream mediaStream, MediaOptions options, RequestOptions requestOptions)
  nameWithType: AsyncDocumentClient.upsertAttachment(String documentLink, InputStream mediaStream, MediaOptions options, RequestOptions requestOptions)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertAttachment(String documentLink, InputStream mediaStream, MediaOptions options, RequestOptions requestOptions)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertAttachment*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1088
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Upserts an attachment to the media stream</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the upserted attachment. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Attachment>> upsertAttachment(String documentLink, InputStream mediaStream, MediaOptions options, RequestOptions requestOptions)
    parameters:
    - id: documentLink
      type: "26831127"
      description: <p>the document link. </p>
    - id: mediaStream
      type: 76fcb9b7
      description: <p>the media stream for upserting the attachment. </p>
    - id: options
      type: ca2971d4
      description: <p>the media options. </p>
    - id: requestOptions
      type: e3133905
      description: <p>the request options </p>
    return:
      type: 07f7fb21
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the upserted attachment or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertDocument(String,Object,RequestOptions,boolean)
  id: upsertDocument(String,Object,RequestOptions,boolean)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: upsertDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)
  nameWithType: AsyncDocumentClient.upsertDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertDocument*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 451
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Upserts a document.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the upserted document. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Document>> upsertDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the link to the parent document collection. </p>
    - id: document
      type: "79317049"
      description: <p>the document represented as a POJO or Document object to upsert. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    - id: disableAutomaticIdGeneration
      type: 4fc6e284
      description: <p>the flag for disabling automatic id generation. </p>
    return:
      type: f538a224
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the upserted document or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertPermission(String,Permission,RequestOptions)
  id: upsertPermission(String,Permission,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: upsertPermission(String userLink, Permission permission, RequestOptions options)
  nameWithType: AsyncDocumentClient.upsertPermission(String userLink, Permission permission, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertPermission(String userLink, Permission permission, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertPermission*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1291
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Upserts a permission.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the upserted permission. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Permission>> upsertPermission(String userLink, Permission permission, RequestOptions options)
    parameters:
    - id: userLink
      type: "26831127"
      description: <p>the user link. </p>
    - id: permission
      type: 09ea5ded
      description: <p>the permission to upsert. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 1053ba8a
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the upserted permission or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertStoredProcedure(String,StoredProcedure,RequestOptions)
  id: upsertStoredProcedure(String,StoredProcedure,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: upsertStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)
  nameWithType: AsyncDocumentClient.upsertStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertStoredProcedure*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 601
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Upserts a stored procedure.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the upserted stored procedure. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<StoredProcedure>> upsertStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: storedProcedure
      type: 03c0fdf4
      description: <p>the stored procedure to upsert. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 19e242f9
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the upserted stored procedure or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertTrigger(String,Trigger,RequestOptions)
  id: upsertTrigger(String,Trigger,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: upsertTrigger(String collectionLink, Trigger trigger, RequestOptions options)
  nameWithType: AsyncDocumentClient.upsertTrigger(String collectionLink, Trigger trigger, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertTrigger(String collectionLink, Trigger trigger, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertTrigger*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 739
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Upserts a trigger.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the upserted trigger. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<Trigger>> upsertTrigger(String collectionLink, Trigger trigger, RequestOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: trigger
      type: 7ff698f6
      description: <p>the trigger to upsert. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: 717a2200
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the upserted trigger or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUser(String,User,RequestOptions)
  id: upsertUser(String,User,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: upsertUser(String databaseLink, User user, RequestOptions options)
  nameWithType: AsyncDocumentClient.upsertUser(String databaseLink, User user, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUser(String databaseLink, User user, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUser*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 1183
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Upserts a user.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the upserted user. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<User>> upsertUser(String databaseLink, User user, RequestOptions options)
    parameters:
    - id: databaseLink
      type: "26831127"
      description: <p>the database link. </p>
    - id: user
      type: 9dfe9b8f
      description: <p>the user to upsert. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: b4795bb5
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the upserted user or an error. </p>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUserDefinedFunction(String,UserDefinedFunction,RequestOptions)
  id: upsertUserDefinedFunction(String,UserDefinedFunction,RequestOptions)
  parent: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  langs:
  - java
  name: upsertUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)
  nameWithType: AsyncDocumentClient.upsertUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)
  overload: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUserDefinedFunction*
  type: Method
  source:
    remote: *o0
    path: sdk/src/main/java/com/microsoft/azure/cosmosdb/rx/AsyncDocumentClient.java
    startLine: 848
  package: com.microsoft.azure.cosmosdb.rx
  summary: "<p>Upserts a user defined function.</p>\r\n<p>After subscription the operation will be performed. The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> upon successful completion will contain a single resource response with the upserted user defined function. In case of failure the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Observable</xref> will error.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ResourceResponse<UserDefinedFunction>> upsertUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)
    parameters:
    - id: collectionLink
      type: "26831127"
      description: <p>the collection link. </p>
    - id: udf
      type: d57c48c8
      description: <p>the user defined function to upsert. </p>
    - id: options
      type: e3133905
      description: <p>the request options. </p>
    return:
      type: ab32710e
      description: <p>an <xref uid="" data-throw-if-not-resolved="false">Observable</xref> containing the single resource response with the upserted user defined function or an error. </p>
references:
- uid: "62304784"
  spec.java:
  - name: URI
    fullName: URI
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getServiceEndpoint*
  name: getServiceEndpoint
  nameWithType: AsyncDocumentClient.getServiceEndpoint
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getServiceEndpoint
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getWriteEndpoint*
  name: getWriteEndpoint
  nameWithType: AsyncDocumentClient.getWriteEndpoint
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getWriteEndpoint
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getReadEndpoint*
  name: getReadEndpoint
  nameWithType: AsyncDocumentClient.getReadEndpoint
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getReadEndpoint
  package: com.microsoft.azure.cosmosdb.rx
- uid: e6a1716d
  spec.java:
  - name: ConnectionPolicy
    fullName: ConnectionPolicy
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getConnectionPolicy*
  name: getConnectionPolicy
  nameWithType: AsyncDocumentClient.getConnectionPolicy
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getConnectionPolicy
  package: com.microsoft.azure.cosmosdb.rx
- uid: 07db07e3
  spec.java:
  - name: Database
    fullName: Database
- uid: e3133905
  spec.java:
  - name: RequestOptions
    fullName: RequestOptions
- uid: 90e964d0
  spec.java:
  - name: Observable<ResourceResponse<Database>>
    fullName: Observable<ResourceResponse<Database>>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDatabase*
  name: createDatabase
  nameWithType: AsyncDocumentClient.createDatabase
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDatabase
  package: com.microsoft.azure.cosmosdb.rx
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDatabase*
  name: deleteDatabase
  nameWithType: AsyncDocumentClient.deleteDatabase
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDatabase
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabase*
  name: readDatabase
  nameWithType: AsyncDocumentClient.readDatabase
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabase
  package: com.microsoft.azure.cosmosdb.rx
- uid: 0cde5789
  spec.java:
  - name: FeedOptions
    fullName: FeedOptions
- uid: 3b306b08
  spec.java:
  - name: Observable<FeedResponse<Database>>
    fullName: Observable<FeedResponse<Database>>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabases*
  name: readDatabases
  nameWithType: AsyncDocumentClient.readDatabases
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabases
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDatabases*
  name: queryDatabases
  nameWithType: AsyncDocumentClient.queryDatabases
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDatabases
  package: com.microsoft.azure.cosmosdb.rx
- uid: eb578c0f
  spec.java:
  - name: SqlQuerySpec
    fullName: SqlQuerySpec
- uid: ee50540d
  spec.java:
  - name: DocumentCollection
    fullName: DocumentCollection
- uid: 537a7767
  spec.java:
  - name: Observable<ResourceResponse<DocumentCollection>>
    fullName: Observable<ResourceResponse<DocumentCollection>>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createCollection*
  name: createCollection
  nameWithType: AsyncDocumentClient.createCollection
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createCollection
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceCollection*
  name: replaceCollection
  nameWithType: AsyncDocumentClient.replaceCollection
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceCollection
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteCollection*
  name: deleteCollection
  nameWithType: AsyncDocumentClient.deleteCollection
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteCollection
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollection*
  name: readCollection
  nameWithType: AsyncDocumentClient.readCollection
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollection
  package: com.microsoft.azure.cosmosdb.rx
- uid: d2762b8c
  spec.java:
  - name: Observable<FeedResponse<DocumentCollection>>
    fullName: Observable<FeedResponse<DocumentCollection>>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollections*
  name: readCollections
  nameWithType: AsyncDocumentClient.readCollections
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollections
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryCollections*
  name: queryCollections
  nameWithType: AsyncDocumentClient.queryCollections
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryCollections
  package: com.microsoft.azure.cosmosdb.rx
- uid: "79317049"
  spec.java:
  - name: Object
    fullName: Object
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: f538a224
  spec.java:
  - name: Observable<ResourceResponse<Document>>
    fullName: Observable<ResourceResponse<Document>>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDocument*
  name: createDocument
  nameWithType: AsyncDocumentClient.createDocument
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDocument
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertDocument*
  name: upsertDocument
  nameWithType: AsyncDocumentClient.upsertDocument
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertDocument
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceDocument*
  name: replaceDocument
  nameWithType: AsyncDocumentClient.replaceDocument
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceDocument
  package: com.microsoft.azure.cosmosdb.rx
- uid: "98354509"
  spec.java:
  - name: Document
    fullName: Document
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDocument*
  name: deleteDocument
  nameWithType: AsyncDocumentClient.deleteDocument
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDocument
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocument*
  name: readDocument
  nameWithType: AsyncDocumentClient.readDocument
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocument
  package: com.microsoft.azure.cosmosdb.rx
- uid: a6c6ea32
  spec.java:
  - name: Observable<FeedResponse<Document>>
    fullName: Observable<FeedResponse<Document>>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocuments*
  name: readDocuments
  nameWithType: AsyncDocumentClient.readDocuments
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocuments
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocuments*
  name: queryDocuments
  nameWithType: AsyncDocumentClient.queryDocuments
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocuments
  package: com.microsoft.azure.cosmosdb.rx
- uid: 05d71631
  spec.java:
  - name: ChangeFeedOptions
    fullName: ChangeFeedOptions
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocumentChangeFeed*
  name: queryDocumentChangeFeed
  nameWithType: AsyncDocumentClient.queryDocumentChangeFeed
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocumentChangeFeed
  package: com.microsoft.azure.cosmosdb.rx
- uid: 1f7e366b
  spec.java:
  - name: Observable<FeedResponse<PartitionKeyRange>>
    fullName: Observable<FeedResponse<PartitionKeyRange>>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPartitionKeyRanges*
  name: readPartitionKeyRanges
  nameWithType: AsyncDocumentClient.readPartitionKeyRanges
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPartitionKeyRanges
  package: com.microsoft.azure.cosmosdb.rx
- uid: 03c0fdf4
  spec.java:
  - name: StoredProcedure
    fullName: StoredProcedure
- uid: 19e242f9
  spec.java:
  - name: Observable<ResourceResponse<StoredProcedure>>
    fullName: Observable<ResourceResponse<StoredProcedure>>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createStoredProcedure*
  name: createStoredProcedure
  nameWithType: AsyncDocumentClient.createStoredProcedure
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createStoredProcedure
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertStoredProcedure*
  name: upsertStoredProcedure
  nameWithType: AsyncDocumentClient.upsertStoredProcedure
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertStoredProcedure
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceStoredProcedure*
  name: replaceStoredProcedure
  nameWithType: AsyncDocumentClient.replaceStoredProcedure
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceStoredProcedure
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteStoredProcedure*
  name: deleteStoredProcedure
  nameWithType: AsyncDocumentClient.deleteStoredProcedure
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteStoredProcedure
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedure*
  name: readStoredProcedure
  nameWithType: AsyncDocumentClient.readStoredProcedure
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedure
  package: com.microsoft.azure.cosmosdb.rx
- uid: 43dfac2d
  spec.java:
  - name: Observable<FeedResponse<StoredProcedure>>
    fullName: Observable<FeedResponse<StoredProcedure>>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedures*
  name: readStoredProcedures
  nameWithType: AsyncDocumentClient.readStoredProcedures
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedures
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryStoredProcedures*
  name: queryStoredProcedures
  nameWithType: AsyncDocumentClient.queryStoredProcedures
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryStoredProcedures
  package: com.microsoft.azure.cosmosdb.rx
- uid: 055b929b
  spec.java:
  - name: Object []
    fullName: Object []
- uid: ba759107
  spec.java:
  - name: Observable<StoredProcedureResponse>
    fullName: Observable<StoredProcedureResponse>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.executeStoredProcedure*
  name: executeStoredProcedure
  nameWithType: AsyncDocumentClient.executeStoredProcedure
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.executeStoredProcedure
  package: com.microsoft.azure.cosmosdb.rx
- uid: 7ff698f6
  spec.java:
  - name: Trigger
    fullName: Trigger
- uid: 717a2200
  spec.java:
  - name: Observable<ResourceResponse<Trigger>>
    fullName: Observable<ResourceResponse<Trigger>>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createTrigger*
  name: createTrigger
  nameWithType: AsyncDocumentClient.createTrigger
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createTrigger
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertTrigger*
  name: upsertTrigger
  nameWithType: AsyncDocumentClient.upsertTrigger
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertTrigger
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceTrigger*
  name: replaceTrigger
  nameWithType: AsyncDocumentClient.replaceTrigger
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceTrigger
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteTrigger*
  name: deleteTrigger
  nameWithType: AsyncDocumentClient.deleteTrigger
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteTrigger
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTrigger*
  name: readTrigger
  nameWithType: AsyncDocumentClient.readTrigger
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTrigger
  package: com.microsoft.azure.cosmosdb.rx
- uid: 510eb0aa
  spec.java:
  - name: Observable<FeedResponse<Trigger>>
    fullName: Observable<FeedResponse<Trigger>>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTriggers*
  name: readTriggers
  nameWithType: AsyncDocumentClient.readTriggers
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTriggers
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryTriggers*
  name: queryTriggers
  nameWithType: AsyncDocumentClient.queryTriggers
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryTriggers
  package: com.microsoft.azure.cosmosdb.rx
- uid: d57c48c8
  spec.java:
  - name: UserDefinedFunction
    fullName: UserDefinedFunction
- uid: ab32710e
  spec.java:
  - name: Observable<ResourceResponse<UserDefinedFunction>>
    fullName: Observable<ResourceResponse<UserDefinedFunction>>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUserDefinedFunction*
  name: createUserDefinedFunction
  nameWithType: AsyncDocumentClient.createUserDefinedFunction
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUserDefinedFunction
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUserDefinedFunction*
  name: upsertUserDefinedFunction
  nameWithType: AsyncDocumentClient.upsertUserDefinedFunction
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUserDefinedFunction
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUserDefinedFunction*
  name: replaceUserDefinedFunction
  nameWithType: AsyncDocumentClient.replaceUserDefinedFunction
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUserDefinedFunction
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUserDefinedFunction*
  name: deleteUserDefinedFunction
  nameWithType: AsyncDocumentClient.deleteUserDefinedFunction
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUserDefinedFunction
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunction*
  name: readUserDefinedFunction
  nameWithType: AsyncDocumentClient.readUserDefinedFunction
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunction
  package: com.microsoft.azure.cosmosdb.rx
- uid: 6e70d20d
  spec.java:
  - name: Observable<FeedResponse<UserDefinedFunction>>
    fullName: Observable<FeedResponse<UserDefinedFunction>>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunctions*
  name: readUserDefinedFunctions
  nameWithType: AsyncDocumentClient.readUserDefinedFunctions
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunctions
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUserDefinedFunctions*
  name: queryUserDefinedFunctions
  nameWithType: AsyncDocumentClient.queryUserDefinedFunctions
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUserDefinedFunctions
  package: com.microsoft.azure.cosmosdb.rx
- uid: 7621cbe9
  spec.java:
  - name: Attachment
    fullName: Attachment
- uid: 07f7fb21
  spec.java:
  - name: Observable<ResourceResponse<Attachment>>
    fullName: Observable<ResourceResponse<Attachment>>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createAttachment*
  name: createAttachment
  nameWithType: AsyncDocumentClient.createAttachment
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createAttachment
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertAttachment*
  name: upsertAttachment
  nameWithType: AsyncDocumentClient.upsertAttachment
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertAttachment
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceAttachment*
  name: replaceAttachment
  nameWithType: AsyncDocumentClient.replaceAttachment
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceAttachment
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteAttachment*
  name: deleteAttachment
  nameWithType: AsyncDocumentClient.deleteAttachment
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteAttachment
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachment*
  name: readAttachment
  nameWithType: AsyncDocumentClient.readAttachment
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachment
  package: com.microsoft.azure.cosmosdb.rx
- uid: 514bb0fd
  spec.java:
  - name: Observable<FeedResponse<Attachment>>
    fullName: Observable<FeedResponse<Attachment>>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachments*
  name: readAttachments
  nameWithType: AsyncDocumentClient.readAttachments
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachments
  package: com.microsoft.azure.cosmosdb.rx
- uid: 56cf705e
  spec.java:
  - name: Observable<MediaResponse>
    fullName: Observable<MediaResponse>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readMedia*
  name: readMedia
  nameWithType: AsyncDocumentClient.readMedia
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readMedia
  package: com.microsoft.azure.cosmosdb.rx
- uid: 76fcb9b7
  spec.java:
  - name: InputStream
    fullName: InputStream
- uid: ca2971d4
  spec.java:
  - name: MediaOptions
    fullName: MediaOptions
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.updateMedia*
  name: updateMedia
  nameWithType: AsyncDocumentClient.updateMedia
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.updateMedia
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryAttachments*
  name: queryAttachments
  nameWithType: AsyncDocumentClient.queryAttachments
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryAttachments
  package: com.microsoft.azure.cosmosdb.rx
- uid: 9782301e
  spec.java:
  - name: Observable<ResourceResponse<Conflict>>
    fullName: Observable<ResourceResponse<Conflict>>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflict*
  name: readConflict
  nameWithType: AsyncDocumentClient.readConflict
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflict
  package: com.microsoft.azure.cosmosdb.rx
- uid: e8cd0adb
  spec.java:
  - name: Observable<FeedResponse<Conflict>>
    fullName: Observable<FeedResponse<Conflict>>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflicts*
  name: readConflicts
  nameWithType: AsyncDocumentClient.readConflicts
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflicts
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryConflicts*
  name: queryConflicts
  nameWithType: AsyncDocumentClient.queryConflicts
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryConflicts
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteConflict*
  name: deleteConflict
  nameWithType: AsyncDocumentClient.deleteConflict
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteConflict
  package: com.microsoft.azure.cosmosdb.rx
- uid: 9dfe9b8f
  spec.java:
  - name: User
    fullName: User
- uid: b4795bb5
  spec.java:
  - name: Observable<ResourceResponse<User>>
    fullName: Observable<ResourceResponse<User>>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUser*
  name: createUser
  nameWithType: AsyncDocumentClient.createUser
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUser
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUser*
  name: upsertUser
  nameWithType: AsyncDocumentClient.upsertUser
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUser
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUser*
  name: replaceUser
  nameWithType: AsyncDocumentClient.replaceUser
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUser
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUser*
  name: deleteUser
  nameWithType: AsyncDocumentClient.deleteUser
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUser
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUser*
  name: readUser
  nameWithType: AsyncDocumentClient.readUser
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUser
  package: com.microsoft.azure.cosmosdb.rx
- uid: 3fe117c7
  spec.java:
  - name: Observable<FeedResponse<User>>
    fullName: Observable<FeedResponse<User>>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUsers*
  name: readUsers
  nameWithType: AsyncDocumentClient.readUsers
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUsers
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUsers*
  name: queryUsers
  nameWithType: AsyncDocumentClient.queryUsers
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUsers
  package: com.microsoft.azure.cosmosdb.rx
- uid: 09ea5ded
  spec.java:
  - name: Permission
    fullName: Permission
- uid: 1053ba8a
  spec.java:
  - name: Observable<ResourceResponse<Permission>>
    fullName: Observable<ResourceResponse<Permission>>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createPermission*
  name: createPermission
  nameWithType: AsyncDocumentClient.createPermission
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createPermission
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertPermission*
  name: upsertPermission
  nameWithType: AsyncDocumentClient.upsertPermission
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertPermission
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replacePermission*
  name: replacePermission
  nameWithType: AsyncDocumentClient.replacePermission
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replacePermission
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deletePermission*
  name: deletePermission
  nameWithType: AsyncDocumentClient.deletePermission
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deletePermission
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermission*
  name: readPermission
  nameWithType: AsyncDocumentClient.readPermission
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermission
  package: com.microsoft.azure.cosmosdb.rx
- uid: 0dcb6daf
  spec.java:
  - name: Observable<FeedResponse<Permission>>
    fullName: Observable<FeedResponse<Permission>>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermissions*
  name: readPermissions
  nameWithType: AsyncDocumentClient.readPermissions
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermissions
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryPermissions*
  name: queryPermissions
  nameWithType: AsyncDocumentClient.queryPermissions
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryPermissions
  package: com.microsoft.azure.cosmosdb.rx
- uid: 6844b26b
  spec.java:
  - name: Offer
    fullName: Offer
- uid: 2ab17c12
  spec.java:
  - name: Observable<ResourceResponse<Offer>>
    fullName: Observable<ResourceResponse<Offer>>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceOffer*
  name: replaceOffer
  nameWithType: AsyncDocumentClient.replaceOffer
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceOffer
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffer*
  name: readOffer
  nameWithType: AsyncDocumentClient.readOffer
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffer
  package: com.microsoft.azure.cosmosdb.rx
- uid: b319b15a
  spec.java:
  - name: Observable<FeedResponse<Offer>>
    fullName: Observable<FeedResponse<Offer>>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffers*
  name: readOffers
  nameWithType: AsyncDocumentClient.readOffers
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffers
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryOffers*
  name: queryOffers
  nameWithType: AsyncDocumentClient.queryOffers
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryOffers
  package: com.microsoft.azure.cosmosdb.rx
- uid: 1b53a197
  spec.java:
  - name: Observable<DatabaseAccount>
    fullName: Observable<DatabaseAccount>
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getDatabaseAccount*
  name: getDatabaseAccount
  nameWithType: AsyncDocumentClient.getDatabaseAccount
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getDatabaseAccount
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.close*
  name: close
  nameWithType: AsyncDocumentClient.close
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.close
  package: com.microsoft.azure.cosmosdb.rx
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  parent: com.microsoft.azure.cosmosdb.rx
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.yml
  name: AsyncDocumentClient
  nameWithType: AsyncDocumentClient
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
  type: Interface
  summary: >-
    <p>Provides a client-side logical representation of the Azure Cosmos DB database service. This async client is used to configure and execute requests against the service.</p>

    <p>

      <xref uid="com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient" data-throw-if-not-resolved="false">AsyncDocumentClient</xref> async APIs return <a href="https://github.com/ReactiveX/RxJava">rxJava</a>'s<code>Observable 

        </code> , and so you can use rxJava <xref uid="" data-throw-if-not-resolved="false">Observable</xref> functionalities. <b>The async <xref uid="" data-throw-if-not-resolved="false">Observable</xref> based APIs perform the requested operation only after subscription.</b></p>

    <p>The service client encapsulates the endpoint and credentials used to access the Cosmos DB service.</p>

    <p>To instantiate you can use the <xref uid="com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.Builder" data-throw-if-not-resolved="false">Builder</xref><pre><code>AsyncDocumentClient client = new AsyncDocumentClient.Builder()

                .withServiceEndpoint(serviceEndpoint)

                .withMasterKey(masterKey)

                .withConnectionPolicy(ConnectionPolicy.GetDefault())

                .withConsistencyLevel(ConsistencyLevel.Session)

                .build();

        </code></pre></p>
  syntax: *o1
- uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.Builder
  parent: com.microsoft.azure.cosmosdb.rx
  href: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.Builder.yml
  name: AsyncDocumentClient.Builder
  nameWithType: AsyncDocumentClient.Builder
  fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.Builder
  type: Class
  summary: >-
    <p>Helper class to build <xref uid="com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient" data-throw-if-not-resolved="false">AsyncDocumentClient</xref> instances as logical representation of the Azure Cosmos DB database service.</p>

    <p>

      <pre>

        <code>AsyncDocumentClient client = new AsyncDocumentClient.Builder()

                .withServiceEndpoint(serviceEndpoint)

                .withMasterKeyOrResourceToken(masterKeyOrResourceToken)

                .withConnectionPolicy(ConnectionPolicy.GetDefault())

                .withConsistencyLevel(ConsistencyLevel.Session)

                .build();

        </code>

      </pre>

    </p>
  syntax:
    content: public class Builder
