items:
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options
  id: _event_processor_options
  parent: com.microsoft.azure.eventprocessorhost
  children:
  - com.microsoft.azure.eventprocessorhost._event_processor_options.EventProcessorOptions()
  - com.microsoft.azure.eventprocessorhost._event_processor_options.getDefaultOptions()
  - com.microsoft.azure.eventprocessorhost._event_processor_options.getInitialOffsetProvider()
  - com.microsoft.azure.eventprocessorhost._event_processor_options.getInvokeProcessorAfterReceiveTimeout()
  - com.microsoft.azure.eventprocessorhost._event_processor_options.getMaxBatchSize()
  - com.microsoft.azure.eventprocessorhost._event_processor_options.getPrefetchCount()
  - com.microsoft.azure.eventprocessorhost._event_processor_options.getReceiverRuntimeMetricEnabled()
  - com.microsoft.azure.eventprocessorhost._event_processor_options.getReceiveTimeOut()
  - com.microsoft.azure.eventprocessorhost._event_processor_options.setExceptionNotification(Consumer<ExceptionReceivedEventArgs>)
  - com.microsoft.azure.eventprocessorhost._event_processor_options.setInitialOffsetProvider(Function<String, Object>)
  - com.microsoft.azure.eventprocessorhost._event_processor_options.setInvokeProcessorAfterReceiveTimeout(Boolean)
  - com.microsoft.azure.eventprocessorhost._event_processor_options.setMaxBatchSize(int)
  - com.microsoft.azure.eventprocessorhost._event_processor_options.setPrefetchCount(int)
  - com.microsoft.azure.eventprocessorhost._event_processor_options.setReceiverRuntimeMetricEnabled(boolean)
  - com.microsoft.azure.eventprocessorhost._event_processor_options.setReceiveTimeOut(Duration)
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: EventProcessorOptions
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  type: Class
  source:
    remote: &o0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-java
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 13
  package: com.microsoft.azure.eventprocessorhost
  syntax: &o1
    content: public class EventProcessorOptions
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - com.microsoft.azure.eventprocessorhost._event_processor_options.notifyOfException(String,Exception,String)
  - com.microsoft.azure.eventprocessorhost._event_processor_options.notifyOfException(String,Exception,String,String)
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.EventProcessorOptions()
  id: EventProcessorOptions()
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: EventProcessorOptions()
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.EventProcessorOptions()
  type: Constructor
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 43
  package: com.microsoft.azure.eventprocessorhost
  syntax:
    content: public EventProcessorOptions()
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.getDefaultOptions()
  id: getDefaultOptions()
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: getDefaultOptions()
  fullName: static EventProcessorOptions com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getDefaultOptions()
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 38
  package: com.microsoft.azure.eventprocessorhost
  syntax:
    content: public static EventProcessorOptions getDefaultOptions()
    return:
      type: com.microsoft.azure.eventprocessorhost._event_processor_options
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.getInitialOffsetProvider()
  id: getInitialOffsetProvider()
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: getInitialOffsetProvider()
  fullName: Function<String, Object> com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getInitialOffsetProvider()
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 130
  package: com.microsoft.azure.eventprocessorhost
  syntax:
    content: public Function<String, Object> getInitialOffsetProvider()
    return:
      type: 852bded3
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.getInvokeProcessorAfterReceiveTimeout()
  id: getInvokeProcessorAfterReceiveTimeout()
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: getInvokeProcessorAfterReceiveTimeout()
  fullName: Boolean com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getInvokeProcessorAfterReceiveTimeout()
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 157
  package: com.microsoft.azure.eventprocessorhost
  syntax:
    content: public Boolean getInvokeProcessorAfterReceiveTimeout()
    return:
      type: 866c2227
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.getMaxBatchSize()
  id: getMaxBatchSize()
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: getMaxBatchSize()
  fullName: int com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getMaxBatchSize()
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 67
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Returns the maximum number of events that will be passed to one call to <xref href="com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)" data-throw-if-not-resolved="false"></xref></p>

    <p></p>
  syntax:
    content: public int getMaxBatchSize()
    return:
      type: f75371fa
      description: <p>the maximum maximum number of events that will be passed to one call to <xref href="com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)" data-throw-if-not-resolved="false"></xref></p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.getPrefetchCount()
  id: getPrefetchCount()
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: getPrefetchCount()
  fullName: int com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getPrefetchCount()
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 107
  package: com.microsoft.azure.eventprocessorhost
  syntax:
    content: public int getPrefetchCount()
    return:
      type: f75371fa
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.getReceiverRuntimeMetricEnabled()
  id: getReceiverRuntimeMetricEnabled()
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: getReceiverRuntimeMetricEnabled()
  fullName: boolean com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getReceiverRuntimeMetricEnabled()
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 183
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Knob to enable/disable runtime metric of the receiver. If this is set to true, the first parameter <ref refid="" kindref="compound">com.microsoft.azure.eventprocessorhost.PartitionContext#runtimeInformation</ref> of <ref refid="" kindref="compound">IEventProcessor#onEvents(com.microsoft.azure.eventprocessorhost.PartitionContext, java.lang.Iterable)</ref> will be populated. </p>

    <p>Enabling this knob will add 3 additional properties to all raw AMQP messages received. </p>
  syntax:
    content: public boolean getReceiverRuntimeMetricEnabled()
    return:
      type: 4fc6e284
      description: <p>the <ref refid="" kindref="compound">boolean</ref> indicating, whether, the runtime metric of the receiver was enabled </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.getReceiveTimeOut()
  id: getReceiveTimeOut()
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: getReceiveTimeOut()
  fullName: Duration com.microsoft.azure.eventprocessorhost.EventProcessorOptions.getReceiveTimeOut()
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 87
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Returns the timeout for receive operations.</p>

    <p></p>
  syntax:
    content: public Duration getReceiveTimeOut()
    return:
      type: e02a2de0
      description: <p>the timeout for receive operations </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.setExceptionNotification(Consumer<ExceptionReceivedEventArgs>)
  id: setExceptionNotification(Consumer<ExceptionReceivedEventArgs>)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: setExceptionNotification(Consumer<ExceptionReceivedEventArgs> notificationHandler)
  fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setExceptionNotification(Consumer<ExceptionReceivedEventArgs> notificationHandler)
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 57
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Sets a handler which receives notification of general exceptions.</p>

    <p>Exceptions which occur while processing events from a particular Event Hub partition are delivered to the onError method of the event processor for that partition. This handler is called on occasions when there is no event processor associated with the throwing activity, or the event processor could not be created.</p>

    <p></p>
  syntax:
    content: public void setExceptionNotification(Consumer<ExceptionReceivedEventArgs> notificationHandler)
    parameters:
    - id: notificationHandler
      type: e0918e98com.microsoft.azure.eventprocessorhost._exception_received_event_argsa08ddfce
      description: <p>Handler which is called when an exception occurs. Set to null to stop handling. </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.setInitialOffsetProvider(Function<String, Object>)
  id: setInitialOffsetProvider(Function<String, Object>)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: setInitialOffsetProvider(Function<String, Object> initialOffsetProvider)
  fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setInitialOffsetProvider(Function<String, Object> initialOffsetProvider)
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 144
  package: com.microsoft.azure.eventprocessorhost
  syntax:
    content: public void setInitialOffsetProvider(Function<String, Object> initialOffsetProvider)
    parameters:
    - id: initialOffsetProvider
      type: 852bded3
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.setInvokeProcessorAfterReceiveTimeout(Boolean)
  id: setInvokeProcessorAfterReceiveTimeout(Boolean)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: setInvokeProcessorAfterReceiveTimeout(Boolean invokeProcessorAfterReceiveTimeout)
  fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setInvokeProcessorAfterReceiveTimeout(Boolean invokeProcessorAfterReceiveTimeout)
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 170
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Changes whether the <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false"></xref> will call <xref href="com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)" data-throw-if-not-resolved="false"></xref> with an empty iterable when a receive timeout occurs (true) or not (false).</p>

    <p>The default is false (no call).</p>

    <p></p>
  syntax:
    content: public void setInvokeProcessorAfterReceiveTimeout(Boolean invokeProcessorAfterReceiveTimeout)
    parameters:
    - id: invokeProcessorAfterReceiveTimeout
      type: 866c2227
      description: <p>the new value for what to do </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.setMaxBatchSize(int)
  id: setMaxBatchSize(int)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: setMaxBatchSize(int maxBatchSize)
  fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setMaxBatchSize(int maxBatchSize)
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 77
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Sets the maximum number of events that will be passed to one call to <xref href="com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)" data-throw-if-not-resolved="false"></xref></p>

    <p></p>
  syntax:
    content: public void setMaxBatchSize(int maxBatchSize)
    parameters:
    - id: maxBatchSize
      type: f75371fa
      description: <p>the maximum number of events that will be passed to one call to <xref href="com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)" data-throw-if-not-resolved="false"></xref></p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.setPrefetchCount(int)
  id: setPrefetchCount(int)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: setPrefetchCount(int prefetchCount)
  fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setPrefetchCount(int prefetchCount)
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 119
  package: com.microsoft.azure.eventprocessorhost
  syntax:
    content: public void setPrefetchCount(int prefetchCount)
    parameters:
    - id: prefetchCount
      type: f75371fa
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.setReceiverRuntimeMetricEnabled(boolean)
  id: setReceiverRuntimeMetricEnabled(boolean)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: setReceiverRuntimeMetricEnabled(boolean value)
  fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setReceiverRuntimeMetricEnabled(boolean value)
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 196
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Knob to enable/disable runtime metric of the receiver. If this is set to true, the first parameter <ref refid="" kindref="compound">com.microsoft.azure.eventprocessorhost.PartitionContext#runtimeInformation</ref> of <ref refid="" kindref="compound">IEventProcessor#onEvents(com.microsoft.azure.eventprocessorhost.PartitionContext, java.lang.Iterable)</ref> will be populated. </p>

    <p>Enabling this knob will add 3 additional properties to all raw AMQP messages received. </p>
  syntax:
    content: public void setReceiverRuntimeMetricEnabled(boolean value)
    parameters:
    - id: value
      type: 4fc6e284
      description: <p>the <ref refid="" kindref="compound">boolean</ref> to indicate, whether, the runtime metric of the receiver should be enabled </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.setReceiveTimeOut(Duration)
  id: setReceiveTimeOut(Duration)
  parent: com.microsoft.azure.eventprocessorhost._event_processor_options
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  langs:
  - java
  name: setReceiveTimeOut(Duration receiveTimeOut)
  fullName: void com.microsoft.azure.eventprocessorhost.EventProcessorOptions.setReceiveTimeOut(Duration receiveTimeOut)
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/EventProcessorOptions.java
    startLine: 97
  package: com.microsoft.azure.eventprocessorhost
  summary: >-
    <p>Sets the timeout for receive operations.</p>

    <p></p>
  syntax:
    content: public void setReceiveTimeOut(Duration receiveTimeOut)
    parameters:
    - id: receiveTimeOut
      type: e02a2de0
      description: <p>new timeout for receive operations </p>
references:
- uid: e0918e98com.microsoft.azure.eventprocessorhost._exception_received_event_argsa08ddfce
  spec.java:
  - name: Consumer<
    fullName: Consumer<
  - uid: com.microsoft.azure.eventprocessorhost._exception_received_event_args
    name: ExceptionReceivedEventArgs
    fullName: com.microsoft.azure.eventprocessorhost.ExceptionReceivedEventArgs
    href: com.microsoft.azure.eventprocessorhost._exception_received_event_args.yml
  - name: '>'
    fullName: '>'
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: 852bded3
  spec.java:
  - name: Function<String, Object>
    fullName: Function<String, Object>
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.notifyOfException(String,Exception,String)
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options.notifyOfException(String,Exception,String,String)
- uid: com.microsoft.azure.eventprocessorhost._exception_received_event_args
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._exception_received_event_args.yml
  name: ExceptionReceivedEventArgs
  fullName: com.microsoft.azure.eventprocessorhost.ExceptionReceivedEventArgs
  type: Class
  summary: <p>Passed as an argument to the general exception handler that can be set via <xref href="com.microsoft.azure.eventprocessorhost._event_processor_options" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class ExceptionReceivedEventArgs
- uid: com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM()
  parent: com.microsoft.azure.eventhubs._partition_receiver
  href: com.microsoft.azure.eventhubs._partition_receiver.yml
  name: START_OF_STREAM
  fullName: final String com.microsoft.azure.eventhubs.PartitionReceiver.START_OF_STREAM
  type: Field
  summary: <p>This is a constant defined to represent the start of a partition stream in EventHub. </p>
  syntax:
    content: public static final String START_OF_STREAM= "-1"
    return:
      type: 3d93591e
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  name: EventProcessorOptions
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  type: Class
  syntax: *o1
- uid: com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable<EventData>)
  parent: com.microsoft.azure.eventprocessorhost._i_event_processor
  href: com.microsoft.azure.eventprocessorhost._i_event_processor.yml
  name: onEvents(PartitionContext context, Iterable<EventData> messages)
  fullName: void com.microsoft.azure.eventprocessorhost.IEventProcessor.onEvents(PartitionContext context, Iterable<EventData> messages)
  type: Method
  summary: >-
    <p>Called by the processor host when a batch of events has arrived.</p>

    <p>This is where the real work of the event processor is done. It is normally called when one or more events have arrived. If the <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false"></xref> instance was set up with an <xref href="com.microsoft.azure.eventprocessorhost._event_processor_options" data-throw-if-not-resolved="false"></xref> on which setInvokeProcessorAfterReceiveTimeout(true) has been called, then if a receive times out, it will be called with an empty iterable. By default this option is false and receive timeouts do not cause a call to this method.</p>

    <p></p>
  syntax:
    content: public void onEvents(PartitionContext context, Iterable<EventData> messages)
    parameters:
    - id: context
      type: com.microsoft.azure.eventprocessorhost._partition_context
      description: <p>Information about the partition. </p>
    - id: messages
      type: 2a13b5a5com.microsoft.azure.eventhubs._event_dataa08ddfce
      description: <p>The events to be processed. May be empty. </p>
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  name: EventProcessorHost
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost
  type: Class
  syntax:
    content: public class EventProcessorHost
